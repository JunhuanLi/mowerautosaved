; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\finsh_ops.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\finsh_ops.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\OS -I..\OS\components\finsh -I..\OS\include -I..\OS\libcpu\arm\common -I..\OS\libcpu\arm\cortex-m4 -I..\OS\bsp\stm32f40x\Libraries\CMSIS\Include -I..\OS\bsp\stm32f40x\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\OS\bsp\stm32f40x\Libraries\CMSIS\ST\STM32F4xx\Include -I..\OS\bsp\stm32f40x\applications -I..\OS\bsp\stm32f40x\drivers -I..\OS\bsp\stm32f40x -I..\ext\inc -I..\tb_Application -I..\tb_Algorithm -I..\tb_Driver -IE:\Robotic_Platform\mdk_Prj\RTE -Id:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.8.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=520 -DSTM32F429xx -DUSE_STDPERIPH_DRIVER -DSTM32F429xx --omf_browse=.\objects\finsh_ops.crf ..\OS\components\finsh\finsh_ops.c]
                          THUMB

                          AREA ||i.OP_add_byte||, CODE, READONLY, ALIGN=2

                  OP_add_byte PROC
;;;54     /* --- add --- */
;;;55     void OP_add_byte()
000000  4905              LDR      r1,|L1.24|
;;;56     {
;;;57         OP_BIN_BYTE(+);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  f8102d08          LDRB     r2,[r0,#-8]!
000008  f8103f04          LDRB     r3,[r0,#4]!
00000c  441a              ADD      r2,r2,r3
00000e  f8002c04          STRB     r2,[r0,#-4]
000012  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;58     
;;;59     	return ;
;;;60     }
000014  4770              BX       lr
;;;61     
                          ENDP

000016  0000              DCW      0x0000
                  |L1.24|
                          DCD      finsh_sp

                          AREA ||i.OP_add_dword||, CODE, READONLY, ALIGN=2

                  OP_add_dword PROC
;;;68     
;;;69     void OP_add_dword()
000000  4903              LDR      r1,|L2.16|
;;;70     {
;;;71         OP_BIN_DWORD(+);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  e9702302          LDRD     r2,r3,[r0,#-8]!
000008  441a              ADD      r2,r2,r3
00000a  c004              STM      r0!,{r2}
00000c  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;72     
;;;73     	return ;
;;;74     }
00000e  4770              BX       lr
;;;75     
                          ENDP

                  |L2.16|
                          DCD      finsh_sp

                          AREA ||i.OP_add_word||, CODE, READONLY, ALIGN=2

                  OP_add_word PROC
;;;61     
;;;62     void OP_add_word()
000000  4905              LDR      r1,|L3.24|
;;;63     {
;;;64         OP_BIN_WORD(+);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  f8302d08          LDRH     r2,[r0,#-8]!
000008  f8303f04          LDRH     r3,[r0,#4]!
00000c  441a              ADD      r2,r2,r3
00000e  f8202c04          STRH     r2,[r0,#-4]
000012  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;65     
;;;66     	return ;
;;;67     }
000014  4770              BX       lr
;;;68     
                          ENDP

000016  0000              DCW      0x0000
                  |L3.24|
                          DCD      finsh_sp

                          AREA ||i.OP_and_byte||, CODE, READONLY, ALIGN=2

                  OP_and_byte PROC
;;;164    /* --- and --- */
;;;165    void OP_and_byte()
000000  4905              LDR      r1,|L4.24|
;;;166    {
;;;167    	OP_BIN_BYTE(&);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  f8102d08          LDRB     r2,[r0,#-8]!
000008  f8103f04          LDRB     r3,[r0,#4]!
00000c  401a              ANDS     r2,r2,r3
00000e  f8002c04          STRB     r2,[r0,#-4]
000012  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;168    
;;;169    	return ;
;;;170    }
000014  4770              BX       lr
;;;171    
                          ENDP

000016  0000              DCW      0x0000
                  |L4.24|
                          DCD      finsh_sp

                          AREA ||i.OP_and_dword||, CODE, READONLY, ALIGN=2

                  OP_and_dword PROC
;;;178    
;;;179    void OP_and_dword()
000000  4903              LDR      r1,|L5.16|
;;;180    {
;;;181    	OP_BIN_DWORD(&);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  e9702302          LDRD     r2,r3,[r0,#-8]!
000008  401a              ANDS     r2,r2,r3
00000a  c004              STM      r0!,{r2}
00000c  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;182    
;;;183    	return ;
;;;184    }
00000e  4770              BX       lr
;;;185    
                          ENDP

                  |L5.16|
                          DCD      finsh_sp

                          AREA ||i.OP_and_word||, CODE, READONLY, ALIGN=2

                  OP_and_word PROC
;;;171    
;;;172    void OP_and_word()
000000  4905              LDR      r1,|L6.24|
;;;173    {
;;;174    	OP_BIN_WORD(&);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  f8302d08          LDRH     r2,[r0,#-8]!
000008  f8303f04          LDRH     r3,[r0,#4]!
00000c  401a              ANDS     r2,r2,r3
00000e  f8202c04          STRH     r2,[r0,#-4]
000012  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;175    
;;;176    	return ;
;;;177    }
000014  4770              BX       lr
;;;178    
                          ENDP

000016  0000              DCW      0x0000
                  |L6.24|
                          DCD      finsh_sp

                          AREA ||i.OP_bw_byte||, CODE, READONLY, ALIGN=2

                  OP_bw_byte PROC
;;;230    /* --- bw --- */
;;;231    void OP_bw_byte()
000000  4803              LDR      r0,|L7.16|
;;;232    {
;;;233    	(finsh_sp - 1)->char_value = ~ ((finsh_sp - 1)->char_value);
000002  6800              LDR      r0,[r0,#0]  ; finsh_sp
000004  f8101d04          LDRB     r1,[r0,#-4]!
000008  43c9              MVNS     r1,r1
00000a  7001              STRB     r1,[r0,#0]
;;;234    
;;;235    	return ;
;;;236    }
00000c  4770              BX       lr
;;;237    
                          ENDP

00000e  0000              DCW      0x0000
                  |L7.16|
                          DCD      finsh_sp

                          AREA ||i.OP_bw_dword||, CODE, READONLY, ALIGN=2

                  OP_bw_dword PROC
;;;244    
;;;245    void OP_bw_dword()
000000  4803              LDR      r0,|L8.16|
;;;246    {
;;;247    	(finsh_sp - 1)->long_value = ~ ((finsh_sp - 1)->long_value);
000002  6800              LDR      r0,[r0,#0]  ; finsh_sp
000004  f8501d04          LDR      r1,[r0,#-4]!
000008  43c9              MVNS     r1,r1
00000a  6001              STR      r1,[r0,#0]
;;;248    
;;;249    	return ;
;;;250    }
00000c  4770              BX       lr
;;;251    
                          ENDP

00000e  0000              DCW      0x0000
                  |L8.16|
                          DCD      finsh_sp

                          AREA ||i.OP_bw_word||, CODE, READONLY, ALIGN=2

                  OP_bw_word PROC
;;;237    
;;;238    void OP_bw_word()
000000  4803              LDR      r0,|L9.16|
;;;239    {
;;;240    	(finsh_sp - 1)->short_value = ~ ((finsh_sp - 1)->short_value);
000002  6800              LDR      r0,[r0,#0]  ; finsh_sp
000004  f8301d04          LDRH     r1,[r0,#-4]!
000008  43c9              MVNS     r1,r1
00000a  8001              STRH     r1,[r0,#0]
;;;241    
;;;242    	return ;
;;;243    }
00000c  4770              BX       lr
;;;244    
                          ENDP

00000e  0000              DCW      0x0000
                  |L9.16|
                          DCD      finsh_sp

                          AREA ||i.OP_call||, CODE, READONLY, ALIGN=2

                  OP_call PROC
;;;443    /* --- call --- */
;;;444    void OP_call()
000000  b570              PUSH     {r4-r6,lr}
;;;445    {
;;;446    	/* the max number of arg*/
;;;447    	unsigned long parameterv[16];
;;;448    	unsigned int  parameters, i;
;;;449    
;;;450    	typedef unsigned long var_t;
;;;451    	typedef var_t (*op_func)();
;;;452    	op_func f;
;;;453    	var_t   r;
;;;454    
;;;455    	parameters = *finsh_pc ++;
000002  4a7a              LDR      r2,|L10.492|
000004  b09c              SUB      sp,sp,#0x70           ;445
;;;456    
;;;457    	i = 0; finsh_sp --;
000006  4d7a              LDR      r5,|L10.496|
000008  6810              LDR      r0,[r2,#0]            ;455  ; finsh_pc
00000a  ab0c              ADD      r3,sp,#0x30           ;447
00000c  f8101b01          LDRB     r1,[r0],#1            ;455
000010  6010              STR      r0,[r2,#0]  ; finsh_pc
000012  682a              LDR      r2,[r5,#0]  ; finsh_sp
000014  2000              MOVS     r0,#0
000016  1f12              SUBS     r2,r2,#4
000018  602a              STR      r2,[r5,#0]            ;445  ; finsh_sp
00001a  e008              B        |L10.46|
                  |L10.28|
;;;458    	while (i < parameters)
;;;459    	{
;;;460    		parameterv[parameters - 1 - i] = finsh_sp->long_value;
00001c  1a0e              SUBS     r6,r1,r0
00001e  eb030686          ADD      r6,r3,r6,LSL #2
000022  f8524904          LDR      r4,[r2],#-4
000026  f8464c04          STR      r4,[r6,#-4]
;;;461    		finsh_sp --;
00002a  1c40              ADDS     r0,r0,#1
00002c  602a              STR      r2,[r5,#0]  ; finsh_sp
                  |L10.46|
00002e  4288              CMP      r0,r1                 ;458
000030  d3f4              BCC      |L10.28|
;;;462    		i++;
;;;463    	}
;;;464    
;;;465    	f = (op_func)(finsh_sp->long_value);
;;;466    	switch (parameters)
000032  6814              LDR      r4,[r2,#0]
000034  2911              CMP      r1,#0x11
000036  d27d              BCS      |L10.308|
000038  e8dff001          TBB      [pc,r1]
00003c  090b0e12          DCB      0x09,0x0b,0x0e,0x12
000040  171c232c          DCB      0x17,0x1c,0x23,0x2c
000044  36404d5c          DCB      0x36,0x40,0x4d,0x5c
000048  6c7d90a5          DCB      0x6c,0x7d,0x90,0xa5
00004c  bb00              DCB      0xbb,0x00
;;;467    	{
;;;468    	case 0:
;;;469    		r = f(0);
00004e  2000              MOVS     r0,#0
;;;470    		break;
000050  e000              B        |L10.84|
;;;471    
;;;472    	case 1:
;;;473    		r = f(parameterv[0]);
000052  980c              LDR      r0,[sp,#0x30]
                  |L10.84|
000054  47a0              BLX      r4                    ;469
000056  e0c3              B        |L10.480|
000058  e9dd010c          LDRD     r0,r1,[sp,#0x30]      ;469
;;;474    		break;
;;;475    
;;;476    	case 2:
;;;477    		r = f(parameterv[0], parameterv[1]);
00005c  47a0              BLX      r4
;;;478    		break;
00005e  e0bf              B        |L10.480|
000060  ab0c              ADD      r3,sp,#0x30
000062  e8930007          LDM      r3,{r0-r2}
;;;479    
;;;480    	case 3:
;;;481    		r = f(parameterv[0], parameterv[1], parameterv[2]);
000066  47a0              BLX      r4
;;;482    		break;
000068  e0ba              B        |L10.480|
00006a  ae0c              ADD      r6,sp,#0x30
00006c  e896000f          LDM      r6,{r0-r3}
;;;483    
;;;484    	case 4:
;;;485    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3]);
000070  47a0              BLX      r4
;;;486    		break;
000072  e0b5              B        |L10.480|
;;;487    
;;;488    	case 5:
;;;489    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3],
000074  9810              LDR      r0,[sp,#0x40]
000076  ae0c              ADD      r6,sp,#0x30
000078  9000              STR      r0,[sp,#0]
00007a  e896000f          LDM      r6,{r0-r3}
00007e  47a0              BLX      r4
;;;490    				parameterv[4]);
;;;491    		break;
000080  e0ae              B        |L10.480|
000082  e9dd0110          LDRD     r0,r1,[sp,#0x40]
000086  ae0c              ADD      r6,sp,#0x30
000088  e9cd0100          STRD     r0,r1,[sp,#0]
00008c  e896000f          LDM      r6,{r0-r3}
;;;492    
;;;493    	case 6:
;;;494    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3],
000090  47a0              BLX      r4
;;;495    				parameterv[4], parameterv[5]);
;;;496    		break;
000092  e0a5              B        |L10.480|
000094  ab10              ADD      r3,sp,#0x40
000096  ae0c              ADD      r6,sp,#0x30
000098  e8930007          LDM      r3,{r0-r2}
00009c  e88d0007          STM      sp,{r0-r2}
0000a0  e896000f          LDM      r6,{r0-r3}
;;;497    
;;;498    	case 7:
;;;499    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3],
0000a4  47a0              BLX      r4
;;;500    				parameterv[4], parameterv[5], parameterv[6]);
;;;501    		break;
0000a6  e09b              B        |L10.480|
0000a8  ae10              ADD      r6,sp,#0x40
0000aa  e896000f          LDM      r6,{r0-r3}
0000ae  e88d000f          STM      sp,{r0-r3}
0000b2  ae0c              ADD      r6,sp,#0x30
0000b4  e896000f          LDM      r6,{r0-r3}
;;;502    
;;;503    	case 8:
;;;504    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3],
0000b8  47a0              BLX      r4
;;;505    				parameterv[4], parameterv[5], parameterv[6], parameterv[7]);
;;;506    		break;
0000ba  e091              B        |L10.480|
0000bc  ae11              ADD      r6,sp,#0x44
0000be  e896000f          LDM      r6,{r0-r3}
0000c2  ae01              ADD      r6,sp,#4
0000c4  e886000f          STM      r6,{r0-r3}
;;;507    
;;;508    	case 9:
;;;509    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3],
0000c8  9810              LDR      r0,[sp,#0x40]
0000ca  ae0c              ADD      r6,sp,#0x30
0000cc  9000              STR      r0,[sp,#0]
0000ce  e896000f          LDM      r6,{r0-r3}
0000d2  47a0              BLX      r4
;;;510    				parameterv[4], parameterv[5], parameterv[6], parameterv[7],
;;;511    				parameterv[8]);
;;;512    		break;
0000d4  e084              B        |L10.480|
0000d6  ae12              ADD      r6,sp,#0x48
0000d8  e896000f          LDM      r6,{r0-r3}
0000dc  ae02              ADD      r6,sp,#8
0000de  e886000f          STM      r6,{r0-r3}
0000e2  e9dd0110          LDRD     r0,r1,[sp,#0x40]
0000e6  ae0c              ADD      r6,sp,#0x30
0000e8  e9cd0100          STRD     r0,r1,[sp,#0]
0000ec  e896000f          LDM      r6,{r0-r3}
;;;513    
;;;514    	case 10:
;;;515    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3],
0000f0  47a0              BLX      r4
;;;516    				parameterv[4], parameterv[5], parameterv[6], parameterv[7],
;;;517    				parameterv[8], parameterv[9]);
;;;518    		break;
0000f2  e075              B        |L10.480|
0000f4  ae13              ADD      r6,sp,#0x4c
0000f6  e896000f          LDM      r6,{r0-r3}
0000fa  ae03              ADD      r6,sp,#0xc
0000fc  e886000f          STM      r6,{r0-r3}
000100  ab10              ADD      r3,sp,#0x40
000102  ae0c              ADD      r6,sp,#0x30
000104  e8930007          LDM      r3,{r0-r2}
000108  e88d0007          STM      sp,{r0-r2}
00010c  e896000f          LDM      r6,{r0-r3}
;;;519    
;;;520    	case 11:
;;;521    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3],
000110  47a0              BLX      r4
;;;522    				parameterv[4], parameterv[5], parameterv[6], parameterv[7],
;;;523    				parameterv[8], parameterv[9], parameterv[10]);
;;;524    		break;
000112  e065              B        |L10.480|
000114  ae14              ADD      r6,sp,#0x50
000116  e896000f          LDM      r6,{r0-r3}
00011a  ae04              ADD      r6,sp,#0x10
00011c  e886000f          STM      r6,{r0-r3}
000120  ae10              ADD      r6,sp,#0x40
000122  e896000f          LDM      r6,{r0-r3}
000126  e88d000f          STM      sp,{r0-r3}
00012a  ae0c              ADD      r6,sp,#0x30
00012c  e896000f          LDM      r6,{r0-r3}
;;;525    
;;;526    	case 12:
;;;527    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3],
000130  47a0              BLX      r4
;;;528    				parameterv[4], parameterv[5], parameterv[6], parameterv[7],
;;;529    				parameterv[8], parameterv[9], parameterv[10], parameterv[11]);
;;;530    		break;
000132  e055              B        |L10.480|
                  |L10.308|
000134  e053              B        |L10.478|
000136  ae15              ADD      r6,sp,#0x54
000138  e896000f          LDM      r6,{r0-r3}
00013c  ae05              ADD      r6,sp,#0x14
00013e  e886000f          STM      r6,{r0-r3}
000142  ae11              ADD      r6,sp,#0x44
000144  e896000f          LDM      r6,{r0-r3}
000148  ae01              ADD      r6,sp,#4
00014a  e886000f          STM      r6,{r0-r3}
;;;531    
;;;532    	case 13:
;;;533    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3],
00014e  9810              LDR      r0,[sp,#0x40]
000150  ae0c              ADD      r6,sp,#0x30
000152  9000              STR      r0,[sp,#0]
000154  e896000f          LDM      r6,{r0-r3}
000158  47a0              BLX      r4
;;;534    				parameterv[4], parameterv[5], parameterv[6], parameterv[7],
;;;535    				parameterv[8], parameterv[9], parameterv[10], parameterv[11],
;;;536    				parameterv[12]);
;;;537    		break;
00015a  e041              B        |L10.480|
00015c  ae16              ADD      r6,sp,#0x58
00015e  e896000f          LDM      r6,{r0-r3}
000162  ae06              ADD      r6,sp,#0x18
000164  e886000f          STM      r6,{r0-r3}
000168  ae12              ADD      r6,sp,#0x48
00016a  e896000f          LDM      r6,{r0-r3}
00016e  ae02              ADD      r6,sp,#8
000170  e886000f          STM      r6,{r0-r3}
000174  e9dd0110          LDRD     r0,r1,[sp,#0x40]
000178  ae0c              ADD      r6,sp,#0x30
00017a  e9cd0100          STRD     r0,r1,[sp,#0]
00017e  e896000f          LDM      r6,{r0-r3}
;;;538    
;;;539    	case 14:
;;;540    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3],
000182  47a0              BLX      r4
;;;541    				parameterv[4], parameterv[5], parameterv[6], parameterv[7],
;;;542    				parameterv[8], parameterv[9], parameterv[10], parameterv[11],
;;;543    				parameterv[12], parameterv[13]);
;;;544    		break;
000184  e02c              B        |L10.480|
000186  ae17              ADD      r6,sp,#0x5c
000188  e896000f          LDM      r6,{r0-r3}
00018c  ae07              ADD      r6,sp,#0x1c
00018e  e886000f          STM      r6,{r0-r3}
000192  ae13              ADD      r6,sp,#0x4c
000194  e896000f          LDM      r6,{r0-r3}
000198  ae03              ADD      r6,sp,#0xc
00019a  e886000f          STM      r6,{r0-r3}
00019e  ab10              ADD      r3,sp,#0x40
0001a0  ae0c              ADD      r6,sp,#0x30
0001a2  e8930007          LDM      r3,{r0-r2}
0001a6  e88d0007          STM      sp,{r0-r2}
0001aa  e896000f          LDM      r6,{r0-r3}
;;;545    
;;;546    	case 15:
;;;547    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3],
0001ae  47a0              BLX      r4
;;;548    				parameterv[4], parameterv[5], parameterv[6], parameterv[7],
;;;549    				parameterv[8], parameterv[9], parameterv[10], parameterv[11],
;;;550    				parameterv[12], parameterv[13], parameterv[14]);
;;;551    		break;
0001b0  e016              B        |L10.480|
0001b2  ae18              ADD      r6,sp,#0x60
0001b4  e896000f          LDM      r6,{r0-r3}
0001b8  ae08              ADD      r6,sp,#0x20
0001ba  e886000f          STM      r6,{r0-r3}
0001be  ae14              ADD      r6,sp,#0x50
0001c0  e896000f          LDM      r6,{r0-r3}
0001c4  ae04              ADD      r6,sp,#0x10
0001c6  e886000f          STM      r6,{r0-r3}
0001ca  ae10              ADD      r6,sp,#0x40
0001cc  e896000f          LDM      r6,{r0-r3}
0001d0  e88d000f          STM      sp,{r0-r3}
0001d4  ae0c              ADD      r6,sp,#0x30
0001d6  e896000f          LDM      r6,{r0-r3}
;;;552    
;;;553    	case 16:
;;;554    		r = f(parameterv[0], parameterv[1], parameterv[2], parameterv[3],
0001da  47a0              BLX      r4
;;;555    				parameterv[4], parameterv[5], parameterv[6], parameterv[7],
;;;556    				parameterv[8], parameterv[9], parameterv[10], parameterv[11],
;;;557    				parameterv[12], parameterv[13], parameterv[14], parameterv[15]);
;;;558    		break;
0001dc  e000              B        |L10.480|
                  |L10.478|
;;;559    
;;;560    	default:
;;;561    		r = 0;
0001de  2000              MOVS     r0,#0
                  |L10.480|
;;;562    		break;
;;;563    	}
;;;564    
;;;565    	finsh_sp->long_value = r;
0001e0  6829              LDR      r1,[r5,#0]  ; finsh_sp
0001e2  c101              STM      r1!,{r0}
;;;566    	finsh_sp ++;
0001e4  6029              STR      r1,[r5,#0]  ; finsh_sp
;;;567    
;;;568    	return ;
;;;569    }
0001e6  b01c              ADD      sp,sp,#0x70
0001e8  bd70              POP      {r4-r6,pc}
;;;570    
                          ENDP

0001ea  0000              DCW      0x0000
                  |L10.492|
                          DCD      finsh_pc
                  |L10.496|
                          DCD      finsh_sp

                          AREA ||i.OP_div_byte||, CODE, READONLY, ALIGN=2

                  OP_div_byte PROC
;;;98     /* --- div --- */
;;;99     void OP_div_byte()
000000  4905              LDR      r1,|L11.24|
;;;100    {
;;;101    	OP_BIN_BYTE(/);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  f8102d08          LDRB     r2,[r0,#-8]!
000008  f8103f04          LDRB     r3,[r0,#4]!
00000c  fbb2f2f3          UDIV     r2,r2,r3
000010  f8002c04          STRB     r2,[r0,#-4]
000014  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;102    
;;;103    	return ;
;;;104    }
000016  4770              BX       lr
;;;105    
                          ENDP

                  |L11.24|
                          DCD      finsh_sp

                          AREA ||i.OP_div_dword||, CODE, READONLY, ALIGN=2

                  OP_div_dword PROC
;;;112    
;;;113    void OP_div_dword()
000000  4904              LDR      r1,|L12.20|
;;;114    {
;;;115    	OP_BIN_DWORD(/);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  e9702302          LDRD     r2,r3,[r0,#-8]!
000008  fb92f2f3          SDIV     r2,r2,r3
00000c  c004              STM      r0!,{r2}
00000e  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;116    
;;;117    	return ;
;;;118    }
000010  4770              BX       lr
;;;119    
                          ENDP

000012  0000              DCW      0x0000
                  |L12.20|
                          DCD      finsh_sp

                          AREA ||i.OP_div_word||, CODE, READONLY, ALIGN=2

                  OP_div_word PROC
;;;105    
;;;106    void OP_div_word()
000000  4905              LDR      r1,|L13.24|
;;;107    {
;;;108    	OP_BIN_WORD(/);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  f9302d08          LDRSH    r2,[r0,#-8]!
000008  f9303f04          LDRSH    r3,[r0,#4]!
00000c  fb92f2f3          SDIV     r2,r2,r3
000010  f8202c04          STRH     r2,[r0,#-4]
000014  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;109    
;;;110    	return ;
;;;111    }
000016  4770              BX       lr
;;;112    
                          ENDP

                  |L13.24|
                          DCD      finsh_sp

                          AREA ||i.OP_ld_byte||, CODE, READONLY, ALIGN=2

                  OP_ld_byte PROC
;;;296    /* --- ld --- */
;;;297    void OP_ld_byte()
000000  4905              LDR      r1,|L14.24|
;;;298    {
;;;299    	finsh_sp->char_value = *finsh_pc;
000002  4a06              LDR      r2,|L14.28|
000004  6808              LDR      r0,[r1,#0]  ; finsh_pc
000006  7803              LDRB     r3,[r0,#0]
000008  6810              LDR      r0,[r2,#0]  ; finsh_sp
00000a  f8003b04          STRB     r3,[r0],#4
;;;300    
;;;301    	finsh_sp++;
;;;302    	finsh_pc++;
00000e  6010              STR      r0,[r2,#0]  ; finsh_sp
000010  6808              LDR      r0,[r1,#0]  ; finsh_pc
000012  1c40              ADDS     r0,r0,#1
000014  6008              STR      r0,[r1,#0]  ; finsh_pc
;;;303    
;;;304    	return ;
;;;305    }
000016  4770              BX       lr
;;;306    
                          ENDP

                  |L14.24|
                          DCD      finsh_pc
                  |L14.28|
                          DCD      finsh_sp

                          AREA ||i.OP_ld_dword||, CODE, READONLY, ALIGN=2

                  OP_ld_dword PROC
;;;316    
;;;317    void OP_ld_dword()
000000  4906              LDR      r1,|L15.28|
;;;318    {
;;;319    	finsh_sp->long_value = FINSH_GET32(finsh_pc);
000002  6808              LDR      r0,[r1,#0]  ; finsh_pc
000004  78c2              LDRB     r2,[r0,#3]
000006  6803              LDR      r3,[r0,#0]
000008  f362631f          BFI      r3,r2,#24,#8
00000c  4a04              LDR      r2,|L15.32|
00000e  6810              LDR      r0,[r2,#0]  ; finsh_sp
000010  c008              STM      r0!,{r3}
;;;320    
;;;321    	finsh_sp ++;
;;;322    	finsh_pc += 4;
000012  6010              STR      r0,[r2,#0]  ; finsh_sp
000014  6808              LDR      r0,[r1,#0]  ; finsh_pc
000016  1d00              ADDS     r0,r0,#4
000018  6008              STR      r0,[r1,#0]  ; finsh_pc
;;;323    
;;;324    	return ;
;;;325    }
00001a  4770              BX       lr
;;;326    
                          ENDP

                  |L15.28|
                          DCD      finsh_pc
                  |L15.32|
                          DCD      finsh_sp

                          AREA ||i.OP_ld_value_byte||, CODE, READONLY, ALIGN=2

                  OP_ld_value_byte PROC
;;;326    
;;;327    void OP_ld_value_byte()
000000  4907              LDR      r1,|L16.32|
;;;328    {
;;;329    	char* c;
;;;330    
;;;331    	c = (char*) (FINSH_GET32(finsh_pc));
000002  6808              LDR      r0,[r1,#0]  ; finsh_pc
000004  78c2              LDRB     r2,[r0,#3]
000006  6800              LDR      r0,[r0,#0]
000008  f362601f          BFI      r0,r2,#24,#8
;;;332    
;;;333    	finsh_sp->char_value = *c;
00000c  4a05              LDR      r2,|L16.36|
00000e  7803              LDRB     r3,[r0,#0]
000010  6810              LDR      r0,[r2,#0]  ; finsh_sp
000012  f8003b04          STRB     r3,[r0],#4
;;;334    
;;;335    	finsh_sp ++;
;;;336    	finsh_pc += 4;
000016  6010              STR      r0,[r2,#0]  ; finsh_sp
000018  6808              LDR      r0,[r1,#0]  ; finsh_pc
00001a  1d00              ADDS     r0,r0,#4
00001c  6008              STR      r0,[r1,#0]  ; finsh_pc
;;;337    
;;;338    	return;
;;;339    }
00001e  4770              BX       lr
;;;340    
                          ENDP

                  |L16.32|
                          DCD      finsh_pc
                  |L16.36|
                          DCD      finsh_sp

                          AREA ||i.OP_ld_value_byte_stack||, CODE, READONLY, ALIGN=2

                  OP_ld_value_byte_stack PROC
;;;340    
;;;341    void OP_ld_value_byte_stack()
000000  4803              LDR      r0,|L17.16|
;;;342    {
;;;343    	char* c;
;;;344    
;;;345    	c = (char *)(finsh_sp - 1)->long_value;
000002  6800              LDR      r0,[r0,#0]  ; finsh_sp
000004  f8501d04          LDR      r1,[r0,#-4]!
;;;346    	(finsh_sp - 1)->char_value = *c;
000008  7809              LDRB     r1,[r1,#0]
00000a  7001              STRB     r1,[r0,#0]
;;;347    
;;;348    	return;
;;;349    }
00000c  4770              BX       lr
;;;350    
                          ENDP

00000e  0000              DCW      0x0000
                  |L17.16|
                          DCD      finsh_sp

                          AREA ||i.OP_ld_value_dword||, CODE, READONLY, ALIGN=2

                  OP_ld_value_dword PROC
;;;374    
;;;375    void OP_ld_value_dword()
000000  4907              LDR      r1,|L18.32|
;;;376    {
;;;377    	long* l;
;;;378    
;;;379    	l = (long*) (FINSH_GET32(finsh_pc));
000002  6808              LDR      r0,[r1,#0]  ; finsh_pc
000004  78c2              LDRB     r2,[r0,#3]
000006  6800              LDR      r0,[r0,#0]
000008  f362601f          BFI      r0,r2,#24,#8
;;;380    
;;;381    	finsh_sp->long_value = *l;
00000c  4a05              LDR      r2,|L18.36|
00000e  6803              LDR      r3,[r0,#0]
000010  6810              LDR      r0,[r2,#0]  ; finsh_sp
000012  c008              STM      r0!,{r3}
;;;382    
;;;383    	finsh_sp ++;
;;;384    	finsh_pc += 4;
000014  6010              STR      r0,[r2,#0]  ; finsh_sp
000016  6808              LDR      r0,[r1,#0]  ; finsh_pc
000018  1d00              ADDS     r0,r0,#4
00001a  6008              STR      r0,[r1,#0]  ; finsh_pc
;;;385    
;;;386    	return;
;;;387    }
00001c  4770              BX       lr
;;;388    
                          ENDP

00001e  0000              DCW      0x0000
                  |L18.32|
                          DCD      finsh_pc
                  |L18.36|
                          DCD      finsh_sp

                          AREA ||i.OP_ld_value_dword_stack||, CODE, READONLY, ALIGN=2

                  OP_ld_value_dword_stack PROC
;;;388    
;;;389    void OP_ld_value_dword_stack()
000000  4803              LDR      r0,|L19.16|
;;;390    {
;;;391    	long* l;
;;;392    
;;;393    	l = (long *)(finsh_sp - 1)->long_value;
000002  6800              LDR      r0,[r0,#0]  ; finsh_sp
000004  f8501d04          LDR      r1,[r0,#-4]!
;;;394    	(finsh_sp - 1)->long_value = *l;
000008  6809              LDR      r1,[r1,#0]
00000a  6001              STR      r1,[r0,#0]
;;;395    
;;;396    	return;
;;;397    }
00000c  4770              BX       lr
;;;398    
                          ENDP

00000e  0000              DCW      0x0000
                  |L19.16|
                          DCD      finsh_sp

                          AREA ||i.OP_ld_value_word||, CODE, READONLY, ALIGN=2

                  OP_ld_value_word PROC
;;;350    
;;;351    void OP_ld_value_word()
000000  4907              LDR      r1,|L20.32|
;;;352    {
;;;353    	short* s;
;;;354    
;;;355    	s = (short*) (FINSH_GET32(finsh_pc));
000002  6808              LDR      r0,[r1,#0]  ; finsh_pc
000004  78c2              LDRB     r2,[r0,#3]
000006  6800              LDR      r0,[r0,#0]
000008  f362601f          BFI      r0,r2,#24,#8
;;;356    
;;;357    	finsh_sp->short_value = *s;
00000c  4a05              LDR      r2,|L20.36|
00000e  8803              LDRH     r3,[r0,#0]
000010  6810              LDR      r0,[r2,#0]  ; finsh_sp
000012  f8203b04          STRH     r3,[r0],#4
;;;358    
;;;359    	finsh_sp ++;
;;;360    	finsh_pc += 4;
000016  6010              STR      r0,[r2,#0]  ; finsh_sp
000018  6808              LDR      r0,[r1,#0]  ; finsh_pc
00001a  1d00              ADDS     r0,r0,#4
00001c  6008              STR      r0,[r1,#0]  ; finsh_pc
;;;361    
;;;362    	return;
;;;363    }
00001e  4770              BX       lr
;;;364    
                          ENDP

                  |L20.32|
                          DCD      finsh_pc
                  |L20.36|
                          DCD      finsh_sp

                          AREA ||i.OP_ld_value_word_stack||, CODE, READONLY, ALIGN=2

                  OP_ld_value_word_stack PROC
;;;364    
;;;365    void OP_ld_value_word_stack()
000000  4803              LDR      r0,|L21.16|
;;;366    {
;;;367    	short* s;
;;;368    
;;;369    	s = (short *)(finsh_sp - 1)->long_value;
000002  6800              LDR      r0,[r0,#0]  ; finsh_sp
000004  f8501d04          LDR      r1,[r0,#-4]!
;;;370    	(finsh_sp - 1)->short_value = *s;
000008  8809              LDRH     r1,[r1,#0]
00000a  8001              STRH     r1,[r0,#0]
;;;371    
;;;372    	return;
;;;373    }
00000c  4770              BX       lr
;;;374    
                          ENDP

00000e  0000              DCW      0x0000
                  |L21.16|
                          DCD      finsh_sp

                          AREA ||i.OP_ld_word||, CODE, READONLY, ALIGN=2

                  OP_ld_word PROC
;;;306    
;;;307    void OP_ld_word()
000000  4905              LDR      r1,|L22.24|
;;;308    {
;;;309    	finsh_sp->short_value = FINSH_GET16(finsh_pc);
000002  4a06              LDR      r2,|L22.28|
000004  6808              LDR      r0,[r1,#0]  ; finsh_pc
000006  8803              LDRH     r3,[r0,#0]
000008  6810              LDR      r0,[r2,#0]  ; finsh_sp
00000a  f8203b04          STRH     r3,[r0],#4
;;;310    
;;;311    	finsh_sp ++;
;;;312    	finsh_pc += 2;
00000e  6010              STR      r0,[r2,#0]  ; finsh_sp
000010  6808              LDR      r0,[r1,#0]  ; finsh_pc
000012  1c80              ADDS     r0,r0,#2
000014  6008              STR      r0,[r1,#0]  ; finsh_pc
;;;313    
;;;314    	return ;
;;;315    }
000016  4770              BX       lr
;;;316    
                          ENDP

                  |L22.24|
                          DCD      finsh_pc
                  |L22.28|
                          DCD      finsh_sp

                          AREA ||i.OP_mod_byte||, CODE, READONLY, ALIGN=2

                  OP_mod_byte PROC
;;;120    /* --- mod --- */
;;;121    void OP_mod_byte()
000000  4b07              LDR      r3,|L23.32|
;;;122    {
000002  b510              PUSH     {r4,lr}
;;;123    	OP_BIN_BYTE(%);
000004  6818              LDR      r0,[r3,#0]  ; finsh_sp
000006  f8101d08          LDRB     r1,[r0,#-8]!
00000a  f8102f04          LDRB     r2,[r0,#4]!
00000e  fbb1f4f2          UDIV     r4,r1,r2
000012  fb021114          MLS      r1,r2,r4,r1
000016  f8001c04          STRB     r1,[r0,#-4]
00001a  6018              STR      r0,[r3,#0]  ; finsh_sp
;;;124    
;;;125    	return ;
;;;126    }
00001c  bd10              POP      {r4,pc}
;;;127    
                          ENDP

00001e  0000              DCW      0x0000
                  |L23.32|
                          DCD      finsh_sp

                          AREA ||i.OP_mod_dword||, CODE, READONLY, ALIGN=2

                  OP_mod_dword PROC
;;;134    
;;;135    void OP_mod_dword()
000000  4b05              LDR      r3,|L24.24|
;;;136    {
000002  b510              PUSH     {r4,lr}
;;;137    	OP_BIN_DWORD(%);
000004  6818              LDR      r0,[r3,#0]  ; finsh_sp
000006  e9701202          LDRD     r1,r2,[r0,#-8]!
00000a  fb91f4f2          SDIV     r4,r1,r2
00000e  fb021114          MLS      r1,r2,r4,r1
000012  c002              STM      r0!,{r1}
000014  6018              STR      r0,[r3,#0]  ; finsh_sp
;;;138    
;;;139    	return ;
;;;140    }
000016  bd10              POP      {r4,pc}
;;;141    
                          ENDP

                  |L24.24|
                          DCD      finsh_sp

                          AREA ||i.OP_mod_word||, CODE, READONLY, ALIGN=2

                  OP_mod_word PROC
;;;127    
;;;128    void OP_mod_word()
000000  4b07              LDR      r3,|L25.32|
;;;129    {
000002  b510              PUSH     {r4,lr}
;;;130    	OP_BIN_WORD(%);
000004  6818              LDR      r0,[r3,#0]  ; finsh_sp
000006  f9301d08          LDRSH    r1,[r0,#-8]!
00000a  f9302f04          LDRSH    r2,[r0,#4]!
00000e  fb91f4f2          SDIV     r4,r1,r2
000012  fb021114          MLS      r1,r2,r4,r1
000016  f8201c04          STRH     r1,[r0,#-4]
00001a  6018              STR      r0,[r3,#0]  ; finsh_sp
;;;131    
;;;132    	return ;
;;;133    }
00001c  bd10              POP      {r4,pc}
;;;134    
                          ENDP

00001e  0000              DCW      0x0000
                  |L25.32|
                          DCD      finsh_sp

                          AREA ||i.OP_mul_byte||, CODE, READONLY, ALIGN=2

                  OP_mul_byte PROC
;;;142    /* --- mul --- */
;;;143    void OP_mul_byte()
000000  4905              LDR      r1,|L26.24|
;;;144    {
;;;145        OP_BIN_BYTE(*);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  f8102d08          LDRB     r2,[r0,#-8]!
000008  f8103f04          LDRB     r3,[r0,#4]!
00000c  fb12f203          SMULBB   r2,r2,r3
000010  f8002c04          STRB     r2,[r0,#-4]
000014  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;146    
;;;147    	return ;
;;;148    }
000016  4770              BX       lr
;;;149    
                          ENDP

                  |L26.24|
                          DCD      finsh_sp

                          AREA ||i.OP_mul_dword||, CODE, READONLY, ALIGN=2

                  OP_mul_dword PROC
;;;156    
;;;157    void OP_mul_dword()
000000  4903              LDR      r1,|L27.16|
;;;158    {
;;;159    	OP_BIN_DWORD(*);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  e9702302          LDRD     r2,r3,[r0,#-8]!
000008  435a              MULS     r2,r3,r2
00000a  c004              STM      r0!,{r2}
00000c  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;160    
;;;161    	return ;
;;;162    }
00000e  4770              BX       lr
;;;163    
                          ENDP

                  |L27.16|
                          DCD      finsh_sp

                          AREA ||i.OP_mul_word||, CODE, READONLY, ALIGN=2

                  OP_mul_word PROC
;;;149    
;;;150    void OP_mul_word()
000000  4905              LDR      r1,|L28.24|
;;;151    {
;;;152    	OP_BIN_WORD(*);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  f8302d08          LDRH     r2,[r0,#-8]!
000008  f8303f04          LDRH     r3,[r0,#4]!
00000c  fb12f203          SMULBB   r2,r2,r3
000010  f8202c04          STRH     r2,[r0,#-4]
000014  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;153    
;;;154    	return ;
;;;155    }
000016  4770              BX       lr
;;;156    
                          ENDP

                  |L28.24|
                          DCD      finsh_sp

                          AREA ||i.OP_no_op||, CODE, READONLY, ALIGN=1

                  OP_no_op PROC
;;;47     /* --- noop --- */
;;;48     void OP_no_op()
000000  4770              BX       lr
;;;49     {
;;;50     	/* none */
;;;51     	return ;
;;;52     }
;;;53     
                          ENDP


                          AREA ||i.OP_or_byte||, CODE, READONLY, ALIGN=2

                  OP_or_byte PROC
;;;186    /* --- or --- */
;;;187    void OP_or_byte()
000000  4905              LDR      r1,|L30.24|
;;;188    {
;;;189    	OP_BIN_BYTE(|);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  f8102d08          LDRB     r2,[r0,#-8]!
000008  f8103f04          LDRB     r3,[r0,#4]!
00000c  431a              ORRS     r2,r2,r3
00000e  f8002c04          STRB     r2,[r0,#-4]
000012  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;190    
;;;191    	return ;
;;;192    }
000014  4770              BX       lr
;;;193    
                          ENDP

000016  0000              DCW      0x0000
                  |L30.24|
                          DCD      finsh_sp

                          AREA ||i.OP_or_dword||, CODE, READONLY, ALIGN=2

                  OP_or_dword PROC
;;;200    
;;;201    void OP_or_dword()
000000  4903              LDR      r1,|L31.16|
;;;202    {
;;;203    	OP_BIN_DWORD(|);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  e9702302          LDRD     r2,r3,[r0,#-8]!
000008  431a              ORRS     r2,r2,r3
00000a  c004              STM      r0!,{r2}
00000c  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;204    
;;;205    	return ;
;;;206    }
00000e  4770              BX       lr
;;;207    
                          ENDP

                  |L31.16|
                          DCD      finsh_sp

                          AREA ||i.OP_or_word||, CODE, READONLY, ALIGN=2

                  OP_or_word PROC
;;;193    
;;;194    void OP_or_word()
000000  4905              LDR      r1,|L32.24|
;;;195    {
;;;196    	OP_BIN_WORD(|);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  f8302d08          LDRH     r2,[r0,#-8]!
000008  f8303f04          LDRH     r3,[r0,#4]!
00000c  431a              ORRS     r2,r2,r3
00000e  f8202c04          STRH     r2,[r0,#-4]
000012  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;197    
;;;198    	return ;
;;;199    }
000014  4770              BX       lr
;;;200    
                          ENDP

000016  0000              DCW      0x0000
                  |L32.24|
                          DCD      finsh_sp

                          AREA ||i.OP_pop||, CODE, READONLY, ALIGN=2

                  OP_pop PROC
;;;436    /* --- pop --- */
;;;437    void OP_pop()
000000  4802              LDR      r0,|L33.12|
;;;438    {
;;;439    	finsh_sp --;
000002  6801              LDR      r1,[r0,#0]  ; finsh_sp
000004  1f09              SUBS     r1,r1,#4
000006  6001              STR      r1,[r0,#0]  ; finsh_sp
;;;440    	return ;
;;;441    }
000008  4770              BX       lr
;;;442    
                          ENDP

00000a  0000              DCW      0x0000
                  |L33.12|
                          DCD      finsh_sp

                          AREA ||i.OP_shl_byte||, CODE, READONLY, ALIGN=2

                  OP_shl_byte PROC
;;;252    /* --- shl --- */
;;;253    void OP_shl_byte()
000000  4905              LDR      r1,|L34.24|
;;;254    {
;;;255    	OP_BIN_BYTE(<<);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  f8102d08          LDRB     r2,[r0,#-8]!
000008  f8103f04          LDRB     r3,[r0,#4]!
00000c  409a              LSLS     r2,r2,r3
00000e  f8002c04          STRB     r2,[r0,#-4]
000012  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;256    
;;;257    	return ;
;;;258    }
000014  4770              BX       lr
;;;259    
                          ENDP

000016  0000              DCW      0x0000
                  |L34.24|
                          DCD      finsh_sp

                          AREA ||i.OP_shl_dword||, CODE, READONLY, ALIGN=2

                  OP_shl_dword PROC
;;;266    
;;;267    void OP_shl_dword()
000000  4905              LDR      r1,|L35.24|
;;;268    {
;;;269    	OP_BIN_DWORD(<<);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  f8502d08          LDR      r2,[r0,#-8]!
000008  f8103f04          LDRB     r3,[r0,#4]!
00000c  409a              LSLS     r2,r2,r3
00000e  f8402c04          STR      r2,[r0,#-4]
000012  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;270    
;;;271    	return ;
;;;272    }
000014  4770              BX       lr
;;;273    
                          ENDP

000016  0000              DCW      0x0000
                  |L35.24|
                          DCD      finsh_sp

                          AREA ||i.OP_shl_word||, CODE, READONLY, ALIGN=2

                  OP_shl_word PROC
;;;259    
;;;260    void OP_shl_word()
000000  4905              LDR      r1,|L36.24|
;;;261    {
;;;262    	OP_BIN_WORD(<<);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  f8302d08          LDRH     r2,[r0,#-8]!
000008  f8103f04          LDRB     r3,[r0,#4]!
00000c  409a              LSLS     r2,r2,r3
00000e  f8202c04          STRH     r2,[r0,#-4]
000012  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;263    
;;;264    	return ;
;;;265    }
000014  4770              BX       lr
;;;266    
                          ENDP

000016  0000              DCW      0x0000
                  |L36.24|
                          DCD      finsh_sp

                          AREA ||i.OP_shr_byte||, CODE, READONLY, ALIGN=2

                  OP_shr_byte PROC
;;;274    /* --- shr --- */
;;;275    void OP_shr_byte()
000000  4905              LDR      r1,|L37.24|
;;;276    {
;;;277    	OP_BIN_BYTE(>>);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  f8102d08          LDRB     r2,[r0,#-8]!
000008  f8103f04          LDRB     r3,[r0,#4]!
00000c  40da              LSRS     r2,r2,r3
00000e  f8002c04          STRB     r2,[r0,#-4]
000012  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;278    
;;;279    	return ;
;;;280    }
000014  4770              BX       lr
;;;281    
                          ENDP

000016  0000              DCW      0x0000
                  |L37.24|
                          DCD      finsh_sp

                          AREA ||i.OP_shr_dword||, CODE, READONLY, ALIGN=2

                  OP_shr_dword PROC
;;;288    
;;;289    void OP_shr_dword()
000000  4905              LDR      r1,|L38.24|
;;;290    {
;;;291    	OP_BIN_DWORD(>>);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  f8502d08          LDR      r2,[r0,#-8]!
000008  f8103f04          LDRB     r3,[r0,#4]!
00000c  411a              ASRS     r2,r2,r3
00000e  f8402c04          STR      r2,[r0,#-4]
000012  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;292    
;;;293    	return ;
;;;294    }
000014  4770              BX       lr
;;;295    
                          ENDP

000016  0000              DCW      0x0000
                  |L38.24|
                          DCD      finsh_sp

                          AREA ||i.OP_shr_word||, CODE, READONLY, ALIGN=2

                  OP_shr_word PROC
;;;281    
;;;282    void OP_shr_word()
000000  4905              LDR      r1,|L39.24|
;;;283    {
;;;284    	OP_BIN_WORD(>>);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  f9302d08          LDRSH    r2,[r0,#-8]!
000008  f8103f04          LDRB     r3,[r0,#4]!
00000c  411a              ASRS     r2,r2,r3
00000e  f8202c04          STRH     r2,[r0,#-4]
000012  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;285    
;;;286    	return ;
;;;287    }
000014  4770              BX       lr
;;;288    
                          ENDP

000016  0000              DCW      0x0000
                  |L39.24|
                          DCD      finsh_sp

                          AREA ||i.OP_st_byte||, CODE, READONLY, ALIGN=2

                  OP_st_byte PROC
;;;403     */
;;;404    void OP_st_byte()
000000  4905              LDR      r1,|L40.24|
;;;405    {
;;;406    	*(char*)((finsh_sp - 2)->long_value) = (finsh_sp - 1)->char_value;
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  f8102c04          LDRB     r2,[r0,#-4]
000008  f8500c08          LDR      r0,[r0,#-8]
00000c  7002              STRB     r2,[r0,#0]
;;;407    	finsh_sp --;
00000e  6808              LDR      r0,[r1,#0]  ; finsh_sp
000010  1f00              SUBS     r0,r0,#4
000012  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;408    
;;;409    	return ;
;;;410    }
000014  4770              BX       lr
;;;411    
                          ENDP

000016  0000              DCW      0x0000
                  |L40.24|
                          DCD      finsh_sp

                          AREA ||i.OP_st_dword||, CODE, READONLY, ALIGN=2

                  OP_st_dword PROC
;;;427     */
;;;428    void OP_st_dword()
000000  4904              LDR      r1,|L41.20|
;;;429    {
;;;430    	*(long*)((finsh_sp - 2)->long_value) = (finsh_sp - 1)->long_value;
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  3808              SUBS     r0,r0,#8
000006  c805              LDM      r0,{r0,r2}
;;;431    	finsh_sp --;
000008  6002              STR      r2,[r0,#0]
00000a  6808              LDR      r0,[r1,#0]  ; finsh_sp
00000c  1f00              SUBS     r0,r0,#4
00000e  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;432    
;;;433    	return ;
;;;434    }
000010  4770              BX       lr
;;;435    
                          ENDP

000012  0000              DCW      0x0000
                  |L41.20|
                          DCD      finsh_sp

                          AREA ||i.OP_st_word||, CODE, READONLY, ALIGN=2

                  OP_st_word PROC
;;;415     */
;;;416    void OP_st_word()
000000  4905              LDR      r1,|L42.24|
;;;417    {
;;;418    	*(short*)((finsh_sp - 2)->long_value) = (finsh_sp - 1)->short_value;
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  f8302c04          LDRH     r2,[r0,#-4]
000008  f8500c08          LDR      r0,[r0,#-8]
00000c  8002              STRH     r2,[r0,#0]
;;;419    	finsh_sp --;
00000e  6808              LDR      r0,[r1,#0]  ; finsh_sp
000010  1f00              SUBS     r0,r0,#4
000012  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;420    
;;;421    	return ;
;;;422    }
000014  4770              BX       lr
;;;423    
                          ENDP

000016  0000              DCW      0x0000
                  |L42.24|
                          DCD      finsh_sp

                          AREA ||i.OP_sub_byte||, CODE, READONLY, ALIGN=2

                  OP_sub_byte PROC
;;;76     /* --- sub --- */
;;;77     void OP_sub_byte()
000000  4905              LDR      r1,|L43.24|
;;;78     {
;;;79     	OP_BIN_BYTE(-);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  f8102d08          LDRB     r2,[r0,#-8]!
000008  f8103f04          LDRB     r3,[r0,#4]!
00000c  1ad2              SUBS     r2,r2,r3
00000e  f8002c04          STRB     r2,[r0,#-4]
000012  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;80     
;;;81     	return ;
;;;82     }
000014  4770              BX       lr
;;;83     
                          ENDP

000016  0000              DCW      0x0000
                  |L43.24|
                          DCD      finsh_sp

                          AREA ||i.OP_sub_dword||, CODE, READONLY, ALIGN=2

                  OP_sub_dword PROC
;;;90     
;;;91     void OP_sub_dword()
000000  4903              LDR      r1,|L44.16|
;;;92     {
;;;93     	OP_BIN_DWORD(-);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  e9702302          LDRD     r2,r3,[r0,#-8]!
000008  1ad2              SUBS     r2,r2,r3
00000a  c004              STM      r0!,{r2}
00000c  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;94     
;;;95     	return ;
;;;96     }
00000e  4770              BX       lr
;;;97     
                          ENDP

                  |L44.16|
                          DCD      finsh_sp

                          AREA ||i.OP_sub_word||, CODE, READONLY, ALIGN=2

                  OP_sub_word PROC
;;;83     
;;;84     void OP_sub_word()
000000  4905              LDR      r1,|L45.24|
;;;85     {
;;;86     	OP_BIN_WORD(-);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  f8302d08          LDRH     r2,[r0,#-8]!
000008  f8303f04          LDRH     r3,[r0,#4]!
00000c  1ad2              SUBS     r2,r2,r3
00000e  f8202c04          STRH     r2,[r0,#-4]
000012  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;87     
;;;88     	return ;
;;;89     }
000014  4770              BX       lr
;;;90     
                          ENDP

000016  0000              DCW      0x0000
                  |L45.24|
                          DCD      finsh_sp

                          AREA ||i.OP_xor_byte||, CODE, READONLY, ALIGN=2

                  OP_xor_byte PROC
;;;208    /* --- xor --- */
;;;209    void OP_xor_byte()
000000  4905              LDR      r1,|L46.24|
;;;210    {
;;;211    	OP_BIN_BYTE(^);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  f8102d08          LDRB     r2,[r0,#-8]!
000008  f8103f04          LDRB     r3,[r0,#4]!
00000c  405a              EORS     r2,r2,r3
00000e  f8002c04          STRB     r2,[r0,#-4]
000012  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;212    
;;;213    	return ;
;;;214    }
000014  4770              BX       lr
;;;215    
                          ENDP

000016  0000              DCW      0x0000
                  |L46.24|
                          DCD      finsh_sp

                          AREA ||i.OP_xor_dword||, CODE, READONLY, ALIGN=2

                  OP_xor_dword PROC
;;;222    
;;;223    void OP_xor_dword()
000000  4903              LDR      r1,|L47.16|
;;;224    {
;;;225    	OP_BIN_DWORD(^);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  e9702302          LDRD     r2,r3,[r0,#-8]!
000008  405a              EORS     r2,r2,r3
00000a  c004              STM      r0!,{r2}
00000c  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;226    
;;;227    	return ;
;;;228    }
00000e  4770              BX       lr
;;;229    
                          ENDP

                  |L47.16|
                          DCD      finsh_sp

                          AREA ||i.OP_xor_word||, CODE, READONLY, ALIGN=2

                  OP_xor_word PROC
;;;215    
;;;216    void OP_xor_word()
000000  4905              LDR      r1,|L48.24|
;;;217    {
;;;218    	OP_BIN_WORD(^);
000002  6808              LDR      r0,[r1,#0]  ; finsh_sp
000004  f8302d08          LDRH     r2,[r0,#-8]!
000008  f8303f04          LDRH     r3,[r0,#4]!
00000c  405a              EORS     r2,r2,r3
00000e  f8202c04          STRH     r2,[r0,#-4]
000012  6008              STR      r0,[r1,#0]  ; finsh_sp
;;;219    
;;;220    	return ;
;;;221    }
000014  4770              BX       lr
;;;222    
                          ENDP

000016  0000              DCW      0x0000
                  |L48.24|
                          DCD      finsh_sp

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  op_table
                          DCD      OP_no_op
                          DCD      OP_add_byte
                          DCD      OP_add_word
                          DCD      OP_add_dword
                          DCD      OP_sub_byte
                          DCD      OP_sub_word
                          DCD      OP_sub_dword
                          DCD      OP_div_byte
                          DCD      OP_div_word
                          DCD      OP_div_dword
                          DCD      OP_mod_byte
                          DCD      OP_mod_word
                          DCD      OP_mod_dword
                          DCD      OP_mul_byte
                          DCD      OP_mul_word
                          DCD      OP_mul_dword
                          DCD      OP_and_byte
                          DCD      OP_and_word
                          DCD      OP_and_dword
                          DCD      OP_or_byte
                          DCD      OP_or_word
                          DCD      OP_or_dword
                          DCD      OP_xor_byte
                          DCD      OP_xor_word
                          DCD      OP_xor_dword
                          DCD      OP_bw_byte
                          DCD      OP_bw_word
                          DCD      OP_bw_dword
                          DCD      OP_shl_byte
                          DCD      OP_shl_word
                          DCD      OP_shl_dword
                          DCD      OP_shr_byte
                          DCD      OP_shr_word
                          DCD      OP_shr_dword
                          DCD      OP_ld_byte
                          DCD      OP_ld_word
                          DCD      OP_ld_dword
                          DCD      OP_ld_value_byte
                          DCD      OP_ld_value_word
                          DCD      OP_ld_value_dword
                          DCD      OP_st_byte
                          DCD      OP_st_word
                          DCD      OP_st_dword
                          DCD      OP_pop
                          DCD      OP_call
                          DCD      OP_ld_value_byte_stack
                          DCD      OP_ld_value_word_stack
                          DCD      OP_ld_value_dword_stack
                          DCD      0x00000000
