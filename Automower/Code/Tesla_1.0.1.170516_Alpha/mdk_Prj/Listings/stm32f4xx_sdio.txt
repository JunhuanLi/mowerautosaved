; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\stm32f4xx_sdio.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\stm32f4xx_sdio.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\OS -I..\OS\components\finsh -I..\OS\include -I..\OS\libcpu\arm\common -I..\OS\libcpu\arm\cortex-m4 -I..\OS\bsp\stm32f40x\Libraries\CMSIS\Include -I..\OS\bsp\stm32f40x\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\OS\bsp\stm32f40x\Libraries\CMSIS\ST\STM32F4xx\Include -I..\OS\bsp\stm32f40x\applications -I..\OS\bsp\stm32f40x\drivers -I..\OS\bsp\stm32f40x -I..\ext\inc -I..\tb_Application -I..\tb_Algorithm -I..\tb_Driver -IE:\Robotic_Platform\mdk_Prj\RTE -Id:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.8.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=520 -DSTM32F429xx -DUSE_STDPERIPH_DRIVER -DSTM32F429xx --omf_browse=.\objects\stm32f4xx_sdio.crf ..\OS\bsp\stm32f40x\Libraries\STM32F4xx_StdPeriph_Driver\src\stm32f4xx_sdio.c]
                          THUMB

                          AREA ||i.SDIO_CEATAITCmd||, CODE, READONLY, ALIGN=2

                  SDIO_CEATAITCmd PROC
;;;715      */
;;;716    void SDIO_CEATAITCmd(FunctionalState NewState)
000000  b510              PUSH     {r4,lr}
;;;717    { 
000002  0004              MOVS     r4,r0
000004  d006              BEQ      |L1.20|
;;;718      /* Check the parameters */
;;;719      assert_param(IS_FUNCTIONAL_STATE(NewState));
000006  2c01              CMP      r4,#1
000008  d004              BEQ      |L1.20|
00000a  f24021cf          MOV      r1,#0x2cf
00000e  4804              LDR      r0,|L1.32|
000010  f7fffffe          BL       assert_failed
                  |L1.20|
;;;720      
;;;721      *(__IO uint32_t *) CMD_NIEN_BB = (uint32_t)((~((uint32_t)NewState)) & ((uint32_t)0x1));
000014  4903              LDR      r1,|L1.36|
000016  2001              MOVS     r0,#1
000018  43a0              BICS     r0,r0,r4
00001a  f8c101b4          STR      r0,[r1,#0x1b4]
;;;722    }
00001e  bd10              POP      {r4,pc}
;;;723    
                          ENDP

                  |L1.32|
                          DCD      ||.conststring||
                  |L1.36|
                          DCD      0x42258000

                          AREA ||i.SDIO_ClearFlag||, CODE, READONLY, ALIGN=2

                  SDIO_ClearFlag PROC
;;;904      */
;;;905    void SDIO_ClearFlag(uint32_t SDIO_FLAG)
000000  b510              PUSH     {r4,lr}
;;;906    { 
000002  4604              MOV      r4,r0
;;;907      /* Check the parameters */
;;;908      assert_param(IS_SDIO_CLEAR_FLAG(SDIO_FLAG));
000004  4805              LDR      r0,|L2.28|
000006  4204              TST      r4,r0
000008  d100              BNE      |L2.12|
00000a  b924              CBNZ     r4,|L2.22|
                  |L2.12|
00000c  f44f7163          MOV      r1,#0x38c
000010  4803              LDR      r0,|L2.32|
000012  f7fffffe          BL       assert_failed
                  |L2.22|
;;;909       
;;;910      SDIO->ICR = SDIO_FLAG;
000016  4803              LDR      r0,|L2.36|
000018  6004              STR      r4,[r0,#0]
;;;911    }
00001a  bd10              POP      {r4,pc}
;;;912    
                          ENDP

                  |L2.28|
                          DCD      0xff3ff800
                  |L2.32|
                          DCD      ||.conststring||
                  |L2.36|
                          DCD      0x40012c38

                          AREA ||i.SDIO_ClearITPendingBit||, CODE, READONLY, ALIGN=2

                  SDIO_ClearITPendingBit PROC
;;;979      */
;;;980    void SDIO_ClearITPendingBit(uint32_t SDIO_IT)
000000  b510              PUSH     {r4,lr}
;;;981    { 
000002  4604              MOV      r4,r0
;;;982      /* Check the parameters */
;;;983      assert_param(IS_SDIO_CLEAR_IT(SDIO_IT));
000004  4805              LDR      r0,|L3.28|
000006  4204              TST      r4,r0
000008  d100              BNE      |L3.12|
00000a  b924              CBNZ     r4,|L3.22|
                  |L3.12|
00000c  f24031d7          MOV      r1,#0x3d7
000010  4803              LDR      r0,|L3.32|
000012  f7fffffe          BL       assert_failed
                  |L3.22|
;;;984       
;;;985      SDIO->ICR = SDIO_IT;
000016  4803              LDR      r0,|L3.36|
000018  6004              STR      r4,[r0,#0]
;;;986    }
00001a  bd10              POP      {r4,pc}
;;;987    
                          ENDP

                  |L3.28|
                          DCD      0xff3ff800
                  |L3.32|
                          DCD      ||.conststring||
                  |L3.36|
                          DCD      0x40012c38

                          AREA ||i.SDIO_ClockCmd||, CODE, READONLY, ALIGN=2

                  SDIO_ClockCmd PROC
;;;326      */
;;;327    void SDIO_ClockCmd(FunctionalState NewState)
000000  b510              PUSH     {r4,lr}
;;;328    {
000002  0004              MOVS     r4,r0
000004  d006              BEQ      |L4.20|
;;;329      /* Check the parameters */
;;;330      assert_param(IS_FUNCTIONAL_STATE(NewState));
000006  2c01              CMP      r4,#1
000008  d004              BEQ      |L4.20|
00000a  f44f71a5          MOV      r1,#0x14a
00000e  4803              LDR      r0,|L4.28|
000010  f7fffffe          BL       assert_failed
                  |L4.20|
;;;331      
;;;332      *(__IO uint32_t *) CLKCR_CLKEN_BB = (uint32_t)NewState;
000014  4802              LDR      r0,|L4.32|
000016  f8c040a0          STR      r4,[r0,#0xa0]
;;;333    }
00001a  bd10              POP      {r4,pc}
;;;334    
                          ENDP

                  |L4.28|
                          DCD      ||.conststring||
                  |L4.32|
                          DCD      0x42258000

                          AREA ||i.SDIO_CmdStructInit||, CODE, READONLY, ALIGN=1

                  SDIO_CmdStructInit PROC
;;;427      */
;;;428    void SDIO_CmdStructInit(SDIO_CmdInitTypeDef* SDIO_CmdInitStruct)
000000  2100              MOVS     r1,#0
;;;429    {
;;;430      /* SDIO_CmdInitStruct members default value */
;;;431      SDIO_CmdInitStruct->SDIO_Argument = 0x00;
;;;432      SDIO_CmdInitStruct->SDIO_CmdIndex = 0x00;
000002  6001              STR      r1,[r0,#0]
;;;433      SDIO_CmdInitStruct->SDIO_Response = SDIO_Response_No;
000004  6041              STR      r1,[r0,#4]
;;;434      SDIO_CmdInitStruct->SDIO_Wait = SDIO_Wait_No;
000006  6081              STR      r1,[r0,#8]
;;;435      SDIO_CmdInitStruct->SDIO_CPSM = SDIO_CPSM_Disable;
000008  60c1              STR      r1,[r0,#0xc]
00000a  6101              STR      r1,[r0,#0x10]
;;;436    }
00000c  4770              BX       lr
;;;437    
                          ENDP


                          AREA ||i.SDIO_CommandCompletionCmd||, CODE, READONLY, ALIGN=2

                  SDIO_CommandCompletionCmd PROC
;;;701      */
;;;702    void SDIO_CommandCompletionCmd(FunctionalState NewState)
000000  b510              PUSH     {r4,lr}
;;;703    { 
000002  0004              MOVS     r4,r0
000004  d006              BEQ      |L6.20|
;;;704      /* Check the parameters */
;;;705      assert_param(IS_FUNCTIONAL_STATE(NewState));
000006  2c01              CMP      r4,#1
000008  d004              BEQ      |L6.20|
00000a  f24021c1          MOV      r1,#0x2c1
00000e  4803              LDR      r0,|L6.28|
000010  f7fffffe          BL       assert_failed
                  |L6.20|
;;;706      
;;;707      *(__IO uint32_t *) CMD_ENCMDCOMPL_BB = (uint32_t)NewState;
000014  4802              LDR      r0,|L6.32|
000016  f8c041b0          STR      r4,[r0,#0x1b0]
;;;708    }
00001a  bd10              POP      {r4,pc}
;;;709    
                          ENDP

                  |L6.28|
                          DCD      ||.conststring||
                  |L6.32|
                          DCD      0x42258000

                          AREA ||i.SDIO_DMACmd||, CODE, READONLY, ALIGN=2

                  SDIO_DMACmd PROC
;;;761      */
;;;762    void SDIO_DMACmd(FunctionalState NewState)
000000  b510              PUSH     {r4,lr}
;;;763    {
000002  0004              MOVS     r4,r0
000004  d006              BEQ      |L7.20|
;;;764      /* Check the parameters */
;;;765      assert_param(IS_FUNCTIONAL_STATE(NewState));
000006  2c01              CMP      r4,#1
000008  d004              BEQ      |L7.20|
00000a  f24021fd          MOV      r1,#0x2fd
00000e  4803              LDR      r0,|L7.28|
000010  f7fffffe          BL       assert_failed
                  |L7.20|
;;;766      
;;;767      *(__IO uint32_t *) DCTRL_DMAEN_BB = (uint32_t)NewState;
000014  4802              LDR      r0,|L7.32|
000016  6004              STR      r4,[r0,#0]
;;;768    }
000018  bd10              POP      {r4,pc}
;;;769    
                          ENDP

00001a  0000              DCW      0x0000
                  |L7.28|
                          DCD      ||.conststring||
                  |L7.32|
                          DCD      0x4225858c

                          AREA ||i.SDIO_DataConfig||, CODE, READONLY, ALIGN=2

                  SDIO_DataConfig PROC
;;;495      */
;;;496    void SDIO_DataConfig(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
000000  b510              PUSH     {r4,lr}
;;;497    {
000002  4604              MOV      r4,r0
;;;498      uint32_t tmpreg = 0;
;;;499      
;;;500      /* Check the parameters */
;;;501      assert_param(IS_SDIO_DATA_LENGTH(SDIO_DataInitStruct->SDIO_DataLength));
000004  6840              LDR      r0,[r0,#4]
000006  f1b07f00          CMP      r0,#0x2000000
00000a  d304              BCC      |L8.22|
00000c  f24011f5          MOV      r1,#0x1f5
000010  482a              LDR      r0,|L8.188|
000012  f7fffffe          BL       assert_failed
                  |L8.22|
;;;502      assert_param(IS_SDIO_BLOCK_SIZE(SDIO_DataInitStruct->SDIO_DataBlockSize));
000016  68a1              LDR      r1,[r4,#8]
000018  b301              CBZ      r1,|L8.92|
00001a  2910              CMP      r1,#0x10
00001c  d01e              BEQ      |L8.92|
00001e  2920              CMP      r1,#0x20
000020  d01c              BEQ      |L8.92|
000022  2930              CMP      r1,#0x30
000024  d01a              BEQ      |L8.92|
000026  2940              CMP      r1,#0x40
000028  d018              BEQ      |L8.92|
00002a  2950              CMP      r1,#0x50
00002c  d016              BEQ      |L8.92|
00002e  2960              CMP      r1,#0x60
000030  d014              BEQ      |L8.92|
000032  2970              CMP      r1,#0x70
000034  d012              BEQ      |L8.92|
000036  2980              CMP      r1,#0x80
000038  d010              BEQ      |L8.92|
00003a  2990              CMP      r1,#0x90
00003c  d00e              BEQ      |L8.92|
00003e  29a0              CMP      r1,#0xa0
000040  d00c              BEQ      |L8.92|
000042  29b0              CMP      r1,#0xb0
000044  d00a              BEQ      |L8.92|
000046  29c0              CMP      r1,#0xc0
000048  d008              BEQ      |L8.92|
00004a  29d0              CMP      r1,#0xd0
00004c  d006              BEQ      |L8.92|
00004e  29e0              CMP      r1,#0xe0
000050  d004              BEQ      |L8.92|
000052  f44f71fb          MOV      r1,#0x1f6
000056  4819              LDR      r0,|L8.188|
000058  f7fffffe          BL       assert_failed
                  |L8.92|
;;;503      assert_param(IS_SDIO_TRANSFER_DIR(SDIO_DataInitStruct->SDIO_TransferDir));
00005c  68e0              LDR      r0,[r4,#0xc]
00005e  b130              CBZ      r0,|L8.110|
000060  2802              CMP      r0,#2
000062  d004              BEQ      |L8.110|
000064  f24011f7          MOV      r1,#0x1f7
000068  4814              LDR      r0,|L8.188|
00006a  f7fffffe          BL       assert_failed
                  |L8.110|
;;;504      assert_param(IS_SDIO_TRANSFER_MODE(SDIO_DataInitStruct->SDIO_TransferMode));
00006e  6920              LDR      r0,[r4,#0x10]
000070  2804              CMP      r0,#4
000072  d005              BEQ      |L8.128|
000074  b120              CBZ      r0,|L8.128|
000076  f44f71fc          MOV      r1,#0x1f8
00007a  4810              LDR      r0,|L8.188|
00007c  f7fffffe          BL       assert_failed
                  |L8.128|
;;;505      assert_param(IS_SDIO_DPSM(SDIO_DataInitStruct->SDIO_DPSM));
000080  6960              LDR      r0,[r4,#0x14]
000082  2801              CMP      r0,#1
000084  d005              BEQ      |L8.146|
000086  b120              CBZ      r0,|L8.146|
000088  f24011f9          MOV      r1,#0x1f9
00008c  480b              LDR      r0,|L8.188|
00008e  f7fffffe          BL       assert_failed
                  |L8.146|
;;;506    
;;;507    /*---------------------------- SDIO DTIMER Configuration ---------------------*/
;;;508      /* Set the SDIO Data TimeOut value */
;;;509      SDIO->DTIMER = SDIO_DataInitStruct->SDIO_DataTimeOut;
000092  490b              LDR      r1,|L8.192|
000094  6820              LDR      r0,[r4,#0]
000096  6008              STR      r0,[r1,#0]
;;;510    
;;;511    /*---------------------------- SDIO DLEN Configuration -----------------------*/
;;;512      /* Set the SDIO DataLength value */
;;;513      SDIO->DLEN = SDIO_DataInitStruct->SDIO_DataLength;
000098  1d09              ADDS     r1,r1,#4
00009a  6860              LDR      r0,[r4,#4]
00009c  6008              STR      r0,[r1,#0]
;;;514    
;;;515    /*---------------------------- SDIO DCTRL Configuration ----------------------*/  
;;;516      /* Get the SDIO DCTRL value */
;;;517      tmpreg = SDIO->DCTRL;
00009e  1d0a              ADDS     r2,r1,#4
0000a0  6810              LDR      r0,[r2,#0]
;;;518      /* Clear DEN, DTMODE, DTDIR and DBCKSIZE bits */
;;;519      tmpreg &= DCTRL_CLEAR_MASK;
0000a2  e9d41302          LDRD     r1,r3,[r4,#8]
;;;520      /* Set DEN bit according to SDIO_DPSM value */
;;;521      /* Set DTMODE bit according to SDIO_TransferMode value */
;;;522      /* Set DTDIR bit according to SDIO_TransferDir value */
;;;523      /* Set DBCKSIZE bits according to SDIO_DataBlockSize value */
;;;524      tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferDir
0000a6  4319              ORRS     r1,r1,r3
0000a8  e9d43404          LDRD     r3,r4,[r4,#0x10]
0000ac  4323              ORRS     r3,r3,r4
0000ae  f02000f7          BIC      r0,r0,#0xf7           ;519
0000b2  4319              ORRS     r1,r1,r3
0000b4  4301              ORRS     r1,r1,r0
;;;525               | SDIO_DataInitStruct->SDIO_TransferMode | SDIO_DataInitStruct->SDIO_DPSM;
;;;526    
;;;527      /* Write to SDIO DCTRL */
;;;528      SDIO->DCTRL = tmpreg;
0000b6  6011              STR      r1,[r2,#0]
;;;529    }
0000b8  bd10              POP      {r4,pc}
;;;530    
                          ENDP

0000ba  0000              DCW      0x0000
                  |L8.188|
                          DCD      ||.conststring||
                  |L8.192|
                          DCD      0x40012c24

                          AREA ||i.SDIO_DataStructInit||, CODE, READONLY, ALIGN=1

                  SDIO_DataStructInit PROC
;;;536      */
;;;537    void SDIO_DataStructInit(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
000000  f04f31ff          MOV      r1,#0xffffffff
;;;538    {
;;;539      /* SDIO_DataInitStruct members default value */
;;;540      SDIO_DataInitStruct->SDIO_DataTimeOut = 0xFFFFFFFF;
;;;541      SDIO_DataInitStruct->SDIO_DataLength = 0x00;
000004  6001              STR      r1,[r0,#0]
000006  2100              MOVS     r1,#0
;;;542      SDIO_DataInitStruct->SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
000008  6041              STR      r1,[r0,#4]
;;;543      SDIO_DataInitStruct->SDIO_TransferDir = SDIO_TransferDir_ToCard;
00000a  6081              STR      r1,[r0,#8]
;;;544      SDIO_DataInitStruct->SDIO_TransferMode = SDIO_TransferMode_Block;  
00000c  60c1              STR      r1,[r0,#0xc]
;;;545      SDIO_DataInitStruct->SDIO_DPSM = SDIO_DPSM_Disable;
00000e  6101              STR      r1,[r0,#0x10]
000010  6141              STR      r1,[r0,#0x14]
;;;546    }
000012  4770              BX       lr
;;;547    
                          ENDP


                          AREA ||i.SDIO_DeInit||, CODE, READONLY, ALIGN=1

                  SDIO_DeInit PROC
;;;258      */
;;;259    void SDIO_DeInit(void)
000000  b510              PUSH     {r4,lr}
;;;260    {
;;;261      RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, ENABLE);
000002  2101              MOVS     r1,#1
000004  02cc              LSLS     r4,r1,#11
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       RCC_APB2PeriphResetCmd
;;;262      RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, DISABLE);
00000c  4620              MOV      r0,r4
00000e  e8bd4010          POP      {r4,lr}
000012  2100              MOVS     r1,#0
000014  f7ffbffe          B.W      RCC_APB2PeriphResetCmd
;;;263    }
;;;264    
                          ENDP


                          AREA ||i.SDIO_GetCommandResponse||, CODE, READONLY, ALIGN=2

                  SDIO_GetCommandResponse PROC
;;;442      */
;;;443    uint8_t SDIO_GetCommandResponse(void)
000000  4801              LDR      r0,|L11.8|
;;;444    {
;;;445      return (uint8_t)(SDIO->RESPCMD);
000002  6800              LDR      r0,[r0,#0]
000004  b2c0              UXTB     r0,r0
;;;446    }
000006  4770              BX       lr
;;;447    
                          ENDP

                  |L11.8|
                          DCD      0x40012c10

                          AREA ||i.SDIO_GetDataCounter||, CODE, READONLY, ALIGN=2

                  SDIO_GetDataCounter PROC
;;;552      */
;;;553    uint32_t SDIO_GetDataCounter(void)
000000  4801              LDR      r0,|L12.8|
;;;554    { 
;;;555      return SDIO->DCOUNT;
000002  6800              LDR      r0,[r0,#0]
;;;556    }
000004  4770              BX       lr
;;;557    
                          ENDP

000006  0000              DCW      0x0000
                  |L12.8|
                          DCD      0x40012c30

                          AREA ||i.SDIO_GetFIFOCount||, CODE, READONLY, ALIGN=2

                  SDIO_GetFIFOCount PROC
;;;582      */
;;;583    uint32_t SDIO_GetFIFOCount(void)
000000  4801              LDR      r0,|L13.8|
;;;584    { 
;;;585      return SDIO->FIFOCNT;
000002  6800              LDR      r0,[r0,#0]
;;;586    }
000004  4770              BX       lr
;;;587    
                          ENDP

000006  0000              DCW      0x0000
                  |L13.8|
                          DCD      0x40012c48

                          AREA ||i.SDIO_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  SDIO_GetFlagStatus PROC
;;;867      */
;;;868    FlagStatus SDIO_GetFlagStatus(uint32_t SDIO_FLAG)
000000  b570              PUSH     {r4-r6,lr}
;;;869    { 
;;;870      FlagStatus bitstatus = RESET;
000002  2500              MOVS     r5,#0
000004  4604              MOV      r4,r0                 ;869
;;;871      
;;;872      /* Check the parameters */
;;;873      assert_param(IS_SDIO_FLAG(SDIO_FLAG));
000006  2801              CMP      r0,#1
000008  d042              BEQ      |L14.144|
00000a  2c02              CMP      r4,#2
00000c  d040              BEQ      |L14.144|
00000e  2c04              CMP      r4,#4
000010  d03e              BEQ      |L14.144|
000012  2c08              CMP      r4,#8
000014  d03c              BEQ      |L14.144|
000016  2c10              CMP      r4,#0x10
000018  d03a              BEQ      |L14.144|
00001a  2c20              CMP      r4,#0x20
00001c  d038              BEQ      |L14.144|
00001e  2c40              CMP      r4,#0x40
000020  d036              BEQ      |L14.144|
000022  2c80              CMP      r4,#0x80
000024  d034              BEQ      |L14.144|
000026  f5b47f80          CMP      r4,#0x100
00002a  d031              BEQ      |L14.144|
00002c  f5b47f00          CMP      r4,#0x200
000030  d02e              BEQ      |L14.144|
000032  f5b46f80          CMP      r4,#0x400
000036  d02b              BEQ      |L14.144|
000038  f5b46f00          CMP      r4,#0x800
00003c  d028              BEQ      |L14.144|
00003e  f5b45f80          CMP      r4,#0x1000
000042  d025              BEQ      |L14.144|
000044  f5b45f00          CMP      r4,#0x2000
000048  d022              BEQ      |L14.144|
00004a  f5b44f80          CMP      r4,#0x4000
00004e  d01f              BEQ      |L14.144|
000050  f5b44f00          CMP      r4,#0x8000
000054  d01c              BEQ      |L14.144|
000056  f5b43f80          CMP      r4,#0x10000
00005a  d019              BEQ      |L14.144|
00005c  f5b43f00          CMP      r4,#0x20000
000060  d016              BEQ      |L14.144|
000062  f5b42f80          CMP      r4,#0x40000
000066  d013              BEQ      |L14.144|
000068  f5b42f00          CMP      r4,#0x80000
00006c  d010              BEQ      |L14.144|
00006e  f5b41f80          CMP      r4,#0x100000
000072  d00d              BEQ      |L14.144|
000074  f5b41f00          CMP      r4,#0x200000
000078  d00a              BEQ      |L14.144|
00007a  f5b40f80          CMP      r4,#0x400000
00007e  d007              BEQ      |L14.144|
000080  f5b40f00          CMP      r4,#0x800000
000084  d004              BEQ      |L14.144|
000086  f2403169          MOV      r1,#0x369
00008a  4805              LDR      r0,|L14.160|
00008c  f7fffffe          BL       assert_failed
                  |L14.144|
;;;874      
;;;875      if ((SDIO->STA & SDIO_FLAG) != (uint32_t)RESET)
000090  4804              LDR      r0,|L14.164|
000092  6800              LDR      r0,[r0,#0]
000094  4220              TST      r0,r4
000096  d000              BEQ      |L14.154|
;;;876      {
;;;877        bitstatus = SET;
000098  2501              MOVS     r5,#1
                  |L14.154|
;;;878      }
;;;879      else
;;;880      {
;;;881        bitstatus = RESET;
;;;882      }
;;;883      return bitstatus;
00009a  4628              MOV      r0,r5
;;;884    }
00009c  bd70              POP      {r4-r6,pc}
;;;885    
                          ENDP

00009e  0000              DCW      0x0000
                  |L14.160|
                          DCD      ||.conststring||
                  |L14.164|
                          DCD      0x40012c34

                          AREA ||i.SDIO_GetITStatus||, CODE, READONLY, ALIGN=2

                  SDIO_GetITStatus PROC
;;;943      */
;;;944    ITStatus SDIO_GetITStatus(uint32_t SDIO_IT)
000000  b570              PUSH     {r4-r6,lr}
;;;945    { 
;;;946      ITStatus bitstatus = RESET;
000002  2500              MOVS     r5,#0
000004  4604              MOV      r4,r0                 ;945
;;;947      
;;;948      /* Check the parameters */
;;;949      assert_param(IS_SDIO_GET_IT(SDIO_IT));
000006  2801              CMP      r0,#1
000008  d042              BEQ      |L15.144|
00000a  2c02              CMP      r4,#2
00000c  d040              BEQ      |L15.144|
00000e  2c04              CMP      r4,#4
000010  d03e              BEQ      |L15.144|
000012  2c08              CMP      r4,#8
000014  d03c              BEQ      |L15.144|
000016  2c10              CMP      r4,#0x10
000018  d03a              BEQ      |L15.144|
00001a  2c20              CMP      r4,#0x20
00001c  d038              BEQ      |L15.144|
00001e  2c40              CMP      r4,#0x40
000020  d036              BEQ      |L15.144|
000022  2c80              CMP      r4,#0x80
000024  d034              BEQ      |L15.144|
000026  f5b47f80          CMP      r4,#0x100
00002a  d031              BEQ      |L15.144|
00002c  f5b47f00          CMP      r4,#0x200
000030  d02e              BEQ      |L15.144|
000032  f5b46f80          CMP      r4,#0x400
000036  d02b              BEQ      |L15.144|
000038  f5b46f00          CMP      r4,#0x800
00003c  d028              BEQ      |L15.144|
00003e  f5b45f80          CMP      r4,#0x1000
000042  d025              BEQ      |L15.144|
000044  f5b45f00          CMP      r4,#0x2000
000048  d022              BEQ      |L15.144|
00004a  f5b44f80          CMP      r4,#0x4000
00004e  d01f              BEQ      |L15.144|
000050  f5b44f00          CMP      r4,#0x8000
000054  d01c              BEQ      |L15.144|
000056  f5b43f80          CMP      r4,#0x10000
00005a  d019              BEQ      |L15.144|
00005c  f5b43f00          CMP      r4,#0x20000
000060  d016              BEQ      |L15.144|
000062  f5b42f80          CMP      r4,#0x40000
000066  d013              BEQ      |L15.144|
000068  f5b42f00          CMP      r4,#0x80000
00006c  d010              BEQ      |L15.144|
00006e  f5b41f80          CMP      r4,#0x100000
000072  d00d              BEQ      |L15.144|
000074  f5b41f00          CMP      r4,#0x200000
000078  d00a              BEQ      |L15.144|
00007a  f5b40f80          CMP      r4,#0x400000
00007e  d007              BEQ      |L15.144|
000080  f5b40f00          CMP      r4,#0x800000
000084  d004              BEQ      |L15.144|
000086  f24031b5          MOV      r1,#0x3b5
00008a  4805              LDR      r0,|L15.160|
00008c  f7fffffe          BL       assert_failed
                  |L15.144|
;;;950      if ((SDIO->STA & SDIO_IT) != (uint32_t)RESET)  
000090  4804              LDR      r0,|L15.164|
000092  6800              LDR      r0,[r0,#0]
000094  4220              TST      r0,r4
000096  d000              BEQ      |L15.154|
;;;951      {
;;;952        bitstatus = SET;
000098  2501              MOVS     r5,#1
                  |L15.154|
;;;953      }
;;;954      else
;;;955      {
;;;956        bitstatus = RESET;
;;;957      }
;;;958      return bitstatus;
00009a  4628              MOV      r0,r5
;;;959    }
00009c  bd70              POP      {r4-r6,pc}
;;;960    
                          ENDP

00009e  0000              DCW      0x0000
                  |L15.160|
                          DCD      ||.conststring||
                  |L15.164|
                          DCD      0x40012c34

                          AREA ||i.SDIO_GetPowerState||, CODE, READONLY, ALIGN=2

                  SDIO_GetPowerState PROC
;;;359      */
;;;360    uint32_t SDIO_GetPowerState(void)
000000  4802              LDR      r0,|L16.12|
;;;361    {
;;;362      return (SDIO->POWER & (~PWR_PWRCTRL_MASK));
000002  6800              LDR      r0,[r0,#0]
000004  f0000003          AND      r0,r0,#3
;;;363    }
000008  4770              BX       lr
;;;364    
                          ENDP

00000a  0000              DCW      0x0000
                  |L16.12|
                          DCD      0x40012c00

                          AREA ||i.SDIO_GetResponse||, CODE, READONLY, ALIGN=2

                  SDIO_GetResponse PROC
;;;457      */
;;;458    uint32_t SDIO_GetResponse(uint32_t SDIO_RESP)
000000  b538              PUSH     {r3-r5,lr}
;;;459    {
000002  0004              MOVS     r4,r0
;;;460      __IO uint32_t tmp = 0;
000004  f04f0000          MOV      r0,#0
000008  9000              STR      r0,[sp,#0]            ;459
00000a  d00a              BEQ      |L17.34|
;;;461    
;;;462      /* Check the parameters */
;;;463      assert_param(IS_SDIO_RESP(SDIO_RESP));
00000c  2c04              CMP      r4,#4
00000e  d008              BEQ      |L17.34|
000010  2c08              CMP      r4,#8
000012  d006              BEQ      |L17.34|
000014  2c0c              CMP      r4,#0xc
000016  d004              BEQ      |L17.34|
000018  f24011cf          MOV      r1,#0x1cf
00001c  4803              LDR      r0,|L17.44|
00001e  f7fffffe          BL       assert_failed
                  |L17.34|
;;;464    
;;;465      tmp = SDIO_RESP_ADDR + SDIO_RESP;
000022  4803              LDR      r0,|L17.48|
000024  4420              ADD      r0,r0,r4
;;;466      
;;;467      return (*(__IO uint32_t *) tmp); 
000026  9000              STR      r0,[sp,#0]
000028  6800              LDR      r0,[r0,#0]
;;;468    }
00002a  bd38              POP      {r3-r5,pc}
;;;469    
                          ENDP

                  |L17.44|
                          DCD      ||.conststring||
                  |L17.48|
                          DCD      0x40012c14

                          AREA ||i.SDIO_ITConfig||, CODE, READONLY, ALIGN=2

                  SDIO_ITConfig PROC
;;;819      */
;;;820    void SDIO_ITConfig(uint32_t SDIO_IT, FunctionalState NewState)
000000  b570              PUSH     {r4-r6,lr}
;;;821    {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;822      /* Check the parameters */
;;;823      assert_param(IS_SDIO_IT(SDIO_IT));
000006  0e00              LSRS     r0,r0,#24
000008  d100              BNE      |L18.12|
00000a  b924              CBNZ     r4,|L18.22|
                  |L18.12|
00000c  f2403137          MOV      r1,#0x337
000010  4809              LDR      r0,|L18.56|
000012  f7fffffe          BL       assert_failed
                  |L18.22|
;;;824      assert_param(IS_FUNCTIONAL_STATE(NewState));
;;;825      
;;;826      if (NewState != DISABLE)
;;;827      {
;;;828        /* Enable the SDIO interrupts */
;;;829        SDIO->MASK |= SDIO_IT;
000016  4e09              LDR      r6,|L18.60|
000018  b14d              CBZ      r5,|L18.46|
00001a  2d01              CMP      r5,#1                 ;824
00001c  d004              BEQ      |L18.40|
00001e  f44f714e          MOV      r1,#0x338             ;824
000022  4805              LDR      r0,|L18.56|
000024  f7fffffe          BL       assert_failed
                  |L18.40|
000028  6830              LDR      r0,[r6,#0]
00002a  4320              ORRS     r0,r0,r4
00002c  e001              B        |L18.50|
                  |L18.46|
;;;830      }
;;;831      else
;;;832      {
;;;833        /* Disable the SDIO interrupts */
;;;834        SDIO->MASK &= ~SDIO_IT;
00002e  6830              LDR      r0,[r6,#0]
000030  43a0              BICS     r0,r0,r4
                  |L18.50|
000032  6030              STR      r0,[r6,#0]            ;829
;;;835      } 
;;;836    }
000034  bd70              POP      {r4-r6,pc}
;;;837    
                          ENDP

000036  0000              DCW      0x0000
                  |L18.56|
                          DCD      ||.conststring||
                  |L18.60|
                          DCD      0x40012c3c

                          AREA ||i.SDIO_Init||, CODE, READONLY, ALIGN=2

                  SDIO_Init PROC
;;;271      */
;;;272    void SDIO_Init(SDIO_InitTypeDef* SDIO_InitStruct)
000000  b570              PUSH     {r4-r6,lr}
;;;273    {
000002  4604              MOV      r4,r0
;;;274      uint32_t tmpreg = 0;
;;;275        
;;;276      /* Check the parameters */
;;;277      assert_param(IS_SDIO_CLOCK_EDGE(SDIO_InitStruct->SDIO_ClockEdge));
000004  6800              LDR      r0,[r0,#0]
000006  b138              CBZ      r0,|L19.24|
000008  f5b05f00          CMP      r0,#0x2000
00000c  d004              BEQ      |L19.24|
00000e  f2401115          MOV      r1,#0x115
000012  4820              LDR      r0,|L19.148|
000014  f7fffffe          BL       assert_failed
                  |L19.24|
;;;278      assert_param(IS_SDIO_CLOCK_BYPASS(SDIO_InitStruct->SDIO_ClockBypass));
000018  6860              LDR      r0,[r4,#4]
00001a  b138              CBZ      r0,|L19.44|
00001c  f5b06f80          CMP      r0,#0x400
000020  d004              BEQ      |L19.44|
000022  f44f718b          MOV      r1,#0x116
000026  481b              LDR      r0,|L19.148|
000028  f7fffffe          BL       assert_failed
                  |L19.44|
;;;279      assert_param(IS_SDIO_CLOCK_POWER_SAVE(SDIO_InitStruct->SDIO_ClockPowerSave));
00002c  68a0              LDR      r0,[r4,#8]
00002e  b138              CBZ      r0,|L19.64|
000030  f5b07f00          CMP      r0,#0x200
000034  d004              BEQ      |L19.64|
000036  f2401117          MOV      r1,#0x117
00003a  4816              LDR      r0,|L19.148|
00003c  f7fffffe          BL       assert_failed
                  |L19.64|
;;;280      assert_param(IS_SDIO_BUS_WIDE(SDIO_InitStruct->SDIO_BusWide));
000040  68e0              LDR      r0,[r4,#0xc]
000042  b150              CBZ      r0,|L19.90|
000044  f5b06f00          CMP      r0,#0x800
000048  d007              BEQ      |L19.90|
00004a  f5b05f80          CMP      r0,#0x1000
00004e  d004              BEQ      |L19.90|
000050  f44f718c          MOV      r1,#0x118
000054  480f              LDR      r0,|L19.148|
000056  f7fffffe          BL       assert_failed
                  |L19.90|
;;;281      assert_param(IS_SDIO_HARDWARE_FLOW_CONTROL(SDIO_InitStruct->SDIO_HardwareFlowControl)); 
00005a  6920              LDR      r0,[r4,#0x10]
00005c  b138              CBZ      r0,|L19.110|
00005e  f5b04f80          CMP      r0,#0x4000
000062  d004              BEQ      |L19.110|
000064  f2401119          MOV      r1,#0x119
000068  480a              LDR      r0,|L19.148|
00006a  f7fffffe          BL       assert_failed
                  |L19.110|
;;;282       
;;;283    /*---------------------------- SDIO CLKCR Configuration ------------------------*/  
;;;284      /* Get the SDIO CLKCR value */
;;;285      tmpreg = SDIO->CLKCR;
00006e  4a0a              LDR      r2,|L19.152|
000070  6811              LDR      r1,[r2,#0]
;;;286      
;;;287      /* Clear CLKDIV, PWRSAV, BYPASS, WIDBUS, NEGEDGE, HWFC_EN bits */
;;;288      tmpreg &= CLKCR_CLEAR_MASK;
000072  f64760ff          MOV      r0,#0x7eff
000076  4381              BICS     r1,r1,r0
;;;289      
;;;290      /* Set CLKDIV bits according to SDIO_ClockDiv value */
;;;291      /* Set PWRSAV bit according to SDIO_ClockPowerSave value */
;;;292      /* Set BYPASS bit according to SDIO_ClockBypass value */
;;;293      /* Set WIDBUS bits according to SDIO_BusWide value */
;;;294      /* Set NEGEDGE bits according to SDIO_ClockEdge value */
;;;295      /* Set HWFC_EN bits according to SDIO_HardwareFlowControl value */
;;;296      tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
000078  7d20              LDRB     r0,[r4,#0x14]
00007a  68a3              LDR      r3,[r4,#8]
00007c  68e5              LDR      r5,[r4,#0xc]
00007e  4318              ORRS     r0,r0,r3
000080  6863              LDR      r3,[r4,#4]
000082  432b              ORRS     r3,r3,r5
000084  4318              ORRS     r0,r0,r3
000086  6823              LDR      r3,[r4,#0]
000088  4318              ORRS     r0,r0,r3
00008a  6923              LDR      r3,[r4,#0x10]
00008c  4318              ORRS     r0,r0,r3
00008e  4308              ORRS     r0,r0,r1
;;;297                 SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
;;;298                 SDIO_InitStruct->SDIO_ClockEdge | SDIO_InitStruct->SDIO_HardwareFlowControl); 
;;;299      
;;;300      /* Write to SDIO CLKCR */
;;;301      SDIO->CLKCR = tmpreg;
000090  6010              STR      r0,[r2,#0]
;;;302    }
000092  bd70              POP      {r4-r6,pc}
;;;303    
                          ENDP

                  |L19.148|
                          DCD      ||.conststring||
                  |L19.152|
                          DCD      0x40012c04

                          AREA ||i.SDIO_ReadData||, CODE, READONLY, ALIGN=2

                  SDIO_ReadData PROC
;;;562      */
;;;563    uint32_t SDIO_ReadData(void)
000000  4801              LDR      r0,|L20.8|
;;;564    { 
;;;565      return SDIO->FIFO;
000002  6800              LDR      r0,[r0,#0]
;;;566    }
000004  4770              BX       lr
;;;567    
                          ENDP

000006  0000              DCW      0x0000
                  |L20.8|
                          DCD      0x40012c80

                          AREA ||i.SDIO_SendCEATACmd||, CODE, READONLY, ALIGN=2

                  SDIO_SendCEATACmd PROC
;;;729      */
;;;730    void SDIO_SendCEATACmd(FunctionalState NewState)
000000  b510              PUSH     {r4,lr}
;;;731    { 
000002  0004              MOVS     r4,r0
000004  d006              BEQ      |L21.20|
;;;732      /* Check the parameters */
;;;733      assert_param(IS_FUNCTIONAL_STATE(NewState));
000006  2c01              CMP      r4,#1
000008  d004              BEQ      |L21.20|
00000a  f24021dd          MOV      r1,#0x2dd
00000e  4803              LDR      r0,|L21.28|
000010  f7fffffe          BL       assert_failed
                  |L21.20|
;;;734      
;;;735      *(__IO uint32_t *) CMD_ATACMD_BB = (uint32_t)NewState;
000014  4802              LDR      r0,|L21.32|
000016  f8c041b8          STR      r4,[r0,#0x1b8]
;;;736    }
00001a  bd10              POP      {r4,pc}
;;;737    
                          ENDP

                  |L21.28|
                          DCD      ||.conststring||
                  |L21.32|
                          DCD      0x42258000

                          AREA ||i.SDIO_SendCommand||, CODE, READONLY, ALIGN=2

                  SDIO_SendCommand PROC
;;;391      */
;;;392    void SDIO_SendCommand(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)
000000  b510              PUSH     {r4,lr}
;;;393    {
000002  4604              MOV      r4,r0
;;;394      uint32_t tmpreg = 0;
;;;395      
;;;396      /* Check the parameters */
;;;397      assert_param(IS_SDIO_CMD_INDEX(SDIO_CmdInitStruct->SDIO_CmdIndex));
000004  6840              LDR      r0,[r0,#4]
000006  2840              CMP      r0,#0x40
000008  d304              BCC      |L22.20|
00000a  f240118d          MOV      r1,#0x18d
00000e  481b              LDR      r0,|L22.124|
000010  f7fffffe          BL       assert_failed
                  |L22.20|
;;;398      assert_param(IS_SDIO_RESPONSE(SDIO_CmdInitStruct->SDIO_Response));
000014  68a0              LDR      r0,[r4,#8]
000016  b140              CBZ      r0,|L22.42|
000018  2840              CMP      r0,#0x40
00001a  d006              BEQ      |L22.42|
00001c  28c0              CMP      r0,#0xc0
00001e  d004              BEQ      |L22.42|
000020  f44f71c7          MOV      r1,#0x18e
000024  4815              LDR      r0,|L22.124|
000026  f7fffffe          BL       assert_failed
                  |L22.42|
;;;399      assert_param(IS_SDIO_WAIT(SDIO_CmdInitStruct->SDIO_Wait));
00002a  68e0              LDR      r0,[r4,#0xc]
00002c  b150              CBZ      r0,|L22.68|
00002e  f5b07f80          CMP      r0,#0x100
000032  d007              BEQ      |L22.68|
000034  f5b07f00          CMP      r0,#0x200
000038  d004              BEQ      |L22.68|
00003a  f240118f          MOV      r1,#0x18f
00003e  480f              LDR      r0,|L22.124|
000040  f7fffffe          BL       assert_failed
                  |L22.68|
;;;400      assert_param(IS_SDIO_CPSM(SDIO_CmdInitStruct->SDIO_CPSM));
000044  6920              LDR      r0,[r4,#0x10]
000046  f5b06f80          CMP      r0,#0x400
00004a  d005              BEQ      |L22.88|
00004c  b120              CBZ      r0,|L22.88|
00004e  f44f71c8          MOV      r1,#0x190
000052  480a              LDR      r0,|L22.124|
000054  f7fffffe          BL       assert_failed
                  |L22.88|
;;;401      
;;;402    /*---------------------------- SDIO ARG Configuration ------------------------*/
;;;403      /* Set the SDIO Argument value */
;;;404      SDIO->ARG = SDIO_CmdInitStruct->SDIO_Argument;
000058  4909              LDR      r1,|L22.128|
00005a  6820              LDR      r0,[r4,#0]
00005c  6008              STR      r0,[r1,#0]
;;;405      
;;;406    /*---------------------------- SDIO CMD Configuration ------------------------*/  
;;;407      /* Get the SDIO CMD value */
;;;408      tmpreg = SDIO->CMD;
00005e  1d0a              ADDS     r2,r1,#4
000060  6810              LDR      r0,[r2,#0]
;;;409      /* Clear CMDINDEX, WAITRESP, WAITINT, WAITPEND, CPSMEN bits */
;;;410      tmpreg &= CMD_CLEAR_MASK;
000062  e9d41301          LDRD     r1,r3,[r4,#4]
;;;411      /* Set CMDINDEX bits according to SDIO_CmdIndex value */
;;;412      /* Set WAITRESP bits according to SDIO_Response value */
;;;413      /* Set WAITINT and WAITPEND bits according to SDIO_Wait value */
;;;414      /* Set CPSMEN bits according to SDIO_CPSM value */
;;;415      tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
000066  4319              ORRS     r1,r1,r3
000068  e9d43403          LDRD     r3,r4,[r4,#0xc]
00006c  4323              ORRS     r3,r3,r4
00006e  f36f000a          BFC      r0,#0,#11             ;410
000072  4319              ORRS     r1,r1,r3
000074  4301              ORRS     r1,r1,r0
;;;416               | SDIO_CmdInitStruct->SDIO_Wait | SDIO_CmdInitStruct->SDIO_CPSM;
;;;417      
;;;418      /* Write to SDIO CMD */
;;;419      SDIO->CMD = tmpreg;
000076  6011              STR      r1,[r2,#0]
;;;420    }
000078  bd10              POP      {r4,pc}
;;;421    
                          ENDP

00007a  0000              DCW      0x0000
                  |L22.124|
                          DCD      ||.conststring||
                  |L22.128|
                          DCD      0x40012c08

                          AREA ||i.SDIO_SendSDIOSuspendCmd||, CODE, READONLY, ALIGN=2

                  SDIO_SendSDIOSuspendCmd PROC
;;;669      */
;;;670    void SDIO_SendSDIOSuspendCmd(FunctionalState NewState)
000000  b510              PUSH     {r4,lr}
;;;671    { 
000002  0004              MOVS     r4,r0
000004  d006              BEQ      |L23.20|
;;;672      /* Check the parameters */
;;;673      assert_param(IS_FUNCTIONAL_STATE(NewState));
000006  2c01              CMP      r4,#1
000008  d004              BEQ      |L23.20|
00000a  f24021a1          MOV      r1,#0x2a1
00000e  4803              LDR      r0,|L23.28|
000010  f7fffffe          BL       assert_failed
                  |L23.20|
;;;674      
;;;675      *(__IO uint32_t *) CMD_SDIOSUSPEND_BB = (uint32_t)NewState;
000014  4802              LDR      r0,|L23.32|
000016  f8c041ac          STR      r4,[r0,#0x1ac]
;;;676    }
00001a  bd10              POP      {r4,pc}
;;;677    
                          ENDP

                  |L23.28|
                          DCD      ||.conststring||
                  |L23.32|
                          DCD      0x42258000

                          AREA ||i.SDIO_SetPowerState||, CODE, READONLY, ALIGN=2

                  SDIO_SetPowerState PROC
;;;342      */
;;;343    void SDIO_SetPowerState(uint32_t SDIO_PowerState)
000000  b510              PUSH     {r4,lr}
;;;344    {
000002  0004              MOVS     r4,r0
000004  d006              BEQ      |L24.20|
;;;345      /* Check the parameters */
;;;346      assert_param(IS_SDIO_POWER_STATE(SDIO_PowerState));
000006  2c03              CMP      r4,#3
000008  d004              BEQ      |L24.20|
00000a  f44f71ad          MOV      r1,#0x15a
00000e  4803              LDR      r0,|L24.28|
000010  f7fffffe          BL       assert_failed
                  |L24.20|
;;;347      
;;;348      SDIO->POWER = SDIO_PowerState;
000014  4802              LDR      r0,|L24.32|
000016  6004              STR      r4,[r0,#0]
;;;349    }
000018  bd10              POP      {r4,pc}
;;;350    
                          ENDP

00001a  0000              DCW      0x0000
                  |L24.28|
                          DCD      ||.conststring||
                  |L24.32|
                          DCD      0x40012c00

                          AREA ||i.SDIO_SetSDIOOperation||, CODE, READONLY, ALIGN=2

                  SDIO_SetSDIOOperation PROC
;;;655      */
;;;656    void SDIO_SetSDIOOperation(FunctionalState NewState)
000000  b510              PUSH     {r4,lr}
;;;657    { 
000002  0004              MOVS     r4,r0
000004  d006              BEQ      |L25.20|
;;;658      /* Check the parameters */
;;;659      assert_param(IS_FUNCTIONAL_STATE(NewState));
000006  2c01              CMP      r4,#1
000008  d004              BEQ      |L25.20|
00000a  f2402193          MOV      r1,#0x293
00000e  4803              LDR      r0,|L25.28|
000010  f7fffffe          BL       assert_failed
                  |L25.20|
;;;660      
;;;661      *(__IO uint32_t *) DCTRL_SDIOEN_BB = (uint32_t)NewState;
000014  4802              LDR      r0,|L25.32|
000016  6004              STR      r4,[r0,#0]
;;;662    }
000018  bd10              POP      {r4,pc}
;;;663    
                          ENDP

00001a  0000              DCW      0x0000
                  |L25.28|
                          DCD      ||.conststring||
                  |L25.32|
                          DCD      0x422585ac

                          AREA ||i.SDIO_SetSDIOReadWaitMode||, CODE, READONLY, ALIGN=2

                  SDIO_SetSDIOReadWaitMode PROC
;;;641      */
;;;642    void SDIO_SetSDIOReadWaitMode(uint32_t SDIO_ReadWaitMode)
000000  b510              PUSH     {r4,lr}
;;;643    {
000002  0004              MOVS     r4,r0
000004  d006              BEQ      |L26.20|
;;;644      /* Check the parameters */
;;;645      assert_param(IS_SDIO_READWAIT_MODE(SDIO_ReadWaitMode));
000006  2c01              CMP      r4,#1
000008  d004              BEQ      |L26.20|
00000a  f2402185          MOV      r1,#0x285
00000e  4803              LDR      r0,|L26.28|
000010  f7fffffe          BL       assert_failed
                  |L26.20|
;;;646      
;;;647      *(__IO uint32_t *) DCTRL_RWMOD_BB = SDIO_ReadWaitMode;
000014  4802              LDR      r0,|L26.32|
000016  6004              STR      r4,[r0,#0]
;;;648    }
000018  bd10              POP      {r4,pc}
;;;649    
                          ENDP

00001a  0000              DCW      0x0000
                  |L26.28|
                          DCD      ||.conststring||
                  |L26.32|
                          DCD      0x422585a8

                          AREA ||i.SDIO_StartSDIOReadWait||, CODE, READONLY, ALIGN=2

                  SDIO_StartSDIOReadWait PROC
;;;611      */
;;;612    void SDIO_StartSDIOReadWait(FunctionalState NewState)
000000  b510              PUSH     {r4,lr}
;;;613    { 
000002  0004              MOVS     r4,r0
000004  d006              BEQ      |L27.20|
;;;614      /* Check the parameters */
;;;615      assert_param(IS_FUNCTIONAL_STATE(NewState));
000006  2c01              CMP      r4,#1
000008  d004              BEQ      |L27.20|
00000a  f2402167          MOV      r1,#0x267
00000e  4803              LDR      r0,|L27.28|
000010  f7fffffe          BL       assert_failed
                  |L27.20|
;;;616      
;;;617      *(__IO uint32_t *) DCTRL_RWSTART_BB = (uint32_t) NewState;
000014  4802              LDR      r0,|L27.32|
000016  6004              STR      r4,[r0,#0]
;;;618    }
000018  bd10              POP      {r4,pc}
;;;619    
                          ENDP

00001a  0000              DCW      0x0000
                  |L27.28|
                          DCD      ||.conststring||
                  |L27.32|
                          DCD      0x422585a0

                          AREA ||i.SDIO_StopSDIOReadWait||, CODE, READONLY, ALIGN=2

                  SDIO_StopSDIOReadWait PROC
;;;625      */
;;;626    void SDIO_StopSDIOReadWait(FunctionalState NewState)
000000  b510              PUSH     {r4,lr}
;;;627    { 
000002  0004              MOVS     r4,r0
000004  d006              BEQ      |L28.20|
;;;628      /* Check the parameters */
;;;629      assert_param(IS_FUNCTIONAL_STATE(NewState));
000006  2c01              CMP      r4,#1
000008  d004              BEQ      |L28.20|
00000a  f2402175          MOV      r1,#0x275
00000e  4803              LDR      r0,|L28.28|
000010  f7fffffe          BL       assert_failed
                  |L28.20|
;;;630      
;;;631      *(__IO uint32_t *) DCTRL_RWSTOP_BB = (uint32_t) NewState;
000014  4802              LDR      r0,|L28.32|
000016  6004              STR      r4,[r0,#0]
;;;632    }
000018  bd10              POP      {r4,pc}
;;;633    
                          ENDP

00001a  0000              DCW      0x0000
                  |L28.28|
                          DCD      ||.conststring||
                  |L28.32|
                          DCD      0x422585a4

                          AREA ||i.SDIO_StructInit||, CODE, READONLY, ALIGN=1

                  SDIO_StructInit PROC
;;;309      */
;;;310    void SDIO_StructInit(SDIO_InitTypeDef* SDIO_InitStruct)
000000  2100              MOVS     r1,#0
;;;311    {
;;;312      /* SDIO_InitStruct members default value */
;;;313      SDIO_InitStruct->SDIO_ClockDiv = 0x00;
000002  7501              STRB     r1,[r0,#0x14]
;;;314      SDIO_InitStruct->SDIO_ClockEdge = SDIO_ClockEdge_Rising;
;;;315      SDIO_InitStruct->SDIO_ClockBypass = SDIO_ClockBypass_Disable;
000004  6001              STR      r1,[r0,#0]
;;;316      SDIO_InitStruct->SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
000006  6041              STR      r1,[r0,#4]
;;;317      SDIO_InitStruct->SDIO_BusWide = SDIO_BusWide_1b;
000008  6081              STR      r1,[r0,#8]
;;;318      SDIO_InitStruct->SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
00000a  60c1              STR      r1,[r0,#0xc]
00000c  6101              STR      r1,[r0,#0x10]
;;;319    }
00000e  4770              BX       lr
;;;320    
                          ENDP


                          AREA ||i.SDIO_WriteData||, CODE, READONLY, ALIGN=2

                  SDIO_WriteData PROC
;;;572      */
;;;573    void SDIO_WriteData(uint32_t Data)
000000  4901              LDR      r1,|L30.8|
;;;574    { 
;;;575      SDIO->FIFO = Data;
000002  6008              STR      r0,[r1,#0]
;;;576    }
000004  4770              BX       lr
;;;577    
                          ENDP

000006  0000              DCW      0x0000
                  |L30.8|
                          DCD      0x40012c80

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  2e2e5c4f          DCB      "..\\OS\\bsp\\stm32f40x\\Libraries\\STM32F4xx_StdPeriph_"
000004  535c6273
000008  705c7374
00000c  6d333266
000010  3430785c
000014  4c696272
000018  61726965
00001c  735c5354
000020  4d333246
000024  3478785f
000028  53746450
00002c  65726970
000030  685f    
000032  44726976          DCB      "Driver\\src\\stm32f4xx_sdio.c",0
000036  65725c73
00003a  72635c73
00003e  746d3332
000042  66347878
000046  5f736469
00004a  6f2e6300

;*** Start embedded assembler ***

#line 1 "..\\OS\\bsp\\stm32f40x\\Libraries\\STM32F4xx_StdPeriph_Driver\\src\\stm32f4xx_sdio.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_sdio_c_c8827541____REV16|
#line 114 "..\\OS\\bsp\\stm32f40x\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___16_stm32f4xx_sdio_c_c8827541____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_sdio_c_c8827541____REVSH|
#line 128
|__asm___16_stm32f4xx_sdio_c_c8827541____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
