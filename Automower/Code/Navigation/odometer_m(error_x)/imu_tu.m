function [stateVec_updated,poseVec_updated,P_updated]=imu_tu(poseVec,stateVec,axb,ayb,w,P,dt,Q)
A = [1 0 0 dt 0 0;0 1 0 0 dt 0;0 0 1 0 0 0;0 0 0 1 0 0;0 0 0 0 1 0;0 0 0 0 0 0];
theta = poseVec(3);
% ax = (axb*cos(theta)-ayb*sin(theta));
% ay = (axb*sin(theta)+ayb*cos(theta));
ax = (axb*cos(theta)+ayb*sin(theta));
ay = (axb*sin(theta)-ayb*cos(theta));
B = [0.5*ax*dt^2;...
     0.5*ay*dt^2;...
     w*dt;...
     ax*dt;...
     ay*dt;...
     w];
poseVec_updated = A*poseVec + B;
%根据误差传递公式if y=f(x1,x2) delta_y=f'(x1)*dx1+f'(x2)*dx2;
%可得状态转移矩阵
% F = A + C;



% ax_ = -axb*sin(theta)-ayb*cos(theta);
% ay_ = axb*cos(theta)-ayb*sin(theta);
ax_ = -axb*sin(theta)+ayb*cos(theta);
ay_ = axb*cos(theta)+ayb*sin(theta);
FDisc = [1 0 0.5*ax_*dt^2 dt 0  0;...
         0 1 0.5*ay_*dt^2 0  dt 0;...
         0 0 1           0  0  0;...
         0 0 ax_*dt       1  0  0;...
         0 0 ay_*dt       0  1  0;...
         0 0 0           0  0  0];
% FDisc = [0 0 0.5*ax_*dt^2 dt 0  0;...
%          0 0 0.5*ay_*dt^2 0  dt 0;...
%          0 0 1           0  0  0;...
%          0 0 ax_*dt       1  0  0;...
%          0 0 ay_*dt       0  1  0;...
%          0 0 0           0  0  0];
stateVec_updated = FDisc*stateVec;

%噪声传递矩阵
G = [-0.5*sin(theta)*dt^2 0.5*cos(theta)*dt^2 0;...
     0.5*cos(theta)*dt^2  0.5*sin(theta)*dt^2 0;...
     0                    0                    0;...
     -sin(theta)*dt       cos(theta)*dt       0;...
     cos(theta)*dt        sin(theta)*dt        0;...
     0                    0                    0];
 
% G = [-0.5*sin(theta)*dt^2 -0.5*cos(theta)*dt^2 0;...
%       0.5*cos(theta)*dt^2  -0.5*sin(theta)*dt^2 0;...
%      0                    0                    0;...
%      -sin(theta)*dt       -cos(theta)*dt       0;...
%      cos(theta)*dt        -sin(theta)*dt        0;...
%      0                    0                    0];
%计算离散Q矩阵
% QDisc = 0.5 *dt*(FDisc * G * Q * G'* FDisc'+ G * Q * G');
QDisc = G * Q * G';

%P矩阵计算
P = FDisc * P *(FDisc') + QDisc;
 
%保证P矩阵对称性,防止因为病态矩阵引起滤波器发散
P_updated = 0.5*(P + transpose(P));

%保证对角线元素为正
for i=1:length(P)
    if P_updated(i,i) < 0
        P_updated(i,i) = 0;
    end
end
 
% poseVec_updated = poseVec + stateVec_updated;

end
