; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\delay.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\delay.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\OS -I..\OS\components\finsh -I..\OS\include -I..\OS\libcpu\arm\common -I..\OS\libcpu\arm\cortex-m4 -I..\OS\bsp\stm32f40x\Libraries\CMSIS\Include -I..\OS\bsp\stm32f40x\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\OS\bsp\stm32f40x\Libraries\CMSIS\ST\STM32F4xx\Include -I..\OS\bsp\stm32f40x\applications -I..\OS\bsp\stm32f40x\drivers -I..\OS\bsp\stm32f40x -I..\ext\inc -I..\tb_Application -I..\tb_Algorithm -I..\tb_Driver -IE:\Robotic_Platform\mdk_Prj\RTE -Id:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.8.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=520 -DSTM32F429xx -DUSE_STDPERIPH_DRIVER -DSTM32F429xx --omf_browse=.\objects\delay.crf ..\ext\sys\delay.c]
                          THUMB

                          AREA ||i.delay_init||, CODE, READONLY, ALIGN=2

                  delay_init PROC
;;;105    //SYSCLK:系统时钟频率
;;;106    void delay_init(u8 SYSCLK)
000000  f04f21e0          MOV      r1,#0xe000e000
;;;107    {
;;;108    #if SYSTEM_SUPPORT_OS 						//如果需要支持OS.
;;;109    	u32 reload;
;;;110    #endif
;;;111     	SysTick->CTRL&=~(1<<2);					//SYSTICK使用外部时钟源	 
000004  690a              LDR      r2,[r1,#0x10]
000006  f0220204          BIC      r2,r2,#4
00000a  610a              STR      r2,[r1,#0x10]
;;;112    	fac_us=SYSCLK/8;						//不论是否使用OS,fac_us都需要使用
00000c  4904              LDR      r1,|L1.32|
00000e  08c2              LSRS     r2,r0,#3
000010  700a              STRB     r2,[r1,#0]
;;;113    #if SYSTEM_SUPPORT_OS 						//如果需要支持OS.
;;;114    	reload=SYSCLK/8;						//每秒钟的计数次数 单位为M	   
;;;115    	reload*=1000000/delay_ostickspersec;	//根据delay_ostickspersec设定溢出时间
;;;116    											//reload为24位寄存器,最大值:16777216,在180M下,约合0.699s左右	
;;;117    	fac_ms=1000/delay_ostickspersec;		//代表OS可以延时的最少单位	   
;;;118    	SysTick->CTRL|=1<<1;   					//开启SYSTICK中断
;;;119    	SysTick->LOAD=reload; 					//每1/delay_ostickspersec秒中断一次	
;;;120    	SysTick->CTRL|=1<<0;   					//开启SYSTICK    
;;;121    #else
;;;122    	fac_ms=((u32)SYSCLK*1000)/8;			//非OS下,代表每个ms需要的systick时钟数   
000012  f44f727a          MOV      r2,#0x3e8
000016  fb10f002          SMULBB   r0,r0,r2
00001a  08c0              LSRS     r0,r0,#3
00001c  8048              STRH     r0,[r1,#2]
;;;123    #endif
;;;124    }								    
00001e  4770              BX       lr
;;;125    
                          ENDP

                  |L1.32|
                          DCD      ||.data||

                          AREA ||i.delay_ms||, CODE, READONLY, ALIGN=1

                  delay_ms PROC
;;;203    //nms:0~65535
;;;204    void delay_ms(u16 nms)
000000  b570              PUSH     {r4-r6,lr}
;;;205    {	 	 
;;;206    	u8 repeat=nms/540;						//这里用540,是考虑到某些客户可能超频使用,
000002  f44f7607          MOV      r6,#0x21c
000006  fbb0f1f6          UDIV     r1,r0,r6
00000a  b2cc              UXTB     r4,r1
;;;207    											//比如超频到248M的时候,delay_xms最大只能延时541ms左右了
;;;208    	u16 remain=nms%540;
00000c  fbb0f1f6          UDIV     r1,r0,r6
000010  fb060511          MLS      r5,r6,r1,r0
000014  e004              B        |L2.32|
                  |L2.22|
;;;209    	while(repeat)
;;;210    	{
;;;211    		delay_xms(540);
000016  4630              MOV      r0,r6
000018  f7fffffe          BL       delay_xms
00001c  1e64              SUBS     r4,r4,#1
;;;212    		repeat--;
00001e  b2e4              UXTB     r4,r4
                  |L2.32|
000020  2c00              CMP      r4,#0                 ;209
000022  d1f8              BNE      |L2.22|
;;;213    	}
;;;214    	if(remain)delay_xms(remain);
000024  2d00              CMP      r5,#0
000026  d004              BEQ      |L2.50|
000028  4628              MOV      r0,r5
00002a  e8bd4070          POP      {r4-r6,lr}
00002e  f7ffbffe          B.W      delay_xms
                  |L2.50|
;;;215    } 
000032  bd70              POP      {r4-r6,pc}
;;;216    #endif
                          ENDP


                          AREA ||i.delay_us||, CODE, READONLY, ALIGN=2

                  delay_us PROC
;;;169    //注意:nus的值,不要大于798915us(最大值即2^24/fac_us@fac_us=21)
;;;170    void delay_us(u32 nus)
000000  4908              LDR      r1,|L3.36|
;;;171    {		
;;;172    	u32 temp;	    	 
;;;173    	SysTick->LOAD=nus*fac_us; 				//时间加载	  		 
000002  7809              LDRB     r1,[r1,#0]  ; fac_us
000004  4348              MULS     r0,r1,r0
000006  f04f21e0          MOV      r1,#0xe000e000
00000a  6148              STR      r0,[r1,#0x14]
;;;174    	SysTick->VAL=0x00;        				//清空计数器
00000c  2300              MOVS     r3,#0
00000e  618b              STR      r3,[r1,#0x18]
;;;175    	SysTick->CTRL=0x01 ;      				//开始倒数 	 
000010  2001              MOVS     r0,#1
000012  6108              STR      r0,[r1,#0x10]
                  |L3.20|
;;;176    	do
;;;177    	{
;;;178    		temp=SysTick->CTRL;
000014  6908              LDR      r0,[r1,#0x10]
;;;179    	}while((temp&0x01)&&!(temp&(1<<16)));	//等待时间到达   
000016  07c2              LSLS     r2,r0,#31
000018  d001              BEQ      |L3.30|
00001a  03c0              LSLS     r0,r0,#15
00001c  d5fa              BPL      |L3.20|
                  |L3.30|
;;;180    	SysTick->CTRL=0x00;      	 			//关闭计数器
00001e  610b              STR      r3,[r1,#0x10]
;;;181    	SysTick->VAL =0X00;       				//清空计数器 
000020  618b              STR      r3,[r1,#0x18]
;;;182    }
000022  4770              BX       lr
;;;183    //延时nms
                          ENDP

                  |L3.36|
                          DCD      ||.data||

                          AREA ||i.delay_xms||, CODE, READONLY, ALIGN=2

                  delay_xms PROC
;;;188    //对180M条件下,nms<=745ms 
;;;189    void delay_xms(u16 nms)
000000  4908              LDR      r1,|L4.36|
;;;190    {	 		  	  
;;;191    	u32 temp;		   
;;;192    	SysTick->LOAD=(u32)nms*fac_ms;			//时间加载(SysTick->LOAD为24bit)
000002  8849              LDRH     r1,[r1,#2]  ; fac_ms
000004  4348              MULS     r0,r1,r0
000006  f04f21e0          MOV      r1,#0xe000e000
00000a  6148              STR      r0,[r1,#0x14]
;;;193    	SysTick->VAL =0x00;           			//清空计数器
00000c  2300              MOVS     r3,#0
00000e  618b              STR      r3,[r1,#0x18]
;;;194    	SysTick->CTRL=0x01 ;          			//开始倒数  
000010  2001              MOVS     r0,#1
000012  6108              STR      r0,[r1,#0x10]
                  |L4.20|
;;;195    	do
;;;196    	{
;;;197    		temp=SysTick->CTRL;
000014  6908              LDR      r0,[r1,#0x10]
;;;198    	}while((temp&0x01)&&!(temp&(1<<16)));	//等待时间到达   
000016  07c2              LSLS     r2,r0,#31
000018  d001              BEQ      |L4.30|
00001a  03c0              LSLS     r0,r0,#15
00001c  d5fa              BPL      |L4.20|
                  |L4.30|
;;;199    	SysTick->CTRL=0x00;       				//关闭计数器
00001e  610b              STR      r3,[r1,#0x10]
;;;200    	SysTick->VAL =0X00;     		  		//清空计数器	  	    
000020  618b              STR      r3,[r1,#0x18]
;;;201    } 
000022  4770              BX       lr
;;;202    //延时nms 
                          ENDP

                  |L4.36|
                          DCD      ||.data||

                          AREA ||.data||, DATA, ALIGN=1

                  fac_us
000000  0000              DCB      0x00,0x00
                  fac_ms
000002  0000              DCW      0x0000

;*** Start embedded assembler ***

#line 1 "..\\ext\\sys\\delay.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___7_delay_c_f6a9c549____REV16|
#line 388 "..\\ext\\inc\\cmsis_armcc.h"
|__asm___7_delay_c_f6a9c549____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___7_delay_c_f6a9c549____REVSH|
#line 402
|__asm___7_delay_c_f6a9c549____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___7_delay_c_f6a9c549____RRX|
#line 587
|__asm___7_delay_c_f6a9c549____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
