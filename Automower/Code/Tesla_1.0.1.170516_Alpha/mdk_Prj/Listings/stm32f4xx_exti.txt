; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\stm32f4xx_exti.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\stm32f4xx_exti.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\OS -I..\OS\components\finsh -I..\OS\include -I..\OS\libcpu\arm\common -I..\OS\libcpu\arm\cortex-m4 -I..\OS\bsp\stm32f40x\Libraries\CMSIS\Include -I..\OS\bsp\stm32f40x\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\OS\bsp\stm32f40x\Libraries\CMSIS\ST\STM32F4xx\Include -I..\OS\bsp\stm32f40x\applications -I..\OS\bsp\stm32f40x\drivers -I..\OS\bsp\stm32f40x -I..\ext\inc -I..\tb_Application -I..\tb_Algorithm -I..\tb_Driver -IE:\Robotic_Platform\mdk_Prj\RTE -Id:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.8.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=520 -DSTM32F429xx -DUSE_STDPERIPH_DRIVER -DSTM32F429xx --omf_browse=.\objects\stm32f4xx_exti.crf ..\OS\bsp\stm32f40x\Libraries\STM32F4xx_StdPeriph_Driver\src\stm32f4xx_exti.c]
                          THUMB

                          AREA ||i.EXTI_ClearFlag||, CODE, READONLY, ALIGN=2

                  EXTI_ClearFlag PROC
;;;242      */
;;;243    void EXTI_ClearFlag(uint32_t EXTI_Line)
000000  b510              PUSH     {r4,lr}
;;;244    {
000002  4604              MOV      r4,r0
;;;245      /* Check the parameters */
;;;246      assert_param(IS_EXTI_LINE(EXTI_Line));
000004  0dc0              LSRS     r0,r0,#23
000006  d100              BNE      |L1.10|
000008  b91c              CBNZ     r4,|L1.18|
                  |L1.10|
00000a  21f6              MOVS     r1,#0xf6
00000c  4802              LDR      r0,|L1.24|
00000e  f7fffffe          BL       assert_failed
                  |L1.18|
;;;247      
;;;248      EXTI->PR = EXTI_Line;
000012  4802              LDR      r0,|L1.28|
000014  6004              STR      r4,[r0,#0]
;;;249    }
000016  bd10              POP      {r4,pc}
;;;250    
                          ENDP

                  |L1.24|
                          DCD      ||.conststring||
                  |L1.28|
                          DCD      0x40013c14

                          AREA ||i.EXTI_ClearITPendingBit||, CODE, READONLY, ALIGN=2

                  EXTI_ClearITPendingBit PROC
;;;281      */
;;;282    void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
000000  b510              PUSH     {r4,lr}
;;;283    {
000002  4604              MOV      r4,r0
;;;284      /* Check the parameters */
;;;285      assert_param(IS_EXTI_LINE(EXTI_Line));
000004  0dc0              LSRS     r0,r0,#23
000006  d100              BNE      |L2.10|
000008  b924              CBNZ     r4,|L2.20|
                  |L2.10|
00000a  f240111d          MOV      r1,#0x11d
00000e  4803              LDR      r0,|L2.28|
000010  f7fffffe          BL       assert_failed
                  |L2.20|
;;;286      
;;;287      EXTI->PR = EXTI_Line;
000014  4802              LDR      r0,|L2.32|
000016  6004              STR      r4,[r0,#0]
;;;288    }
000018  bd10              POP      {r4,pc}
;;;289    
                          ENDP

00001a  0000              DCW      0x0000
                  |L2.28|
                          DCD      ||.conststring||
                  |L2.32|
                          DCD      0x40013c14

                          AREA ||i.EXTI_DeInit||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;102      */
;;;103    void EXTI_DeInit(void)
000000  4906              LDR      r1,|L3.28|
;;;104    {
;;;105      EXTI->IMR = 0x00000000;
000002  2000              MOVS     r0,#0
000004  6008              STR      r0,[r1,#0]
;;;106      EXTI->EMR = 0x00000000;
000006  1d09              ADDS     r1,r1,#4
000008  6008              STR      r0,[r1,#0]
;;;107      EXTI->RTSR = 0x00000000;
00000a  1d09              ADDS     r1,r1,#4
00000c  6008              STR      r0,[r1,#0]
;;;108      EXTI->FTSR = 0x00000000;
00000e  1d09              ADDS     r1,r1,#4
000010  6008              STR      r0,[r1,#0]
;;;109      EXTI->PR = 0x007FFFFF;
000012  4902              LDR      r1,|L3.28|
000014  4802              LDR      r0,|L3.32|
000016  3114              ADDS     r1,r1,#0x14
000018  6008              STR      r0,[r1,#0]
;;;110    }
00001a  4770              BX       lr
;;;111    
                          ENDP

                  |L3.28|
                          DCD      0x40013c00
                  |L3.32|
                          DCD      0x007fffff

                          AREA ||i.EXTI_GenerateSWInterrupt||, CODE, READONLY, ALIGN=2

                  EXTI_GenerateSWInterrupt PROC
;;;189      */
;;;190    void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
000000  b510              PUSH     {r4,lr}
;;;191    {
000002  4604              MOV      r4,r0
;;;192      /* Check the parameters */
;;;193      assert_param(IS_EXTI_LINE(EXTI_Line));
000004  0dc0              LSRS     r0,r0,#23
000006  d100              BNE      |L4.10|
000008  b91c              CBNZ     r4,|L4.18|
                  |L4.10|
00000a  21c1              MOVS     r1,#0xc1
00000c  4803              LDR      r0,|L4.28|
00000e  f7fffffe          BL       assert_failed
                  |L4.18|
;;;194      
;;;195      EXTI->SWIER |= EXTI_Line;
000012  4803              LDR      r0,|L4.32|
000014  6801              LDR      r1,[r0,#0]
000016  4321              ORRS     r1,r1,r4
000018  6001              STR      r1,[r0,#0]
;;;196    }
00001a  bd10              POP      {r4,pc}
;;;197    
                          ENDP

                  |L4.28|
                          DCD      ||.conststring||
                  |L4.32|
                          DCD      0x40013c10

                          AREA ||i.EXTI_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetFlagStatus PROC
;;;219      */
;;;220    FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
000000  b570              PUSH     {r4-r6,lr}
;;;221    {
;;;222      FlagStatus bitstatus = RESET;
000002  2500              MOVS     r5,#0
000004  4604              MOV      r4,r0                 ;221
;;;223      /* Check the parameters */
;;;224      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
000006  2801              CMP      r0,#1
000008  d03e              BEQ      |L5.136|
00000a  2c02              CMP      r4,#2
00000c  d03c              BEQ      |L5.136|
00000e  2c04              CMP      r4,#4
000010  d03a              BEQ      |L5.136|
000012  2c08              CMP      r4,#8
000014  d038              BEQ      |L5.136|
000016  2c10              CMP      r4,#0x10
000018  d036              BEQ      |L5.136|
00001a  2c20              CMP      r4,#0x20
00001c  d034              BEQ      |L5.136|
00001e  2c40              CMP      r4,#0x40
000020  d032              BEQ      |L5.136|
000022  2c80              CMP      r4,#0x80
000024  d030              BEQ      |L5.136|
000026  f5b47f80          CMP      r4,#0x100
00002a  d02d              BEQ      |L5.136|
00002c  f5b47f00          CMP      r4,#0x200
000030  d02a              BEQ      |L5.136|
000032  f5b46f80          CMP      r4,#0x400
000036  d027              BEQ      |L5.136|
000038  f5b46f00          CMP      r4,#0x800
00003c  d024              BEQ      |L5.136|
00003e  f5b45f80          CMP      r4,#0x1000
000042  d021              BEQ      |L5.136|
000044  f5b45f00          CMP      r4,#0x2000
000048  d01e              BEQ      |L5.136|
00004a  f5b44f80          CMP      r4,#0x4000
00004e  d01b              BEQ      |L5.136|
000050  f5b44f00          CMP      r4,#0x8000
000054  d018              BEQ      |L5.136|
000056  f5b43f80          CMP      r4,#0x10000
00005a  d015              BEQ      |L5.136|
00005c  f5b43f00          CMP      r4,#0x20000
000060  d012              BEQ      |L5.136|
000062  f5b42f80          CMP      r4,#0x40000
000066  d00f              BEQ      |L5.136|
000068  f5b42f00          CMP      r4,#0x80000
00006c  d00c              BEQ      |L5.136|
00006e  f5b41f80          CMP      r4,#0x100000
000072  d009              BEQ      |L5.136|
000074  f5b41f00          CMP      r4,#0x200000
000078  d006              BEQ      |L5.136|
00007a  f5b40f80          CMP      r4,#0x400000
00007e  d003              BEQ      |L5.136|
000080  21e0              MOVS     r1,#0xe0
000082  4805              LDR      r0,|L5.152|
000084  f7fffffe          BL       assert_failed
                  |L5.136|
;;;225      
;;;226      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
000088  4804              LDR      r0,|L5.156|
00008a  6800              LDR      r0,[r0,#0]
00008c  4220              TST      r0,r4
00008e  d000              BEQ      |L5.146|
;;;227      {
;;;228        bitstatus = SET;
000090  2501              MOVS     r5,#1
                  |L5.146|
;;;229      }
;;;230      else
;;;231      {
;;;232        bitstatus = RESET;
;;;233      }
;;;234      return bitstatus;
000092  4628              MOV      r0,r5
;;;235    }
000094  bd70              POP      {r4-r6,pc}
;;;236    
                          ENDP

000096  0000              DCW      0x0000
                  |L5.152|
                          DCD      ||.conststring||
                  |L5.156|
                          DCD      0x40013c14

                          AREA ||i.EXTI_GetITStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetITStatus PROC
;;;256      */
;;;257    ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
000000  b570              PUSH     {r4-r6,lr}
;;;258    {
;;;259      ITStatus bitstatus = RESET;
000002  2500              MOVS     r5,#0
000004  4604              MOV      r4,r0                 ;258
;;;260      uint32_t enablestatus = 0;
;;;261      /* Check the parameters */
;;;262      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
000006  2801              CMP      r0,#1
000008  d03f              BEQ      |L6.138|
00000a  2c02              CMP      r4,#2
00000c  d03d              BEQ      |L6.138|
00000e  2c04              CMP      r4,#4
000010  d03b              BEQ      |L6.138|
000012  2c08              CMP      r4,#8
000014  d039              BEQ      |L6.138|
000016  2c10              CMP      r4,#0x10
000018  d037              BEQ      |L6.138|
00001a  2c20              CMP      r4,#0x20
00001c  d035              BEQ      |L6.138|
00001e  2c40              CMP      r4,#0x40
000020  d033              BEQ      |L6.138|
000022  2c80              CMP      r4,#0x80
000024  d031              BEQ      |L6.138|
000026  f5b47f80          CMP      r4,#0x100
00002a  d02e              BEQ      |L6.138|
00002c  f5b47f00          CMP      r4,#0x200
000030  d02b              BEQ      |L6.138|
000032  f5b46f80          CMP      r4,#0x400
000036  d028              BEQ      |L6.138|
000038  f5b46f00          CMP      r4,#0x800
00003c  d025              BEQ      |L6.138|
00003e  f5b45f80          CMP      r4,#0x1000
000042  d022              BEQ      |L6.138|
000044  f5b45f00          CMP      r4,#0x2000
000048  d01f              BEQ      |L6.138|
00004a  f5b44f80          CMP      r4,#0x4000
00004e  d01c              BEQ      |L6.138|
000050  f5b44f00          CMP      r4,#0x8000
000054  d019              BEQ      |L6.138|
000056  f5b43f80          CMP      r4,#0x10000
00005a  d016              BEQ      |L6.138|
00005c  f5b43f00          CMP      r4,#0x20000
000060  d013              BEQ      |L6.138|
000062  f5b42f80          CMP      r4,#0x40000
000066  d010              BEQ      |L6.138|
000068  f5b42f00          CMP      r4,#0x80000
00006c  d00d              BEQ      |L6.138|
00006e  f5b41f80          CMP      r4,#0x100000
000072  d00a              BEQ      |L6.138|
000074  f5b41f00          CMP      r4,#0x200000
000078  d007              BEQ      |L6.138|
00007a  f5b40f80          CMP      r4,#0x400000
00007e  d004              BEQ      |L6.138|
000080  f44f7183          MOV      r1,#0x106
000084  4807              LDR      r0,|L6.164|
000086  f7fffffe          BL       assert_failed
                  |L6.138|
;;;263      
;;;264      enablestatus =  EXTI->IMR & EXTI_Line;
00008a  4807              LDR      r0,|L6.168|
00008c  6800              LDR      r0,[r0,#0]
;;;265      if (((EXTI->PR & EXTI_Line) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
00008e  4906              LDR      r1,|L6.168|
000090  4020              ANDS     r0,r0,r4              ;264
000092  3114              ADDS     r1,r1,#0x14
000094  6809              LDR      r1,[r1,#0]
000096  4221              TST      r1,r4
000098  d001              BEQ      |L6.158|
00009a  b100              CBZ      r0,|L6.158|
;;;266      {
;;;267        bitstatus = SET;
00009c  2501              MOVS     r5,#1
                  |L6.158|
;;;268      }
;;;269      else
;;;270      {
;;;271        bitstatus = RESET;
;;;272      }
;;;273      return bitstatus;
00009e  4628              MOV      r0,r5
;;;274    }
0000a0  bd70              POP      {r4-r6,pc}
;;;275    
                          ENDP

0000a2  0000              DCW      0x0000
                  |L6.164|
                          DCD      ||.conststring||
                  |L6.168|
                          DCD      0x40013c00

                          AREA ||i.EXTI_Init||, CODE, READONLY, ALIGN=2

                  EXTI_Init PROC
;;;118      */
;;;119    void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
000000  b570              PUSH     {r4-r6,lr}
;;;120    {
000002  4604              MOV      r4,r0
;;;121      uint32_t tmp = 0;
;;;122    
;;;123      /* Check the parameters */
;;;124      assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
000004  7900              LDRB     r0,[r0,#4]
000006  b128              CBZ      r0,|L7.20|
000008  2804              CMP      r0,#4
00000a  d003              BEQ      |L7.20|
00000c  217c              MOVS     r1,#0x7c
00000e  4829              LDR      r0,|L7.180|
000010  f7fffffe          BL       assert_failed
                  |L7.20|
;;;125      assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
000014  7960              LDRB     r0,[r4,#5]
000016  2808              CMP      r0,#8
000018  d007              BEQ      |L7.42|
00001a  280c              CMP      r0,#0xc
00001c  d005              BEQ      |L7.42|
00001e  2810              CMP      r0,#0x10
000020  d003              BEQ      |L7.42|
000022  217d              MOVS     r1,#0x7d
000024  4823              LDR      r0,|L7.180|
000026  f7fffffe          BL       assert_failed
                  |L7.42|
;;;126      assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
00002a  6820              LDR      r0,[r4,#0]
00002c  0dc1              LSRS     r1,r0,#23
00002e  d100              BNE      |L7.50|
000030  b918              CBNZ     r0,|L7.58|
                  |L7.50|
000032  217e              MOVS     r1,#0x7e
000034  481f              LDR      r0,|L7.180|
000036  f7fffffe          BL       assert_failed
                  |L7.58|
;;;127      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
00003a  79a0              LDRB     r0,[r4,#6]
00003c  b128              CBZ      r0,|L7.74|
00003e  2801              CMP      r0,#1
000040  d003              BEQ      |L7.74|
000042  217f              MOVS     r1,#0x7f
000044  481b              LDR      r0,|L7.180|
000046  f7fffffe          BL       assert_failed
                  |L7.74|
;;;128    
;;;129      tmp = (uint32_t)EXTI_BASE;
00004a  491b              LDR      r1,|L7.184|
;;;130         
;;;131      if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
00004c  79a0              LDRB     r0,[r4,#6]
00004e  b358              CBZ      r0,|L7.168|
;;;132      {
;;;133        /* Clear EXTI line configuration */
;;;134        EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
000050  6808              LDR      r0,[r1,#0]
000052  6822              LDR      r2,[r4,#0]
000054  4390              BICS     r0,r0,r2
000056  6008              STR      r0,[r1,#0]
;;;135        EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
000058  1d08              ADDS     r0,r1,#4
00005a  6802              LDR      r2,[r0,#0]
00005c  6823              LDR      r3,[r4,#0]
00005e  439a              BICS     r2,r2,r3
000060  6002              STR      r2,[r0,#0]
;;;136        
;;;137        tmp += EXTI_InitStruct->EXTI_Mode;
000062  7920              LDRB     r0,[r4,#4]
000064  4408              ADD      r0,r0,r1
;;;138    
;;;139        *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000066  6802              LDR      r2,[r0,#0]
000068  6823              LDR      r3,[r4,#0]
00006a  431a              ORRS     r2,r2,r3
00006c  6002              STR      r2,[r0,#0]
;;;140    
;;;141        /* Clear Rising Falling edge configuration */
;;;142        EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
00006e  4b12              LDR      r3,|L7.184|
000070  3308              ADDS     r3,r3,#8
000072  6818              LDR      r0,[r3,#0]
000074  6822              LDR      r2,[r4,#0]
000076  4390              BICS     r0,r0,r2
000078  6018              STR      r0,[r3,#0]
;;;143        EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
00007a  1d1a              ADDS     r2,r3,#4
00007c  6810              LDR      r0,[r2,#0]
00007e  6825              LDR      r5,[r4,#0]
000080  43a8              BICS     r0,r0,r5
000082  6010              STR      r0,[r2,#0]
;;;144        
;;;145        /* Select the trigger for the selected external interrupts */
;;;146        if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
000084  7960              LDRB     r0,[r4,#5]
000086  2810              CMP      r0,#0x10
000088  d005              BEQ      |L7.150|
;;;147        {
;;;148          /* Rising Falling edge */
;;;149          EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
;;;150          EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
;;;151        }
;;;152        else
;;;153        {
;;;154          tmp = (uint32_t)EXTI_BASE;
;;;155          tmp += EXTI_InitStruct->EXTI_Trigger;
00008a  4408              ADD      r0,r0,r1
;;;156    
;;;157          *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
00008c  6801              LDR      r1,[r0,#0]
00008e  6822              LDR      r2,[r4,#0]
000090  4311              ORRS     r1,r1,r2
                  |L7.146|
;;;158        }
;;;159      }
;;;160      else
;;;161      {
;;;162        tmp += EXTI_InitStruct->EXTI_Mode;
;;;163    
;;;164        /* Disable the selected external lines */
;;;165        *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
000092  6001              STR      r1,[r0,#0]
;;;166      }
;;;167    }
000094  bd70              POP      {r4-r6,pc}
                  |L7.150|
000096  6818              LDR      r0,[r3,#0]            ;149
000098  6821              LDR      r1,[r4,#0]            ;149
00009a  4308              ORRS     r0,r0,r1              ;149
00009c  6018              STR      r0,[r3,#0]            ;149
00009e  6810              LDR      r0,[r2,#0]            ;150
0000a0  6821              LDR      r1,[r4,#0]            ;150
0000a2  4308              ORRS     r0,r0,r1              ;150
0000a4  6010              STR      r0,[r2,#0]            ;150
0000a6  bd70              POP      {r4-r6,pc}
                  |L7.168|
0000a8  7920              LDRB     r0,[r4,#4]            ;162
0000aa  4408              ADD      r0,r0,r1              ;162
0000ac  6801              LDR      r1,[r0,#0]            ;165
0000ae  6822              LDR      r2,[r4,#0]            ;165
0000b0  4391              BICS     r1,r1,r2              ;165
0000b2  e7ee              B        |L7.146|
;;;168    
                          ENDP

                  |L7.180|
                          DCD      ||.conststring||
                  |L7.184|
                          DCD      0x40013c00

                          AREA ||i.EXTI_StructInit||, CODE, READONLY, ALIGN=1

                  EXTI_StructInit PROC
;;;174      */
;;;175    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;176    {
;;;177      EXTI_InitStruct->EXTI_Line = EXTI_LINENONE;
;;;178      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
000002  6001              STR      r1,[r0,#0]
000004  7101              STRB     r1,[r0,#4]
;;;179      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
000006  220c              MOVS     r2,#0xc
000008  7142              STRB     r2,[r0,#5]
;;;180      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
00000a  7181              STRB     r1,[r0,#6]
;;;181    }
00000c  4770              BX       lr
;;;182    
                          ENDP


                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  2e2e5c4f          DCB      "..\\OS\\bsp\\stm32f40x\\Libraries\\STM32F4xx_StdPeriph_"
000004  535c6273
000008  705c7374
00000c  6d333266
000010  3430785c
000014  4c696272
000018  61726965
00001c  735c5354
000020  4d333246
000024  3478785f
000028  53746450
00002c  65726970
000030  685f    
000032  44726976          DCB      "Driver\\src\\stm32f4xx_exti.c",0
000036  65725c73
00003a  72635c73
00003e  746d3332
000042  66347878
000046  5f657874
00004a  692e6300

;*** Start embedded assembler ***

#line 1 "..\\OS\\bsp\\stm32f40x\\Libraries\\STM32F4xx_StdPeriph_Driver\\src\\stm32f4xx_exti.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_exti_c_28b3b60e____REV16|
#line 114 "..\\OS\\bsp\\stm32f40x\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___16_stm32f4xx_exti_c_28b3b60e____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_exti_c_28b3b60e____REVSH|
#line 128
|__asm___16_stm32f4xx_exti_c_28b3b60e____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
