; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\stm32f4xx_iwdg.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\stm32f4xx_iwdg.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\OS -I..\OS\components\finsh -I..\OS\include -I..\OS\libcpu\arm\common -I..\OS\libcpu\arm\cortex-m4 -I..\OS\bsp\stm32f40x\Libraries\CMSIS\Include -I..\OS\bsp\stm32f40x\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\OS\bsp\stm32f40x\Libraries\CMSIS\ST\STM32F4xx\Include -I..\OS\bsp\stm32f40x\applications -I..\OS\bsp\stm32f40x\drivers -I..\OS\bsp\stm32f40x -I..\ext\inc -I..\tb_Application -I..\tb_Algorithm -I..\tb_Driver -IE:\Robotic_Platform\mdk_Prj\RTE -Id:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.8.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=520 -DSTM32F429xx -DUSE_STDPERIPH_DRIVER -DSTM32F429xx --omf_browse=.\objects\stm32f4xx_iwdg.crf ..\OS\bsp\stm32f40x\Libraries\STM32F4xx_StdPeriph_Driver\src\stm32f4xx_iwdg.c]
                          THUMB

                          AREA ||i.IWDG_Enable||, CODE, READONLY, ALIGN=2

                  IWDG_Enable PROC
;;;200      */
;;;201    void IWDG_Enable(void)
000000  4902              LDR      r1,|L1.12|
;;;202    {
;;;203      IWDG->KR = KR_KEY_ENABLE;
000002  f64c40cc          MOV      r0,#0xcccc
000006  6008              STR      r0,[r1,#0]
;;;204    }
000008  4770              BX       lr
;;;205    
                          ENDP

00000a  0000              DCW      0x0000
                  |L1.12|
                          DCD      0x40003000

                          AREA ||i.IWDG_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  IWDG_GetFlagStatus PROC
;;;229      */
;;;230    FlagStatus IWDG_GetFlagStatus(uint16_t IWDG_FLAG)
000000  b570              PUSH     {r4-r6,lr}
;;;231    {
;;;232      FlagStatus bitstatus = RESET;
000002  2500              MOVS     r5,#0
000004  4604              MOV      r4,r0                 ;231
;;;233      /* Check the parameters */
;;;234      assert_param(IS_IWDG_FLAG(IWDG_FLAG));
000006  2801              CMP      r0,#1
000008  d005              BEQ      |L2.22|
00000a  2c02              CMP      r4,#2
00000c  d003              BEQ      |L2.22|
00000e  21ea              MOVS     r1,#0xea
000010  4804              LDR      r0,|L2.36|
000012  f7fffffe          BL       assert_failed
                  |L2.22|
;;;235      if ((IWDG->SR & IWDG_FLAG) != (uint32_t)RESET)
000016  4804              LDR      r0,|L2.40|
000018  68c0              LDR      r0,[r0,#0xc]
00001a  4220              TST      r0,r4
00001c  d000              BEQ      |L2.32|
;;;236      {
;;;237        bitstatus = SET;
00001e  2501              MOVS     r5,#1
                  |L2.32|
;;;238      }
;;;239      else
;;;240      {
;;;241        bitstatus = RESET;
;;;242      }
;;;243      /* Return the flag status */
;;;244      return bitstatus;
000020  4628              MOV      r0,r5
;;;245    }
000022  bd70              POP      {r4-r6,pc}
;;;246    
                          ENDP

                  |L2.36|
                          DCD      ||.conststring||
                  |L2.40|
                          DCD      0x40003000

                          AREA ||i.IWDG_ReloadCounter||, CODE, READONLY, ALIGN=2

                  IWDG_ReloadCounter PROC
;;;174      */
;;;175    void IWDG_ReloadCounter(void)
000000  4902              LDR      r1,|L3.12|
;;;176    {
;;;177      IWDG->KR = KR_KEY_RELOAD;
000002  f64a20aa          MOV      r0,#0xaaaa
000006  6008              STR      r0,[r1,#0]
;;;178    }
000008  4770              BX       lr
;;;179    
                          ENDP

00000a  0000              DCW      0x0000
                  |L3.12|
                          DCD      0x40003000

                          AREA ||i.IWDG_SetPrescaler||, CODE, READONLY, ALIGN=2

                  IWDG_SetPrescaler PROC
;;;148      */
;;;149    void IWDG_SetPrescaler(uint8_t IWDG_Prescaler)
000000  b510              PUSH     {r4,lr}
;;;150    {
000002  0004              MOVS     r4,r0
000004  d00f              BEQ      |L4.38|
;;;151      /* Check the parameters */
;;;152      assert_param(IS_IWDG_PRESCALER(IWDG_Prescaler));
000006  2c01              CMP      r4,#1
000008  d00d              BEQ      |L4.38|
00000a  2c02              CMP      r4,#2
00000c  d00b              BEQ      |L4.38|
00000e  2c03              CMP      r4,#3
000010  d009              BEQ      |L4.38|
000012  2c04              CMP      r4,#4
000014  d007              BEQ      |L4.38|
000016  2c05              CMP      r4,#5
000018  d005              BEQ      |L4.38|
00001a  2c06              CMP      r4,#6
00001c  d003              BEQ      |L4.38|
00001e  2198              MOVS     r1,#0x98
000020  4802              LDR      r0,|L4.44|
000022  f7fffffe          BL       assert_failed
                  |L4.38|
;;;153      IWDG->PR = IWDG_Prescaler;
000026  4802              LDR      r0,|L4.48|
000028  6044              STR      r4,[r0,#4]
;;;154    }
00002a  bd10              POP      {r4,pc}
;;;155    
                          ENDP

                  |L4.44|
                          DCD      ||.conststring||
                  |L4.48|
                          DCD      0x40003000

                          AREA ||i.IWDG_SetReload||, CODE, READONLY, ALIGN=2

                  IWDG_SetReload PROC
;;;161      */
;;;162    void IWDG_SetReload(uint16_t Reload)
000000  b510              PUSH     {r4,lr}
;;;163    {
000002  4604              MOV      r4,r0
;;;164      /* Check the parameters */
;;;165      assert_param(IS_IWDG_RELOAD(Reload));
000004  f5b05f80          CMP      r0,#0x1000
000008  d303              BCC      |L5.18|
00000a  21a5              MOVS     r1,#0xa5
00000c  4802              LDR      r0,|L5.24|
00000e  f7fffffe          BL       assert_failed
                  |L5.18|
;;;166      IWDG->RLR = Reload;
000012  4802              LDR      r0,|L5.28|
000014  6084              STR      r4,[r0,#8]
;;;167    }
000016  bd10              POP      {r4,pc}
;;;168    
                          ENDP

                  |L5.24|
                          DCD      ||.conststring||
                  |L5.28|
                          DCD      0x40003000

                          AREA ||i.IWDG_WriteAccessCmd||, CODE, READONLY, ALIGN=2

                  IWDG_WriteAccessCmd PROC
;;;128      */
;;;129    void IWDG_WriteAccessCmd(uint16_t IWDG_WriteAccess)
000000  b510              PUSH     {r4,lr}
;;;130    {
000002  4604              MOV      r4,r0
;;;131      /* Check the parameters */
;;;132      assert_param(IS_IWDG_WRITE_ACCESS(IWDG_WriteAccess));
000004  f5a040aa          SUB      r0,r0,#0x5500
000008  3855              SUBS     r0,r0,#0x55
00000a  d004              BEQ      |L6.22|
00000c  b11c              CBZ      r4,|L6.22|
00000e  2184              MOVS     r1,#0x84
000010  4802              LDR      r0,|L6.28|
000012  f7fffffe          BL       assert_failed
                  |L6.22|
;;;133      IWDG->KR = IWDG_WriteAccess;
000016  4802              LDR      r0,|L6.32|
000018  6004              STR      r4,[r0,#0]
;;;134    }
00001a  bd10              POP      {r4,pc}
;;;135    
                          ENDP

                  |L6.28|
                          DCD      ||.conststring||
                  |L6.32|
                          DCD      0x40003000

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  2e2e5c4f          DCB      "..\\OS\\bsp\\stm32f40x\\Libraries\\STM32F4xx_StdPeriph_"
000004  535c6273
000008  705c7374
00000c  6d333266
000010  3430785c
000014  4c696272
000018  61726965
00001c  735c5354
000020  4d333246
000024  3478785f
000028  53746450
00002c  65726970
000030  685f    
000032  44726976          DCB      "Driver\\src\\stm32f4xx_iwdg.c",0
000036  65725c73
00003a  72635c73
00003e  746d3332
000042  66347878
000046  5f697764
00004a  672e6300

;*** Start embedded assembler ***

#line 1 "..\\OS\\bsp\\stm32f40x\\Libraries\\STM32F4xx_StdPeriph_Driver\\src\\stm32f4xx_iwdg.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_iwdg_c_15798b01____REV16|
#line 114 "..\\OS\\bsp\\stm32f40x\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___16_stm32f4xx_iwdg_c_15798b01____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_iwdg_c_15798b01____REVSH|
#line 128
|__asm___16_stm32f4xx_iwdg_c_15798b01____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
