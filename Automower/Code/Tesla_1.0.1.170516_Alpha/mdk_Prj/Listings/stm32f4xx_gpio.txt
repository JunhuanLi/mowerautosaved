; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\stm32f4xx_gpio.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\stm32f4xx_gpio.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\OS -I..\OS\components\finsh -I..\OS\include -I..\OS\libcpu\arm\common -I..\OS\libcpu\arm\cortex-m4 -I..\OS\bsp\stm32f40x\Libraries\CMSIS\Include -I..\OS\bsp\stm32f40x\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\OS\bsp\stm32f40x\Libraries\CMSIS\ST\STM32F4xx\Include -I..\OS\bsp\stm32f40x\applications -I..\OS\bsp\stm32f40x\drivers -I..\OS\bsp\stm32f40x -I..\ext\inc -I..\tb_Application -I..\tb_Algorithm -I..\tb_Driver -IE:\Robotic_Platform\mdk_Prj\RTE -Id:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.8.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=520 -DSTM32F429xx -DUSE_STDPERIPH_DRIVER -DSTM32F429xx --omf_browse=.\objects\stm32f4xx_gpio.crf ..\OS\bsp\stm32f40x\Libraries\STM32F4xx_StdPeriph_Driver\src\stm32f4xx_gpio.c]
                          THUMB

                          AREA ||i.GPIO_DeInit||, CODE, READONLY, ALIGN=2

                  GPIO_DeInit PROC
;;;119      */
;;;120    void GPIO_DeInit(GPIO_TypeDef* GPIOx)
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;121    {
;;;122      /* Check the parameters */
;;;123      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
000004  4d3e              LDR      r5,|L1.256|
000006  4e3f              LDR      r6,|L1.260|
000008  4f3f              LDR      r7,|L1.264|
00000a  f8df8100          LDR      r8,|L1.268|
00000e  f8df9100          LDR      r9,|L1.272|
000012  f8dfa100          LDR      r10,|L1.276|
000016  f8dfb100          LDR      r11,|L1.280|
00001a  4604              MOV      r4,r0                 ;121
00001c  42a8              CMP      r0,r5
00001e  d015              BEQ      |L1.76|
000020  42b4              CMP      r4,r6
000022  d013              BEQ      |L1.76|
000024  42bc              CMP      r4,r7
000026  d011              BEQ      |L1.76|
000028  4544              CMP      r4,r8
00002a  d00f              BEQ      |L1.76|
00002c  454c              CMP      r4,r9
00002e  d00d              BEQ      |L1.76|
000030  4554              CMP      r4,r10
000032  d00b              BEQ      |L1.76|
000034  455c              CMP      r4,r11
000036  d009              BEQ      |L1.76|
000038  4838              LDR      r0,|L1.284|
00003a  4284              CMP      r4,r0
00003c  d006              BEQ      |L1.76|
00003e  4838              LDR      r0,|L1.288|
000040  4284              CMP      r4,r0
000042  d003              BEQ      |L1.76|
000044  217b              MOVS     r1,#0x7b
000046  4837              LDR      r0,|L1.292|
000048  f7fffffe          BL       assert_failed
                  |L1.76|
;;;124    
;;;125      if (GPIOx == GPIOA)
00004c  42ac              CMP      r4,r5
00004e  d106              BNE      |L1.94|
;;;126      {
;;;127        RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, ENABLE);
000050  2101              MOVS     r1,#1
000052  4608              MOV      r0,r1
000054  f7fffffe          BL       RCC_AHB1PeriphResetCmd
;;;128        RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOA, DISABLE);
000058  2100              MOVS     r1,#0
00005a  2001              MOVS     r0,#1
00005c  e049              B        |L1.242|
                  |L1.94|
;;;129      }
;;;130      else if (GPIOx == GPIOB)
00005e  42b4              CMP      r4,r6
000060  d106              BNE      |L1.112|
;;;131      {
;;;132        RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, ENABLE);
000062  2101              MOVS     r1,#1
000064  2002              MOVS     r0,#2
000066  f7fffffe          BL       RCC_AHB1PeriphResetCmd
;;;133        RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOB, DISABLE);
00006a  2100              MOVS     r1,#0
00006c  2002              MOVS     r0,#2
00006e  e040              B        |L1.242|
                  |L1.112|
;;;134      }
;;;135      else if (GPIOx == GPIOC)
000070  42bc              CMP      r4,r7
000072  d106              BNE      |L1.130|
;;;136      {
;;;137        RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, ENABLE);
000074  2101              MOVS     r1,#1
000076  2004              MOVS     r0,#4
000078  f7fffffe          BL       RCC_AHB1PeriphResetCmd
;;;138        RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOC, DISABLE);
00007c  2100              MOVS     r1,#0
00007e  2004              MOVS     r0,#4
000080  e037              B        |L1.242|
                  |L1.130|
;;;139      }
;;;140      else if (GPIOx == GPIOD)
000082  4544              CMP      r4,r8
000084  d106              BNE      |L1.148|
;;;141      {
;;;142        RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, ENABLE);
000086  2101              MOVS     r1,#1
000088  2008              MOVS     r0,#8
00008a  f7fffffe          BL       RCC_AHB1PeriphResetCmd
;;;143        RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOD, DISABLE);
00008e  2100              MOVS     r1,#0
000090  2008              MOVS     r0,#8
000092  e02e              B        |L1.242|
                  |L1.148|
;;;144      }
;;;145      else if (GPIOx == GPIOE)
000094  454c              CMP      r4,r9
000096  d106              BNE      |L1.166|
;;;146      {
;;;147        RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, ENABLE);
000098  2101              MOVS     r1,#1
00009a  2010              MOVS     r0,#0x10
00009c  f7fffffe          BL       RCC_AHB1PeriphResetCmd
;;;148        RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOE, DISABLE);
0000a0  2100              MOVS     r1,#0
0000a2  2010              MOVS     r0,#0x10
0000a4  e025              B        |L1.242|
                  |L1.166|
;;;149      }
;;;150      else if (GPIOx == GPIOF)
0000a6  4554              CMP      r4,r10
0000a8  d106              BNE      |L1.184|
;;;151      {
;;;152        RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, ENABLE);
0000aa  2101              MOVS     r1,#1
0000ac  2020              MOVS     r0,#0x20
0000ae  f7fffffe          BL       RCC_AHB1PeriphResetCmd
;;;153        RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOF, DISABLE);
0000b2  2100              MOVS     r1,#0
0000b4  2020              MOVS     r0,#0x20
0000b6  e01c              B        |L1.242|
                  |L1.184|
;;;154      }
;;;155      else if (GPIOx == GPIOG)
0000b8  455c              CMP      r4,r11
0000ba  d106              BNE      |L1.202|
;;;156      {
;;;157        RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, ENABLE);
0000bc  2101              MOVS     r1,#1
0000be  2040              MOVS     r0,#0x40
0000c0  f7fffffe          BL       RCC_AHB1PeriphResetCmd
;;;158        RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOG, DISABLE);
0000c4  2100              MOVS     r1,#0
0000c6  2040              MOVS     r0,#0x40
0000c8  e013              B        |L1.242|
                  |L1.202|
;;;159      }
;;;160      else if (GPIOx == GPIOH)
0000ca  4814              LDR      r0,|L1.284|
0000cc  4284              CMP      r4,r0
0000ce  d106              BNE      |L1.222|
;;;161      {
;;;162        RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, ENABLE);
0000d0  2101              MOVS     r1,#1
0000d2  2080              MOVS     r0,#0x80
0000d4  f7fffffe          BL       RCC_AHB1PeriphResetCmd
;;;163        RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOH, DISABLE);
0000d8  2100              MOVS     r1,#0
0000da  2080              MOVS     r0,#0x80
0000dc  e009              B        |L1.242|
                  |L1.222|
;;;164      }
;;;165      else
;;;166      {
;;;167        if (GPIOx == GPIOI)
0000de  4810              LDR      r0,|L1.288|
0000e0  4284              CMP      r4,r0
0000e2  d10a              BNE      |L1.250|
;;;168        {
;;;169          RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, ENABLE);
0000e4  1584              ASRS     r4,r0,#22
0000e6  2101              MOVS     r1,#1
0000e8  4620              MOV      r0,r4
0000ea  f7fffffe          BL       RCC_AHB1PeriphResetCmd
;;;170          RCC_AHB1PeriphResetCmd(RCC_AHB1Periph_GPIOI, DISABLE);
0000ee  2100              MOVS     r1,#0
0000f0  4620              MOV      r0,r4
                  |L1.242|
0000f2  e8bd5ff0          POP      {r4-r12,lr}
0000f6  f7ffbffe          B.W      RCC_AHB1PeriphResetCmd
                  |L1.250|
;;;171        }
;;;172      }
;;;173    }
0000fa  e8bd9ff0          POP      {r4-r12,pc}
;;;174    
                          ENDP

0000fe  0000              DCW      0x0000
                  |L1.256|
                          DCD      0x40020000
                  |L1.260|
                          DCD      0x40020400
                  |L1.264|
                          DCD      0x40020800
                  |L1.268|
                          DCD      0x40020c00
                  |L1.272|
                          DCD      0x40021000
                  |L1.276|
                          DCD      0x40021400
                  |L1.280|
                          DCD      0x40021800
                  |L1.284|
                          DCD      0x40021c00
                  |L1.288|
                          DCD      0x40022000
                  |L1.292|
                          DCD      ||.conststring||

                          AREA ||i.GPIO_Init||, CODE, READONLY, ALIGN=2

                  GPIO_Init PROC
;;;181      */
;;;182    void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
000000  e92d5ff0          PUSH     {r4-r12,lr}
;;;183    {
000004  4604              MOV      r4,r0
;;;184      uint32_t pinpos = 0x00, pos = 0x00 , currentpin = 0x00;
;;;185    
;;;186      /* Check the parameters */
;;;187      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
000006  4847              LDR      r0,|L2.292|
000008  2600              MOVS     r6,#0                 ;184
00000a  460d              MOV      r5,r1                 ;183
00000c  4284              CMP      r4,r0
00000e  d01b              BEQ      |L2.72|
000010  4845              LDR      r0,|L2.296|
000012  4284              CMP      r4,r0
000014  d018              BEQ      |L2.72|
000016  4845              LDR      r0,|L2.300|
000018  4284              CMP      r4,r0
00001a  d015              BEQ      |L2.72|
00001c  4844              LDR      r0,|L2.304|
00001e  4284              CMP      r4,r0
000020  d012              BEQ      |L2.72|
000022  4844              LDR      r0,|L2.308|
000024  4284              CMP      r4,r0
000026  d00f              BEQ      |L2.72|
000028  4843              LDR      r0,|L2.312|
00002a  4284              CMP      r4,r0
00002c  d00c              BEQ      |L2.72|
00002e  4843              LDR      r0,|L2.316|
000030  4284              CMP      r4,r0
000032  d009              BEQ      |L2.72|
000034  4842              LDR      r0,|L2.320|
000036  4284              CMP      r4,r0
000038  d006              BEQ      |L2.72|
00003a  4842              LDR      r0,|L2.324|
00003c  4284              CMP      r4,r0
00003e  d003              BEQ      |L2.72|
000040  21bb              MOVS     r1,#0xbb
000042  4841              LDR      r0,|L2.328|
000044  f7fffffe          BL       assert_failed
                  |L2.72|
;;;188      assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));
000048  6828              LDR      r0,[r5,#0]
00004a  b918              CBNZ     r0,|L2.84|
00004c  21bc              MOVS     r1,#0xbc
00004e  483e              LDR      r0,|L2.328|
000050  f7fffffe          BL       assert_failed
                  |L2.84|
;;;189      assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
000054  7928              LDRB     r0,[r5,#4]
000056  b148              CBZ      r0,|L2.108|
000058  2801              CMP      r0,#1
00005a  d007              BEQ      |L2.108|
00005c  2802              CMP      r0,#2
00005e  d005              BEQ      |L2.108|
000060  2803              CMP      r0,#3
000062  d003              BEQ      |L2.108|
000064  21bd              MOVS     r1,#0xbd
000066  4838              LDR      r0,|L2.328|
000068  f7fffffe          BL       assert_failed
                  |L2.108|
;;;190      assert_param(IS_GPIO_PUPD(GPIO_InitStruct->GPIO_PuPd));
00006c  79e8              LDRB     r0,[r5,#7]
00006e  b138              CBZ      r0,|L2.128|
000070  2801              CMP      r0,#1
000072  d005              BEQ      |L2.128|
000074  2802              CMP      r0,#2
000076  d003              BEQ      |L2.128|
000078  21be              MOVS     r1,#0xbe
00007a  4833              LDR      r0,|L2.328|
00007c  f7fffffe          BL       assert_failed
                  |L2.128|
000080  f04f0a01          MOV      r10,#1                ;189
000084  f04f0b03          MOV      r11,#3                ;189
                  |L2.136|
;;;191    
;;;192      /* -------------------------Configure the port pins---------------- */
;;;193      /*-- GPIO Mode Configuration --*/
;;;194      for (pinpos = 0x00; pinpos < 0x10; pinpos++)
;;;195      {
;;;196        pos = ((uint32_t)0x01) << pinpos;
000088  fa0af006          LSL      r0,r10,r6
;;;197        /* Get the port pins position */
;;;198        currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
00008c  6829              LDR      r1,[r5,#0]
00008e  4681              MOV      r9,r0                 ;196
000090  4001              ANDS     r1,r1,r0
;;;199    
;;;200        if (currentpin == pos)
000092  4549              CMP      r1,r9
000094  d141              BNE      |L2.282|
;;;201        {
;;;202          GPIOx->MODER  &= ~(GPIO_MODER_MODER0 << (pinpos * 2));
000096  6821              LDR      r1,[r4,#0]
000098  0070              LSLS     r0,r6,#1
00009a  fa0bf700          LSL      r7,r11,r0
00009e  43b9              BICS     r1,r1,r7
0000a0  4680              MOV      r8,r0
0000a2  6021              STR      r1,[r4,#0]
;;;203          GPIOx->MODER |= (((uint32_t)GPIO_InitStruct->GPIO_Mode) << (pinpos * 2));
0000a4  7929              LDRB     r1,[r5,#4]
0000a6  6820              LDR      r0,[r4,#0]
0000a8  fa01f108          LSL      r1,r1,r8
0000ac  4301              ORRS     r1,r1,r0
0000ae  6021              STR      r1,[r4,#0]
;;;204    
;;;205          if ((GPIO_InitStruct->GPIO_Mode == GPIO_Mode_OUT) || (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_AF))
0000b0  7928              LDRB     r0,[r5,#4]
0000b2  2801              CMP      r0,#1
0000b4  d001              BEQ      |L2.186|
0000b6  2802              CMP      r0,#2
0000b8  d126              BNE      |L2.264|
                  |L2.186|
;;;206          {
;;;207            /* Check Speed mode parameters */
;;;208            assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
0000ba  7968              LDRB     r0,[r5,#5]
0000bc  b148              CBZ      r0,|L2.210|
0000be  2801              CMP      r0,#1
0000c0  d007              BEQ      |L2.210|
0000c2  2802              CMP      r0,#2
0000c4  d005              BEQ      |L2.210|
0000c6  2803              CMP      r0,#3
0000c8  d003              BEQ      |L2.210|
0000ca  21d0              MOVS     r1,#0xd0
0000cc  481e              LDR      r0,|L2.328|
0000ce  f7fffffe          BL       assert_failed
                  |L2.210|
;;;209    
;;;210            /* Speed mode configuration */
;;;211            GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (pinpos * 2));
0000d2  68a0              LDR      r0,[r4,#8]
0000d4  43b8              BICS     r0,r0,r7
0000d6  60a0              STR      r0,[r4,#8]
;;;212            GPIOx->OSPEEDR |= ((uint32_t)(GPIO_InitStruct->GPIO_Speed) << (pinpos * 2));
0000d8  7968              LDRB     r0,[r5,#5]
0000da  68a1              LDR      r1,[r4,#8]
0000dc  fa00f008          LSL      r0,r0,r8
0000e0  4308              ORRS     r0,r0,r1
0000e2  60a0              STR      r0,[r4,#8]
;;;213    
;;;214            /* Check Output mode parameters */
;;;215            assert_param(IS_GPIO_OTYPE(GPIO_InitStruct->GPIO_OType));
0000e4  79a8              LDRB     r0,[r5,#6]
0000e6  b128              CBZ      r0,|L2.244|
0000e8  2801              CMP      r0,#1
0000ea  d003              BEQ      |L2.244|
0000ec  21d7              MOVS     r1,#0xd7
0000ee  4816              LDR      r0,|L2.328|
0000f0  f7fffffe          BL       assert_failed
                  |L2.244|
;;;216    
;;;217            /* Output mode configuration*/
;;;218            GPIOx->OTYPER  &= ~((GPIO_OTYPER_OT_0) << ((uint16_t)pinpos)) ;
0000f4  6860              LDR      r0,[r4,#4]
0000f6  ea200009          BIC      r0,r0,r9
0000fa  6060              STR      r0,[r4,#4]
;;;219            GPIOx->OTYPER |= (uint16_t)(((uint16_t)GPIO_InitStruct->GPIO_OType) << ((uint16_t)pinpos));
0000fc  6861              LDR      r1,[r4,#4]
0000fe  79a8              LDRB     r0,[r5,#6]
000100  40b0              LSLS     r0,r0,r6
000102  b280              UXTH     r0,r0
000104  4301              ORRS     r1,r1,r0
000106  6061              STR      r1,[r4,#4]
                  |L2.264|
;;;220          }
;;;221    
;;;222          /* Pull-up Pull down resistor configuration*/
;;;223          GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << ((uint16_t)pinpos * 2));
000108  68e0              LDR      r0,[r4,#0xc]
00010a  43b8              BICS     r0,r0,r7
00010c  60e0              STR      r0,[r4,#0xc]
;;;224          GPIOx->PUPDR |= (((uint32_t)GPIO_InitStruct->GPIO_PuPd) << (pinpos * 2));
00010e  79e8              LDRB     r0,[r5,#7]
000110  68e1              LDR      r1,[r4,#0xc]
000112  fa00f008          LSL      r0,r0,r8
000116  4308              ORRS     r0,r0,r1
000118  60e0              STR      r0,[r4,#0xc]
                  |L2.282|
00011a  1c76              ADDS     r6,r6,#1
00011c  2e10              CMP      r6,#0x10              ;194
00011e  d3b3              BCC      |L2.136|
;;;225        }
;;;226      }
;;;227    }
000120  e8bd9ff0          POP      {r4-r12,pc}
;;;228    
                          ENDP

                  |L2.292|
                          DCD      0x40020000
                  |L2.296|
                          DCD      0x40020400
                  |L2.300|
                          DCD      0x40020800
                  |L2.304|
                          DCD      0x40020c00
                  |L2.308|
                          DCD      0x40021000
                  |L2.312|
                          DCD      0x40021400
                  |L2.316|
                          DCD      0x40021800
                  |L2.320|
                          DCD      0x40021c00
                  |L2.324|
                          DCD      0x40022000
                  |L2.328|
                          DCD      ||.conststring||

                          AREA ||i.GPIO_PinAFConfig||, CODE, READONLY, ALIGN=2

                  GPIO_PinAFConfig PROC
;;;528      */
;;;529    void GPIO_PinAFConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_PinSource, uint8_t GPIO_AF)
000000  b570              PUSH     {r4-r6,lr}
;;;530    {
000002  4606              MOV      r6,r0
;;;531      uint32_t temp = 0x00;
;;;532      uint32_t temp_2 = 0x00;
;;;533      
;;;534      /* Check the parameters */
;;;535      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
000004  483b              LDR      r0,|L3.244|
000006  4615              MOV      r5,r2                 ;530
000008  460c              MOV      r4,r1                 ;530
00000a  4286              CMP      r6,r0
00000c  d01c              BEQ      |L3.72|
00000e  483a              LDR      r0,|L3.248|
000010  4286              CMP      r6,r0
000012  d019              BEQ      |L3.72|
000014  4839              LDR      r0,|L3.252|
000016  4286              CMP      r6,r0
000018  d016              BEQ      |L3.72|
00001a  4839              LDR      r0,|L3.256|
00001c  4286              CMP      r6,r0
00001e  d013              BEQ      |L3.72|
000020  4838              LDR      r0,|L3.260|
000022  4286              CMP      r6,r0
000024  d010              BEQ      |L3.72|
000026  4838              LDR      r0,|L3.264|
000028  4286              CMP      r6,r0
00002a  d00d              BEQ      |L3.72|
00002c  4837              LDR      r0,|L3.268|
00002e  4286              CMP      r6,r0
000030  d00a              BEQ      |L3.72|
000032  4837              LDR      r0,|L3.272|
000034  4286              CMP      r6,r0
000036  d007              BEQ      |L3.72|
000038  4836              LDR      r0,|L3.276|
00003a  4286              CMP      r6,r0
00003c  d004              BEQ      |L3.72|
00003e  f2402117          MOV      r1,#0x217
000042  4835              LDR      r0,|L3.280|
000044  f7fffffe          BL       assert_failed
                  |L3.72|
;;;536      assert_param(IS_GPIO_PIN_SOURCE(GPIO_PinSource));
000048  b314              CBZ      r4,|L3.144|
00004a  2c01              CMP      r4,#1
00004c  d020              BEQ      |L3.144|
00004e  2c02              CMP      r4,#2
000050  d01e              BEQ      |L3.144|
000052  2c03              CMP      r4,#3
000054  d01c              BEQ      |L3.144|
000056  2c04              CMP      r4,#4
000058  d01a              BEQ      |L3.144|
00005a  2c05              CMP      r4,#5
00005c  d018              BEQ      |L3.144|
00005e  2c06              CMP      r4,#6
000060  d016              BEQ      |L3.144|
000062  2c07              CMP      r4,#7
000064  d014              BEQ      |L3.144|
000066  2c08              CMP      r4,#8
000068  d012              BEQ      |L3.144|
00006a  2c09              CMP      r4,#9
00006c  d010              BEQ      |L3.144|
00006e  2c0a              CMP      r4,#0xa
000070  d00e              BEQ      |L3.144|
000072  2c0b              CMP      r4,#0xb
000074  d00c              BEQ      |L3.144|
000076  2c0c              CMP      r4,#0xc
000078  d00a              BEQ      |L3.144|
00007a  2c0d              CMP      r4,#0xd
00007c  d008              BEQ      |L3.144|
00007e  2c0e              CMP      r4,#0xe
000080  d006              BEQ      |L3.144|
000082  2c0f              CMP      r4,#0xf
000084  d004              BEQ      |L3.144|
000086  f44f7106          MOV      r1,#0x218
00008a  4823              LDR      r0,|L3.280|
00008c  f7fffffe          BL       assert_failed
                  |L3.144|
;;;537      assert_param(IS_GPIO_AF(GPIO_AF));
000090  b305              CBZ      r5,|L3.212|
000092  2d09              CMP      r5,#9
000094  d01e              BEQ      |L3.212|
000096  2d01              CMP      r5,#1
000098  d01c              BEQ      |L3.212|
00009a  2d02              CMP      r5,#2
00009c  d01a              BEQ      |L3.212|
00009e  2d03              CMP      r5,#3
0000a0  d018              BEQ      |L3.212|
0000a2  2d04              CMP      r5,#4
0000a4  d016              BEQ      |L3.212|
0000a6  2d05              CMP      r5,#5
0000a8  d014              BEQ      |L3.212|
0000aa  2d06              CMP      r5,#6
0000ac  d012              BEQ      |L3.212|
0000ae  2d07              CMP      r5,#7
0000b0  d010              BEQ      |L3.212|
0000b2  2d08              CMP      r5,#8
0000b4  d00e              BEQ      |L3.212|
0000b6  2d0a              CMP      r5,#0xa
0000b8  d00c              BEQ      |L3.212|
0000ba  2d0b              CMP      r5,#0xb
0000bc  d00a              BEQ      |L3.212|
0000be  2d0c              CMP      r5,#0xc
0000c0  d008              BEQ      |L3.212|
0000c2  2d0d              CMP      r5,#0xd
0000c4  d006              BEQ      |L3.212|
0000c6  2d0f              CMP      r5,#0xf
0000c8  d004              BEQ      |L3.212|
0000ca  f2402119          MOV      r1,#0x219
0000ce  4812              LDR      r0,|L3.280|
0000d0  f7fffffe          BL       assert_failed
                  |L3.212|
;;;538      
;;;539      temp = ((uint32_t)(GPIO_AF) << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4)) ;
0000d4  0760              LSLS     r0,r4,#29
0000d6  0ec1              LSRS     r1,r0,#27
0000d8  408d              LSLS     r5,r5,r1
;;;540      GPIOx->AFR[GPIO_PinSource >> 0x03] &= ~((uint32_t)0xF << ((uint32_t)((uint32_t)GPIO_PinSource & (uint32_t)0x07) * 4)) ;
0000da  08e0              LSRS     r0,r4,#3
0000dc  eb060080          ADD      r0,r6,r0,LSL #2
0000e0  6a02              LDR      r2,[r0,#0x20]
0000e2  230f              MOVS     r3,#0xf
0000e4  408b              LSLS     r3,r3,r1
0000e6  439a              BICS     r2,r2,r3
0000e8  6202              STR      r2,[r0,#0x20]
;;;541      temp_2 = GPIOx->AFR[GPIO_PinSource >> 0x03] | temp;
0000ea  6a01              LDR      r1,[r0,#0x20]
0000ec  4329              ORRS     r1,r1,r5
;;;542      GPIOx->AFR[GPIO_PinSource >> 0x03] = temp_2;
0000ee  6201              STR      r1,[r0,#0x20]
;;;543    }
0000f0  bd70              POP      {r4-r6,pc}
;;;544    
                          ENDP

0000f2  0000              DCW      0x0000
                  |L3.244|
                          DCD      0x40020000
                  |L3.248|
                          DCD      0x40020400
                  |L3.252|
                          DCD      0x40020800
                  |L3.256|
                          DCD      0x40020c00
                  |L3.260|
                          DCD      0x40021000
                  |L3.264|
                          DCD      0x40021400
                  |L3.268|
                          DCD      0x40021800
                  |L3.272|
                          DCD      0x40021c00
                  |L3.276|
                          DCD      0x40022000
                  |L3.280|
                          DCD      ||.conststring||

                          AREA ||i.GPIO_PinLockConfig||, CODE, READONLY, ALIGN=2

                  GPIO_PinLockConfig PROC
;;;254      */
;;;255    void GPIO_PinLockConfig(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
000000  b538              PUSH     {r3-r5,lr}
;;;256    {
000002  4604              MOV      r4,r0
;;;257      __IO uint32_t tmp = 0x00010000;
000004  f44f3080          MOV      r0,#0x10000
;;;258    
;;;259      /* Check the parameters */
;;;260      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
000008  9000              STR      r0,[sp,#0]
00000a  4819              LDR      r0,|L4.112|
00000c  460d              MOV      r5,r1                 ;256
00000e  4284              CMP      r4,r0
000010  d01c              BEQ      |L4.76|
000012  4818              LDR      r0,|L4.116|
000014  4284              CMP      r4,r0
000016  d019              BEQ      |L4.76|
000018  4817              LDR      r0,|L4.120|
00001a  4284              CMP      r4,r0
00001c  d016              BEQ      |L4.76|
00001e  4817              LDR      r0,|L4.124|
000020  4284              CMP      r4,r0
000022  d013              BEQ      |L4.76|
000024  4816              LDR      r0,|L4.128|
000026  4284              CMP      r4,r0
000028  d010              BEQ      |L4.76|
00002a  4816              LDR      r0,|L4.132|
00002c  4284              CMP      r4,r0
00002e  d00d              BEQ      |L4.76|
000030  4815              LDR      r0,|L4.136|
000032  4284              CMP      r4,r0
000034  d00a              BEQ      |L4.76|
000036  4815              LDR      r0,|L4.140|
000038  4284              CMP      r4,r0
00003a  d007              BEQ      |L4.76|
00003c  4814              LDR      r0,|L4.144|
00003e  4284              CMP      r4,r0
000040  d004              BEQ      |L4.76|
000042  f44f7182          MOV      r1,#0x104
000046  4813              LDR      r0,|L4.148|
000048  f7fffffe          BL       assert_failed
                  |L4.76|
;;;261      assert_param(IS_GPIO_PIN(GPIO_Pin));
00004c  b925              CBNZ     r5,|L4.88|
00004e  f2401105          MOV      r1,#0x105
000052  4810              LDR      r0,|L4.148|
000054  f7fffffe          BL       assert_failed
                  |L4.88|
;;;262    
;;;263      tmp |= GPIO_Pin;
000058  9800              LDR      r0,[sp,#0]
00005a  4328              ORRS     r0,r0,r5
;;;264      /* Set LCKK bit */
;;;265      GPIOx->LCKR = tmp;
00005c  9000              STR      r0,[sp,#0]
00005e  61e0              STR      r0,[r4,#0x1c]
;;;266      /* Reset LCKK bit */
;;;267      GPIOx->LCKR =  GPIO_Pin;
000060  61e5              STR      r5,[r4,#0x1c]
;;;268      /* Set LCKK bit */
;;;269      GPIOx->LCKR = tmp;
000062  9800              LDR      r0,[sp,#0]
000064  61e0              STR      r0,[r4,#0x1c]
;;;270      /* Read LCKK bit*/
;;;271      tmp = GPIOx->LCKR;
000066  69e0              LDR      r0,[r4,#0x1c]
;;;272      /* Read LCKK bit*/
;;;273      tmp = GPIOx->LCKR;
000068  69e0              LDR      r0,[r4,#0x1c]
00006a  9000              STR      r0,[sp,#0]
;;;274    }
00006c  bd38              POP      {r3-r5,pc}
;;;275    
                          ENDP

00006e  0000              DCW      0x0000
                  |L4.112|
                          DCD      0x40020000
                  |L4.116|
                          DCD      0x40020400
                  |L4.120|
                          DCD      0x40020800
                  |L4.124|
                          DCD      0x40020c00
                  |L4.128|
                          DCD      0x40021000
                  |L4.132|
                          DCD      0x40021400
                  |L4.136|
                          DCD      0x40021800
                  |L4.140|
                          DCD      0x40021c00
                  |L4.144|
                          DCD      0x40022000
                  |L4.148|
                          DCD      ||.conststring||

                          AREA ||i.GPIO_ReadInputData||, CODE, READONLY, ALIGN=2

                  GPIO_ReadInputData PROC
;;;322      */
;;;323    uint16_t GPIO_ReadInputData(GPIO_TypeDef* GPIOx)
000000  b510              PUSH     {r4,lr}
;;;324    {
000002  4604              MOV      r4,r0
;;;325      /* Check the parameters */
;;;326      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
000004  4811              LDR      r0,|L5.76|
000006  4284              CMP      r4,r0
000008  d01c              BEQ      |L5.68|
00000a  4811              LDR      r0,|L5.80|
00000c  4284              CMP      r4,r0
00000e  d019              BEQ      |L5.68|
000010  4810              LDR      r0,|L5.84|
000012  4284              CMP      r4,r0
000014  d016              BEQ      |L5.68|
000016  4810              LDR      r0,|L5.88|
000018  4284              CMP      r4,r0
00001a  d013              BEQ      |L5.68|
00001c  480f              LDR      r0,|L5.92|
00001e  4284              CMP      r4,r0
000020  d010              BEQ      |L5.68|
000022  480f              LDR      r0,|L5.96|
000024  4284              CMP      r4,r0
000026  d00d              BEQ      |L5.68|
000028  480e              LDR      r0,|L5.100|
00002a  4284              CMP      r4,r0
00002c  d00a              BEQ      |L5.68|
00002e  480e              LDR      r0,|L5.104|
000030  4284              CMP      r4,r0
000032  d007              BEQ      |L5.68|
000034  480d              LDR      r0,|L5.108|
000036  4284              CMP      r4,r0
000038  d004              BEQ      |L5.68|
00003a  f44f71a3          MOV      r1,#0x146
00003e  480c              LDR      r0,|L5.112|
000040  f7fffffe          BL       assert_failed
                  |L5.68|
;;;327    
;;;328      return ((uint16_t)GPIOx->IDR);
000044  6920              LDR      r0,[r4,#0x10]
000046  b280              UXTH     r0,r0
;;;329    }
000048  bd10              POP      {r4,pc}
;;;330    
                          ENDP

00004a  0000              DCW      0x0000
                  |L5.76|
                          DCD      0x40020000
                  |L5.80|
                          DCD      0x40020400
                  |L5.84|
                          DCD      0x40020800
                  |L5.88|
                          DCD      0x40020c00
                  |L5.92|
                          DCD      0x40021000
                  |L5.96|
                          DCD      0x40021400
                  |L5.100|
                          DCD      0x40021800
                  |L5.104|
                          DCD      0x40021c00
                  |L5.108|
                          DCD      0x40022000
                  |L5.112|
                          DCD      ||.conststring||

                          AREA ||i.GPIO_ReadInputDataBit||, CODE, READONLY, ALIGN=2

                  GPIO_ReadInputDataBit PROC
;;;298      */
;;;299    uint8_t GPIO_ReadInputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
000000  b570              PUSH     {r4-r6,lr}
;;;300    {
000002  4605              MOV      r5,r0
;;;301      uint8_t bitstatus = 0x00;
;;;302    
;;;303      /* Check the parameters */
;;;304      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
000004  482a              LDR      r0,|L6.176|
000006  2600              MOVS     r6,#0                 ;301
000008  460c              MOV      r4,r1                 ;300
00000a  4285              CMP      r5,r0
00000c  d01c              BEQ      |L6.72|
00000e  4829              LDR      r0,|L6.180|
000010  4285              CMP      r5,r0
000012  d019              BEQ      |L6.72|
000014  4828              LDR      r0,|L6.184|
000016  4285              CMP      r5,r0
000018  d016              BEQ      |L6.72|
00001a  4828              LDR      r0,|L6.188|
00001c  4285              CMP      r5,r0
00001e  d013              BEQ      |L6.72|
000020  4827              LDR      r0,|L6.192|
000022  4285              CMP      r5,r0
000024  d010              BEQ      |L6.72|
000026  4827              LDR      r0,|L6.196|
000028  4285              CMP      r5,r0
00002a  d00d              BEQ      |L6.72|
00002c  4826              LDR      r0,|L6.200|
00002e  4285              CMP      r5,r0
000030  d00a              BEQ      |L6.72|
000032  4826              LDR      r0,|L6.204|
000034  4285              CMP      r5,r0
000036  d007              BEQ      |L6.72|
000038  4825              LDR      r0,|L6.208|
00003a  4285              CMP      r5,r0
00003c  d004              BEQ      |L6.72|
00003e  f44f7198          MOV      r1,#0x130
000042  4824              LDR      r0,|L6.212|
000044  f7fffffe          BL       assert_failed
                  |L6.72|
;;;305      assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
000048  2c01              CMP      r4,#1
00004a  d02a              BEQ      |L6.162|
00004c  2c02              CMP      r4,#2
00004e  d028              BEQ      |L6.162|
000050  2c04              CMP      r4,#4
000052  d026              BEQ      |L6.162|
000054  2c08              CMP      r4,#8
000056  d024              BEQ      |L6.162|
000058  2c10              CMP      r4,#0x10
00005a  d022              BEQ      |L6.162|
00005c  2c20              CMP      r4,#0x20
00005e  d020              BEQ      |L6.162|
000060  2c40              CMP      r4,#0x40
000062  d01e              BEQ      |L6.162|
000064  2c80              CMP      r4,#0x80
000066  d01c              BEQ      |L6.162|
000068  f5b47f80          CMP      r4,#0x100
00006c  d019              BEQ      |L6.162|
00006e  f5b47f00          CMP      r4,#0x200
000072  d016              BEQ      |L6.162|
000074  f5b46f80          CMP      r4,#0x400
000078  d013              BEQ      |L6.162|
00007a  f5b46f00          CMP      r4,#0x800
00007e  d010              BEQ      |L6.162|
000080  f5b45f80          CMP      r4,#0x1000
000084  d00d              BEQ      |L6.162|
000086  f5b45f00          CMP      r4,#0x2000
00008a  d00a              BEQ      |L6.162|
00008c  f5b44f80          CMP      r4,#0x4000
000090  d007              BEQ      |L6.162|
000092  f5b44f00          CMP      r4,#0x8000
000096  d004              BEQ      |L6.162|
000098  f2401131          MOV      r1,#0x131
00009c  480d              LDR      r0,|L6.212|
00009e  f7fffffe          BL       assert_failed
                  |L6.162|
;;;306    
;;;307      if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)Bit_RESET)
0000a2  6928              LDR      r0,[r5,#0x10]
0000a4  4220              TST      r0,r4
0000a6  d000              BEQ      |L6.170|
;;;308      {
;;;309        bitstatus = (uint8_t)Bit_SET;
0000a8  2601              MOVS     r6,#1
                  |L6.170|
;;;310      }
;;;311      else
;;;312      {
;;;313        bitstatus = (uint8_t)Bit_RESET;
;;;314      }
;;;315      return bitstatus;
0000aa  4630              MOV      r0,r6
;;;316    }
0000ac  bd70              POP      {r4-r6,pc}
;;;317    
                          ENDP

0000ae  0000              DCW      0x0000
                  |L6.176|
                          DCD      0x40020000
                  |L6.180|
                          DCD      0x40020400
                  |L6.184|
                          DCD      0x40020800
                  |L6.188|
                          DCD      0x40020c00
                  |L6.192|
                          DCD      0x40021000
                  |L6.196|
                          DCD      0x40021400
                  |L6.200|
                          DCD      0x40021800
                  |L6.204|
                          DCD      0x40021c00
                  |L6.208|
                          DCD      0x40022000
                  |L6.212|
                          DCD      ||.conststring||

                          AREA ||i.GPIO_ReadOutputData||, CODE, READONLY, ALIGN=2

                  GPIO_ReadOutputData PROC
;;;361      */
;;;362    uint16_t GPIO_ReadOutputData(GPIO_TypeDef* GPIOx)
000000  b510              PUSH     {r4,lr}
;;;363    {
000002  4604              MOV      r4,r0
;;;364      /* Check the parameters */
;;;365      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
000004  4811              LDR      r0,|L7.76|
000006  4284              CMP      r4,r0
000008  d01c              BEQ      |L7.68|
00000a  4811              LDR      r0,|L7.80|
00000c  4284              CMP      r4,r0
00000e  d019              BEQ      |L7.68|
000010  4810              LDR      r0,|L7.84|
000012  4284              CMP      r4,r0
000014  d016              BEQ      |L7.68|
000016  4810              LDR      r0,|L7.88|
000018  4284              CMP      r4,r0
00001a  d013              BEQ      |L7.68|
00001c  480f              LDR      r0,|L7.92|
00001e  4284              CMP      r4,r0
000020  d010              BEQ      |L7.68|
000022  480f              LDR      r0,|L7.96|
000024  4284              CMP      r4,r0
000026  d00d              BEQ      |L7.68|
000028  480e              LDR      r0,|L7.100|
00002a  4284              CMP      r4,r0
00002c  d00a              BEQ      |L7.68|
00002e  480e              LDR      r0,|L7.104|
000030  4284              CMP      r4,r0
000032  d007              BEQ      |L7.68|
000034  480d              LDR      r0,|L7.108|
000036  4284              CMP      r4,r0
000038  d004              BEQ      |L7.68|
00003a  f240116d          MOV      r1,#0x16d
00003e  480c              LDR      r0,|L7.112|
000040  f7fffffe          BL       assert_failed
                  |L7.68|
;;;366    
;;;367      return ((uint16_t)GPIOx->ODR);
000044  6960              LDR      r0,[r4,#0x14]
000046  b280              UXTH     r0,r0
;;;368    }
000048  bd10              POP      {r4,pc}
;;;369    
                          ENDP

00004a  0000              DCW      0x0000
                  |L7.76|
                          DCD      0x40020000
                  |L7.80|
                          DCD      0x40020400
                  |L7.84|
                          DCD      0x40020800
                  |L7.88|
                          DCD      0x40020c00
                  |L7.92|
                          DCD      0x40021000
                  |L7.96|
                          DCD      0x40021400
                  |L7.100|
                          DCD      0x40021800
                  |L7.104|
                          DCD      0x40021c00
                  |L7.108|
                          DCD      0x40022000
                  |L7.112|
                          DCD      ||.conststring||

                          AREA ||i.GPIO_ReadOutputDataBit||, CODE, READONLY, ALIGN=2

                  GPIO_ReadOutputDataBit PROC
;;;337      */
;;;338    uint8_t GPIO_ReadOutputDataBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
000000  b570              PUSH     {r4-r6,lr}
;;;339    {
000002  4605              MOV      r5,r0
;;;340      uint8_t bitstatus = 0x00;
;;;341    
;;;342      /* Check the parameters */
;;;343      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
000004  482a              LDR      r0,|L8.176|
000006  2600              MOVS     r6,#0                 ;340
000008  460c              MOV      r4,r1                 ;339
00000a  4285              CMP      r5,r0
00000c  d01c              BEQ      |L8.72|
00000e  4829              LDR      r0,|L8.180|
000010  4285              CMP      r5,r0
000012  d019              BEQ      |L8.72|
000014  4828              LDR      r0,|L8.184|
000016  4285              CMP      r5,r0
000018  d016              BEQ      |L8.72|
00001a  4828              LDR      r0,|L8.188|
00001c  4285              CMP      r5,r0
00001e  d013              BEQ      |L8.72|
000020  4827              LDR      r0,|L8.192|
000022  4285              CMP      r5,r0
000024  d010              BEQ      |L8.72|
000026  4827              LDR      r0,|L8.196|
000028  4285              CMP      r5,r0
00002a  d00d              BEQ      |L8.72|
00002c  4826              LDR      r0,|L8.200|
00002e  4285              CMP      r5,r0
000030  d00a              BEQ      |L8.72|
000032  4826              LDR      r0,|L8.204|
000034  4285              CMP      r5,r0
000036  d007              BEQ      |L8.72|
000038  4825              LDR      r0,|L8.208|
00003a  4285              CMP      r5,r0
00003c  d004              BEQ      |L8.72|
00003e  f2401157          MOV      r1,#0x157
000042  4824              LDR      r0,|L8.212|
000044  f7fffffe          BL       assert_failed
                  |L8.72|
;;;344      assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
000048  2c01              CMP      r4,#1
00004a  d02a              BEQ      |L8.162|
00004c  2c02              CMP      r4,#2
00004e  d028              BEQ      |L8.162|
000050  2c04              CMP      r4,#4
000052  d026              BEQ      |L8.162|
000054  2c08              CMP      r4,#8
000056  d024              BEQ      |L8.162|
000058  2c10              CMP      r4,#0x10
00005a  d022              BEQ      |L8.162|
00005c  2c20              CMP      r4,#0x20
00005e  d020              BEQ      |L8.162|
000060  2c40              CMP      r4,#0x40
000062  d01e              BEQ      |L8.162|
000064  2c80              CMP      r4,#0x80
000066  d01c              BEQ      |L8.162|
000068  f5b47f80          CMP      r4,#0x100
00006c  d019              BEQ      |L8.162|
00006e  f5b47f00          CMP      r4,#0x200
000072  d016              BEQ      |L8.162|
000074  f5b46f80          CMP      r4,#0x400
000078  d013              BEQ      |L8.162|
00007a  f5b46f00          CMP      r4,#0x800
00007e  d010              BEQ      |L8.162|
000080  f5b45f80          CMP      r4,#0x1000
000084  d00d              BEQ      |L8.162|
000086  f5b45f00          CMP      r4,#0x2000
00008a  d00a              BEQ      |L8.162|
00008c  f5b44f80          CMP      r4,#0x4000
000090  d007              BEQ      |L8.162|
000092  f5b44f00          CMP      r4,#0x8000
000096  d004              BEQ      |L8.162|
000098  f44f71ac          MOV      r1,#0x158
00009c  480d              LDR      r0,|L8.212|
00009e  f7fffffe          BL       assert_failed
                  |L8.162|
;;;345    
;;;346      if ((GPIOx->ODR & GPIO_Pin) != (uint32_t)Bit_RESET)
0000a2  6968              LDR      r0,[r5,#0x14]
0000a4  4220              TST      r0,r4
0000a6  d000              BEQ      |L8.170|
;;;347      {
;;;348        bitstatus = (uint8_t)Bit_SET;
0000a8  2601              MOVS     r6,#1
                  |L8.170|
;;;349      }
;;;350      else
;;;351      {
;;;352        bitstatus = (uint8_t)Bit_RESET;
;;;353      }
;;;354      return bitstatus;
0000aa  4630              MOV      r0,r6
;;;355    }
0000ac  bd70              POP      {r4-r6,pc}
;;;356    
                          ENDP

0000ae  0000              DCW      0x0000
                  |L8.176|
                          DCD      0x40020000
                  |L8.180|
                          DCD      0x40020400
                  |L8.184|
                          DCD      0x40020800
                  |L8.188|
                          DCD      0x40020c00
                  |L8.192|
                          DCD      0x40021000
                  |L8.196|
                          DCD      0x40021400
                  |L8.200|
                          DCD      0x40021800
                  |L8.204|
                          DCD      0x40021c00
                  |L8.208|
                          DCD      0x40022000
                  |L8.212|
                          DCD      ||.conststring||

                          AREA ||i.GPIO_ResetBits||, CODE, READONLY, ALIGN=2

                  GPIO_ResetBits PROC
;;;398      */
;;;399    void GPIO_ResetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
000000  b570              PUSH     {r4-r6,lr}
;;;400    {
000002  4604              MOV      r4,r0
;;;401      /* Check the parameters */
;;;402      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
000004  4814              LDR      r0,|L9.88|
000006  460d              MOV      r5,r1                 ;400
000008  4284              CMP      r4,r0
00000a  d01c              BEQ      |L9.70|
00000c  4813              LDR      r0,|L9.92|
00000e  4284              CMP      r4,r0
000010  d019              BEQ      |L9.70|
000012  4813              LDR      r0,|L9.96|
000014  4284              CMP      r4,r0
000016  d016              BEQ      |L9.70|
000018  4812              LDR      r0,|L9.100|
00001a  4284              CMP      r4,r0
00001c  d013              BEQ      |L9.70|
00001e  4812              LDR      r0,|L9.104|
000020  4284              CMP      r4,r0
000022  d010              BEQ      |L9.70|
000024  4811              LDR      r0,|L9.108|
000026  4284              CMP      r4,r0
000028  d00d              BEQ      |L9.70|
00002a  4811              LDR      r0,|L9.112|
00002c  4284              CMP      r4,r0
00002e  d00a              BEQ      |L9.70|
000030  4810              LDR      r0,|L9.116|
000032  4284              CMP      r4,r0
000034  d007              BEQ      |L9.70|
000036  4810              LDR      r0,|L9.120|
000038  4284              CMP      r4,r0
00003a  d004              BEQ      |L9.70|
00003c  f44f71c9          MOV      r1,#0x192
000040  480e              LDR      r0,|L9.124|
000042  f7fffffe          BL       assert_failed
                  |L9.70|
;;;403      assert_param(IS_GPIO_PIN(GPIO_Pin));
000046  b925              CBNZ     r5,|L9.82|
000048  f2401193          MOV      r1,#0x193
00004c  480b              LDR      r0,|L9.124|
00004e  f7fffffe          BL       assert_failed
                  |L9.82|
;;;404    
;;;405      GPIOx->BSRRH = GPIO_Pin;
000052  8365              STRH     r5,[r4,#0x1a]
;;;406    }
000054  bd70              POP      {r4-r6,pc}
;;;407    
                          ENDP

000056  0000              DCW      0x0000
                  |L9.88|
                          DCD      0x40020000
                  |L9.92|
                          DCD      0x40020400
                  |L9.96|
                          DCD      0x40020800
                  |L9.100|
                          DCD      0x40020c00
                  |L9.104|
                          DCD      0x40021000
                  |L9.108|
                          DCD      0x40021400
                  |L9.112|
                          DCD      0x40021800
                  |L9.116|
                          DCD      0x40021c00
                  |L9.120|
                          DCD      0x40022000
                  |L9.124|
                          DCD      ||.conststring||

                          AREA ||i.GPIO_SetBits||, CODE, READONLY, ALIGN=2

                  GPIO_SetBits PROC
;;;379      */
;;;380    void GPIO_SetBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
000000  b570              PUSH     {r4-r6,lr}
;;;381    {
000002  4604              MOV      r4,r0
;;;382      /* Check the parameters */
;;;383      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
000004  4814              LDR      r0,|L10.88|
000006  460d              MOV      r5,r1                 ;381
000008  4284              CMP      r4,r0
00000a  d01c              BEQ      |L10.70|
00000c  4813              LDR      r0,|L10.92|
00000e  4284              CMP      r4,r0
000010  d019              BEQ      |L10.70|
000012  4813              LDR      r0,|L10.96|
000014  4284              CMP      r4,r0
000016  d016              BEQ      |L10.70|
000018  4812              LDR      r0,|L10.100|
00001a  4284              CMP      r4,r0
00001c  d013              BEQ      |L10.70|
00001e  4812              LDR      r0,|L10.104|
000020  4284              CMP      r4,r0
000022  d010              BEQ      |L10.70|
000024  4811              LDR      r0,|L10.108|
000026  4284              CMP      r4,r0
000028  d00d              BEQ      |L10.70|
00002a  4811              LDR      r0,|L10.112|
00002c  4284              CMP      r4,r0
00002e  d00a              BEQ      |L10.70|
000030  4810              LDR      r0,|L10.116|
000032  4284              CMP      r4,r0
000034  d007              BEQ      |L10.70|
000036  4810              LDR      r0,|L10.120|
000038  4284              CMP      r4,r0
00003a  d004              BEQ      |L10.70|
00003c  f240117f          MOV      r1,#0x17f
000040  480e              LDR      r0,|L10.124|
000042  f7fffffe          BL       assert_failed
                  |L10.70|
;;;384      assert_param(IS_GPIO_PIN(GPIO_Pin));
000046  b925              CBNZ     r5,|L10.82|
000048  f44f71c0          MOV      r1,#0x180
00004c  480b              LDR      r0,|L10.124|
00004e  f7fffffe          BL       assert_failed
                  |L10.82|
;;;385    
;;;386      GPIOx->BSRRL = GPIO_Pin;
000052  8325              STRH     r5,[r4,#0x18]
;;;387    }
000054  bd70              POP      {r4-r6,pc}
;;;388    
                          ENDP

000056  0000              DCW      0x0000
                  |L10.88|
                          DCD      0x40020000
                  |L10.92|
                          DCD      0x40020400
                  |L10.96|
                          DCD      0x40020800
                  |L10.100|
                          DCD      0x40020c00
                  |L10.104|
                          DCD      0x40021000
                  |L10.108|
                          DCD      0x40021400
                  |L10.112|
                          DCD      0x40021800
                  |L10.116|
                          DCD      0x40021c00
                  |L10.120|
                          DCD      0x40022000
                  |L10.124|
                          DCD      ||.conststring||

                          AREA ||i.GPIO_StructInit||, CODE, READONLY, ALIGN=1

                  GPIO_StructInit PROC
;;;233      */
;;;234    void GPIO_StructInit(GPIO_InitTypeDef* GPIO_InitStruct)
000000  f64f71ff          MOV      r1,#0xffff
;;;235    {
;;;236      /* Reset GPIO init structure parameters values */
;;;237      GPIO_InitStruct->GPIO_Pin  = GPIO_Pin_All;
;;;238      GPIO_InitStruct->GPIO_Mode = GPIO_Mode_IN;
000004  6001              STR      r1,[r0,#0]
000006  2100              MOVS     r1,#0
000008  7101              STRB     r1,[r0,#4]
;;;239      GPIO_InitStruct->GPIO_Speed = GPIO_Speed_2MHz;
00000a  7141              STRB     r1,[r0,#5]
;;;240      GPIO_InitStruct->GPIO_OType = GPIO_OType_PP;
00000c  7181              STRB     r1,[r0,#6]
;;;241      GPIO_InitStruct->GPIO_PuPd = GPIO_PuPd_NOPULL;
00000e  71c1              STRB     r1,[r0,#7]
;;;242    }
000010  4770              BX       lr
;;;243    
                          ENDP


                          AREA ||i.GPIO_ToggleBits||, CODE, READONLY, ALIGN=2

                  GPIO_ToggleBits PROC
;;;455      */
;;;456    void GPIO_ToggleBits(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
000000  b570              PUSH     {r4-r6,lr}
;;;457    {
000002  4604              MOV      r4,r0
;;;458      /* Check the parameters */
;;;459      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
000004  4812              LDR      r0,|L12.80|
000006  460d              MOV      r5,r1                 ;457
000008  4284              CMP      r4,r0
00000a  d01c              BEQ      |L12.70|
00000c  4811              LDR      r0,|L12.84|
00000e  4284              CMP      r4,r0
000010  d019              BEQ      |L12.70|
000012  4811              LDR      r0,|L12.88|
000014  4284              CMP      r4,r0
000016  d016              BEQ      |L12.70|
000018  4810              LDR      r0,|L12.92|
00001a  4284              CMP      r4,r0
00001c  d013              BEQ      |L12.70|
00001e  4810              LDR      r0,|L12.96|
000020  4284              CMP      r4,r0
000022  d010              BEQ      |L12.70|
000024  480f              LDR      r0,|L12.100|
000026  4284              CMP      r4,r0
000028  d00d              BEQ      |L12.70|
00002a  480f              LDR      r0,|L12.104|
00002c  4284              CMP      r4,r0
00002e  d00a              BEQ      |L12.70|
000030  480e              LDR      r0,|L12.108|
000032  4284              CMP      r4,r0
000034  d007              BEQ      |L12.70|
000036  480e              LDR      r0,|L12.112|
000038  4284              CMP      r4,r0
00003a  d004              BEQ      |L12.70|
00003c  f24011cb          MOV      r1,#0x1cb
000040  480c              LDR      r0,|L12.116|
000042  f7fffffe          BL       assert_failed
                  |L12.70|
;;;460    
;;;461      GPIOx->ODR ^= GPIO_Pin;
000046  6960              LDR      r0,[r4,#0x14]
000048  4068              EORS     r0,r0,r5
00004a  6160              STR      r0,[r4,#0x14]
;;;462    }
00004c  bd70              POP      {r4-r6,pc}
;;;463    
                          ENDP

00004e  0000              DCW      0x0000
                  |L12.80|
                          DCD      0x40020000
                  |L12.84|
                          DCD      0x40020400
                  |L12.88|
                          DCD      0x40020800
                  |L12.92|
                          DCD      0x40020c00
                  |L12.96|
                          DCD      0x40021000
                  |L12.100|
                          DCD      0x40021400
                  |L12.104|
                          DCD      0x40021800
                  |L12.108|
                          DCD      0x40021c00
                  |L12.112|
                          DCD      0x40022000
                  |L12.116|
                          DCD      ||.conststring||

                          AREA ||i.GPIO_Write||, CODE, READONLY, ALIGN=2

                  GPIO_Write PROC
;;;441      */
;;;442    void GPIO_Write(GPIO_TypeDef* GPIOx, uint16_t PortVal)
000000  b570              PUSH     {r4-r6,lr}
;;;443    {
000002  4604              MOV      r4,r0
;;;444      /* Check the parameters */
;;;445      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
000004  4811              LDR      r0,|L13.76|
000006  460d              MOV      r5,r1                 ;443
000008  4284              CMP      r4,r0
00000a  d01c              BEQ      |L13.70|
00000c  4810              LDR      r0,|L13.80|
00000e  4284              CMP      r4,r0
000010  d019              BEQ      |L13.70|
000012  4810              LDR      r0,|L13.84|
000014  4284              CMP      r4,r0
000016  d016              BEQ      |L13.70|
000018  480f              LDR      r0,|L13.88|
00001a  4284              CMP      r4,r0
00001c  d013              BEQ      |L13.70|
00001e  480f              LDR      r0,|L13.92|
000020  4284              CMP      r4,r0
000022  d010              BEQ      |L13.70|
000024  480e              LDR      r0,|L13.96|
000026  4284              CMP      r4,r0
000028  d00d              BEQ      |L13.70|
00002a  480e              LDR      r0,|L13.100|
00002c  4284              CMP      r4,r0
00002e  d00a              BEQ      |L13.70|
000030  480d              LDR      r0,|L13.104|
000032  4284              CMP      r4,r0
000034  d007              BEQ      |L13.70|
000036  480d              LDR      r0,|L13.108|
000038  4284              CMP      r4,r0
00003a  d004              BEQ      |L13.70|
00003c  f24011bd          MOV      r1,#0x1bd
000040  480b              LDR      r0,|L13.112|
000042  f7fffffe          BL       assert_failed
                  |L13.70|
;;;446    
;;;447      GPIOx->ODR = PortVal;
000046  6165              STR      r5,[r4,#0x14]
;;;448    }
000048  bd70              POP      {r4-r6,pc}
;;;449    
                          ENDP

00004a  0000              DCW      0x0000
                  |L13.76|
                          DCD      0x40020000
                  |L13.80|
                          DCD      0x40020400
                  |L13.84|
                          DCD      0x40020800
                  |L13.88|
                          DCD      0x40020c00
                  |L13.92|
                          DCD      0x40021000
                  |L13.96|
                          DCD      0x40021400
                  |L13.100|
                          DCD      0x40021800
                  |L13.104|
                          DCD      0x40021c00
                  |L13.108|
                          DCD      0x40022000
                  |L13.112|
                          DCD      ||.conststring||

                          AREA ||i.GPIO_WriteBit||, CODE, READONLY, ALIGN=2

                  GPIO_WriteBit PROC
;;;418      */
;;;419    void GPIO_WriteBit(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, BitAction BitVal)
000000  b570              PUSH     {r4-r6,lr}
;;;420    {
000002  4605              MOV      r5,r0
;;;421      /* Check the parameters */
;;;422      assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
000004  482d              LDR      r0,|L14.188|
000006  4616              MOV      r6,r2                 ;420
000008  460c              MOV      r4,r1                 ;420
00000a  4285              CMP      r5,r0
00000c  d01c              BEQ      |L14.72|
00000e  482c              LDR      r0,|L14.192|
000010  4285              CMP      r5,r0
000012  d019              BEQ      |L14.72|
000014  482b              LDR      r0,|L14.196|
000016  4285              CMP      r5,r0
000018  d016              BEQ      |L14.72|
00001a  482b              LDR      r0,|L14.200|
00001c  4285              CMP      r5,r0
00001e  d013              BEQ      |L14.72|
000020  482a              LDR      r0,|L14.204|
000022  4285              CMP      r5,r0
000024  d010              BEQ      |L14.72|
000026  482a              LDR      r0,|L14.208|
000028  4285              CMP      r5,r0
00002a  d00d              BEQ      |L14.72|
00002c  4829              LDR      r0,|L14.212|
00002e  4285              CMP      r5,r0
000030  d00a              BEQ      |L14.72|
000032  4829              LDR      r0,|L14.216|
000034  4285              CMP      r5,r0
000036  d007              BEQ      |L14.72|
000038  4828              LDR      r0,|L14.220|
00003a  4285              CMP      r5,r0
00003c  d004              BEQ      |L14.72|
00003e  f44f71d3          MOV      r1,#0x1a6
000042  4827              LDR      r0,|L14.224|
000044  f7fffffe          BL       assert_failed
                  |L14.72|
;;;423      assert_param(IS_GET_GPIO_PIN(GPIO_Pin));
000048  2c01              CMP      r4,#1
00004a  d02a              BEQ      |L14.162|
00004c  2c02              CMP      r4,#2
00004e  d028              BEQ      |L14.162|
000050  2c04              CMP      r4,#4
000052  d026              BEQ      |L14.162|
000054  2c08              CMP      r4,#8
000056  d024              BEQ      |L14.162|
000058  2c10              CMP      r4,#0x10
00005a  d022              BEQ      |L14.162|
00005c  2c20              CMP      r4,#0x20
00005e  d020              BEQ      |L14.162|
000060  2c40              CMP      r4,#0x40
000062  d01e              BEQ      |L14.162|
000064  2c80              CMP      r4,#0x80
000066  d01c              BEQ      |L14.162|
000068  f5b47f80          CMP      r4,#0x100
00006c  d019              BEQ      |L14.162|
00006e  f5b47f00          CMP      r4,#0x200
000072  d016              BEQ      |L14.162|
000074  f5b46f80          CMP      r4,#0x400
000078  d013              BEQ      |L14.162|
00007a  f5b46f00          CMP      r4,#0x800
00007e  d010              BEQ      |L14.162|
000080  f5b45f80          CMP      r4,#0x1000
000084  d00d              BEQ      |L14.162|
000086  f5b45f00          CMP      r4,#0x2000
00008a  d00a              BEQ      |L14.162|
00008c  f5b44f80          CMP      r4,#0x4000
000090  d007              BEQ      |L14.162|
000092  f5b44f00          CMP      r4,#0x8000
000096  d004              BEQ      |L14.162|
000098  f24011a7          MOV      r1,#0x1a7
00009c  4810              LDR      r0,|L14.224|
00009e  f7fffffe          BL       assert_failed
                  |L14.162|
;;;424      assert_param(IS_GPIO_BIT_ACTION(BitVal));
0000a2  b146              CBZ      r6,|L14.182|
0000a4  2e01              CMP      r6,#1
0000a6  d004              BEQ      |L14.178|
0000a8  f44f71d4          MOV      r1,#0x1a8
0000ac  480c              LDR      r0,|L14.224|
0000ae  f7fffffe          BL       assert_failed
                  |L14.178|
;;;425    
;;;426      if (BitVal != Bit_RESET)
;;;427      {
;;;428        GPIOx->BSRRL = GPIO_Pin;
0000b2  832c              STRH     r4,[r5,#0x18]
;;;429      }
;;;430      else
;;;431      {
;;;432        GPIOx->BSRRH = GPIO_Pin ;
;;;433      }
;;;434    }
0000b4  bd70              POP      {r4-r6,pc}
                  |L14.182|
0000b6  836c              STRH     r4,[r5,#0x1a]         ;432
0000b8  bd70              POP      {r4-r6,pc}
;;;435    
                          ENDP

0000ba  0000              DCW      0x0000
                  |L14.188|
                          DCD      0x40020000
                  |L14.192|
                          DCD      0x40020400
                  |L14.196|
                          DCD      0x40020800
                  |L14.200|
                          DCD      0x40020c00
                  |L14.204|
                          DCD      0x40021000
                  |L14.208|
                          DCD      0x40021400
                  |L14.212|
                          DCD      0x40021800
                  |L14.216|
                          DCD      0x40021c00
                  |L14.220|
                          DCD      0x40022000
                  |L14.224|
                          DCD      ||.conststring||

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  2e2e5c4f          DCB      "..\\OS\\bsp\\stm32f40x\\Libraries\\STM32F4xx_StdPeriph_"
000004  535c6273
000008  705c7374
00000c  6d333266
000010  3430785c
000014  4c696272
000018  61726965
00001c  735c5354
000020  4d333246
000024  3478785f
000028  53746450
00002c  65726970
000030  685f    
000032  44726976          DCB      "Driver\\src\\stm32f4xx_gpio.c",0
000036  65725c73
00003a  72635c73
00003e  746d3332
000042  66347878
000046  5f677069
00004a  6f2e6300

;*** Start embedded assembler ***

#line 1 "..\\OS\\bsp\\stm32f40x\\Libraries\\STM32F4xx_StdPeriph_Driver\\src\\stm32f4xx_gpio.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_gpio_c_f8e8e39a____REV16|
#line 114 "..\\OS\\bsp\\stm32f40x\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___16_stm32f4xx_gpio_c_f8e8e39a____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___16_stm32f4xx_gpio_c_f8e8e39a____REVSH|
#line 128
|__asm___16_stm32f4xx_gpio_c_f8e8e39a____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
