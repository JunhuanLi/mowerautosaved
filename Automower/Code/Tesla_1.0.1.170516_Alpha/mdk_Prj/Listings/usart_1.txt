; generated by Component: ARM Compiler 5.06 update 2 (build 183) Tool: ArmCC [4d35cd]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\usart_1.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\usart_1.d --cpu=Cortex-M4.fp --apcs=interwork --diag_suppress=9931 -I..\OS -I..\OS\components\finsh -I..\OS\include -I..\OS\libcpu\arm\common -I..\OS\libcpu\arm\cortex-m4 -I..\OS\bsp\stm32f40x\Libraries\CMSIS\Include -I..\OS\bsp\stm32f40x\Libraries\STM32F4xx_StdPeriph_Driver\inc -I..\OS\bsp\stm32f40x\Libraries\CMSIS\ST\STM32F4xx\Include -I..\OS\bsp\stm32f40x\applications -I..\OS\bsp\stm32f40x\drivers -I..\OS\bsp\stm32f40x -I..\ext\inc -I..\tb_Application -I..\tb_Algorithm -I..\tb_Driver -IE:\Robotic_Platform\mdk_Prj\RTE -Id:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.8.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -Id:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=520 -DSTM32F429xx -DUSE_STDPERIPH_DRIVER -DSTM32F429xx --omf_browse=.\objects\usart_1.crf ..\OS\bsp\stm32f40x\drivers\usart.c]
                          THUMB

                          AREA ||i.rt_hw_usart_init||, CODE, READONLY, ALIGN=2

                  rt_hw_usart_init PROC
;;;277     */
;;;278    void rt_hw_usart_init()
000000  b570              PUSH     {r4-r6,lr}
000002  2101              MOVS     r1,#1
;;;279    {
000004  b086              SUB      sp,sp,#0x18
000006  4608              MOV      r0,r1
000008  f7fffffe          BL       RCC_AHB1PeriphClockCmd
00000c  2101              MOVS     r1,#1
00000e  2010              MOVS     r0,#0x10
000010  f7fffffe          BL       RCC_APB2PeriphClockCmd
000014  2002              MOVS     r0,#2
000016  f88d0014          STRB     r0,[sp,#0x14]
00001a  2400              MOVS     r4,#0
00001c  f88d4016          STRB     r4,[sp,#0x16]
000020  2501              MOVS     r5,#1
000022  f44f60c0          MOV      r0,#0x600
000026  4e20              LDR      r6,|L1.168|
000028  f88d5017          STRB     r5,[sp,#0x17]
00002c  9004              STR      r0,[sp,#0x10]
00002e  f88d4015          STRB     r4,[sp,#0x15]
000032  a904              ADD      r1,sp,#0x10
000034  4630              MOV      r0,r6
000036  f7fffffe          BL       GPIO_Init
00003a  2207              MOVS     r2,#7
00003c  2109              MOVS     r1,#9
00003e  4630              MOV      r0,r6
000040  f7fffffe          BL       GPIO_PinAFConfig
000044  2207              MOVS     r2,#7
000046  210a              MOVS     r1,#0xa
000048  4630              MOV      r0,r6
00004a  f7fffffe          BL       GPIO_PinAFConfig
00004e  2025              MOVS     r0,#0x25
000050  f88d0010          STRB     r0,[sp,#0x10]
000054  f88d4012          STRB     r4,[sp,#0x12]
000058  f88d5013          STRB     r5,[sp,#0x13]
00005c  a804              ADD      r0,sp,#0x10
00005e  f7fffffe          BL       NVIC_Init
;;;280    	USART_InitTypeDef USART_InitStructure;
;;;281    
;;;282    	RCC_Configuration();
;;;283    
;;;284    	GPIO_Configuration();
;;;285    
;;;286    	NVIC_Configuration();
;;;287    
;;;288    	DMA_Configuration();
;;;289    
;;;290    	/* uart init */
;;;291    #ifdef RT_USING_UART1
;;;292    	USART_InitStructure.USART_BaudRate = 115200;
000062  f44f30e1          MOV      r0,#0x1c200
;;;293    	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
000066  f8ad4004          STRH     r4,[sp,#4]
00006a  9000              STR      r0,[sp,#0]
;;;294    	USART_InitStructure.USART_StopBits = USART_StopBits_1;
00006c  f8ad4006          STRH     r4,[sp,#6]
;;;295    	USART_InitStructure.USART_Parity = USART_Parity_No;
000070  f8ad4008          STRH     r4,[sp,#8]
;;;296    	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
000074  f8ad400c          STRH     r4,[sp,#0xc]
;;;297    	USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
000078  200c              MOVS     r0,#0xc
;;;298    	USART_Init(USART1, &USART_InitStructure);
00007a  4c0c              LDR      r4,|L1.172|
00007c  f8ad000a          STRH     r0,[sp,#0xa]          ;297
000080  4669              MOV      r1,sp
000082  4620              MOV      r0,r4
000084  f7fffffe          BL       USART_Init
;;;299    
;;;300    	/* register uart1 */
;;;301    	rt_hw_serial_register(&uart1_device, "uart1",
000088  4b09              LDR      r3,|L1.176|
00008a  f2401243          MOV      r2,#0x143
00008e  a109              ADR      r1,|L1.180|
000090  480a              LDR      r0,|L1.188|
000092  f7fffffe          BL       rt_hw_serial_register
;;;302    		RT_DEVICE_FLAG_RDWR | RT_DEVICE_FLAG_INT_RX | RT_DEVICE_FLAG_STREAM,
;;;303    		&uart1);
;;;304    
;;;305    	/* enable interrupt */
;;;306    	USART_ITConfig(USART1, USART_IT_RXNE, ENABLE);
000096  2201              MOVS     r2,#1
000098  f2405125          MOV      r1,#0x525
00009c  4620              MOV      r0,r4
00009e  f7fffffe          BL       USART_ITConfig
;;;307    #endif
;;;308    
;;;309    #ifdef RT_USING_UART2
;;;310    	USART_InitStructure.USART_BaudRate = 115200;
;;;311    	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
;;;312    	USART_InitStructure.USART_StopBits = USART_StopBits_1;
;;;313    	USART_InitStructure.USART_Parity = USART_Parity_No;
;;;314    	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
;;;315    	USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
;;;316    	USART_Init(USART2, &USART_InitStructure);
;;;317    
;;;318    	/* register uart2 */
;;;319    	rt_hw_serial_register(&uart2_device, "uart2",
;;;320    		RT_DEVICE_FLAG_RDWR | RT_DEVICE_FLAG_INT_RX | RT_DEVICE_FLAG_STREAM,
;;;321    		&uart2);
;;;322    
;;;323    	/* Enable USART2 DMA Rx request */
;;;324    	USART_ITConfig(USART2, USART_IT_RXNE, ENABLE);
;;;325    #endif
;;;326    
;;;327    #ifdef RT_USING_UART3
;;;328    	USART_InitStructure.USART_BaudRate = 115200;
;;;329    	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
;;;330    	USART_InitStructure.USART_StopBits = USART_StopBits_1;
;;;331    	USART_InitStructure.USART_Parity = USART_Parity_No;
;;;332    	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
;;;333    	USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
;;;334    	USART_Init(USART3, &USART_InitStructure);
;;;335    
;;;336    //	uart3_dma_tx.dma_channel= UART3_TX_DMA;
;;;337    
;;;338    	/* register uart3 */
;;;339    	rt_hw_serial_register(&uart3_device, "uart3",
;;;340    		RT_DEVICE_FLAG_RDWR | RT_DEVICE_FLAG_INT_RX | RT_DEVICE_FLAG_DMA_TX,
;;;341    		&uart3);
;;;342    
;;;343    	/* Enable USART3 DMA Tx request */
;;;344    	USART_DMACmd(USART3, USART_DMAReq_Tx , ENABLE);
;;;345    
;;;346    	/* enable interrupt */
;;;347    	USART_ITConfig(USART3, USART_IT_RXNE, ENABLE);
;;;348    #endif
;;;349    }
0000a2  b006              ADD      sp,sp,#0x18
0000a4  bd70              POP      {r4-r6,pc}
;;;350    
                          ENDP

0000a6  0000              DCW      0x0000
                  |L1.168|
                          DCD      0x40020000
                  |L1.172|
                          DCD      0x40011000
                  |L1.176|
                          DCD      ||.data||
                  |L1.180|
0000b4  75617274          DCB      "uart1",0
0000b8  3100    
0000ba  00                DCB      0
0000bb  00                DCB      0
                  |L1.188|
                          DCD      ||area_number.4||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  uart1_int_rx
                          %        72

                          AREA ||area_number.4||, DATA, NOINIT, ALIGN=2

                          EXPORTAS ||area_number.4||, ||.bss||
                  uart1_device
                          %        64

                          AREA ||.data||, DATA, ALIGN=2

                  uart1
                          DCD      0x40011000
                          DCD      uart1_int_rx
                          DCD      0x00000000

                          AREA ||area_number.7||, DATA, ALIGN=2

                          EXPORTAS ||area_number.7||, ||.data||
                  uart2_debug
                          DCD      0x40004400

;*** Start embedded assembler ***

#line 1 "..\\OS\\bsp\\stm32f40x\\drivers\\usart.c"
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___7_usart_c_uart1____REV16|
#line 114 "..\\OS\\bsp\\stm32f40x\\Libraries\\CMSIS\\Include\\core_cmInstr.h"
|__asm___7_usart_c_uart1____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE
	THUMB
	EXPORT |__asm___7_usart_c_uart1____REVSH|
#line 128
|__asm___7_usart_c_uart1____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
